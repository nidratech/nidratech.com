(window['webpackJsonp'] = window['webpackJsonp'] || []).push([
  ['static\\development\\pages\\_app.js'],
  {
    /***/ './components/Button.tsx':
      /*!*******************************!*\
  !*** ./components/Button.tsx ***!
  \*******************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! @babel/runtime/helpers/esm/extends */ './node_modules/@babel/runtime/helpers/esm/extends.js'
          );
          /* harmony import */ var _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! @babel/runtime/helpers/esm/objectWithoutProperties */ './node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! react */ './node_modules/react/index.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_2__
          );
          /* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! styled-components */ './node_modules/styled-components/dist/styled-components.browser.esm.js'
          );
          /* harmony import */ var polished__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! polished */ './node_modules/polished/dist/polished.esm.js'
          );

          var _jsxFileName = 'F:\\Projects\\nidratech.com\\components\\Button.tsx';

          var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;

          function Button(_ref, ref) {
            var children = _ref.children,
              onClick = _ref.onClick,
              props = Object(
                _babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[
                  'default'
                ]
              )(_ref, ['children', 'onClick']);

            return (
              // @ts-ignore
              __jsx(
                StyledButton,
                Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
                  {
                    ref: ref,
                    onClick: onClick,
                  },
                  props,
                  {
                    __self: this,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 16,
                      columnNumber: 5,
                    },
                  }
                ),
                children
              )
            );
          }

          _c = Button;
          var StyledButton = styled_components__WEBPACK_IMPORTED_MODULE_3__[
            'default'
          ].button.withConfig({
            displayName: 'StyledButton',
            componentId: 'ajxmy-0',
          })(
            [
              'min-width:8rem;background-color:',
              ';font-size:0.9em;color:',
              ';text-align:center;user-select:none;border:1px solid transparent;padding:0.5rem 1rem;line-height:1.5;border-radius:0.25rem;cursor:pointer;transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;:focus,:hover{background-color:',
              ';}:disabled{cursor:not-allowed;background-color:',
              ';}',
            ],
            function (_ref2) {
              var theme = _ref2.theme;
              return theme.colors.brand;
            },
            function (_ref3) {
              var theme = _ref3.theme;
              return theme.colors.white;
            },
            function (_ref4) {
              var theme = _ref4.theme;
              return Object(polished__WEBPACK_IMPORTED_MODULE_4__['darken'])(
                0.05,
                theme.colors.brand
              );
            },
            function (_ref5) {
              var theme = _ref5.theme;
              return Object(polished__WEBPACK_IMPORTED_MODULE_4__['lighten'])(
                0.2,
                theme.colors.brand
              );
            }
          );
          _c2 = StyledButton;
          /* harmony default export */ __webpack_exports__['default'] = _c3 = Object(
            react__WEBPACK_IMPORTED_MODULE_2__['forwardRef']
          )(Button);

          var _c, _c2, _c3;

          $RefreshReg$(_c, 'Button');
          $RefreshReg$(_c2, 'StyledButton');
          $RefreshReg$(_c3, '%default%');

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './components/Container.tsx':
      /*!**********************************!*\
  !*** ./components/Container.tsx ***!
  \**********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! styled-components */ './node_modules/styled-components/dist/styled-components.browser.esm.js'
          );

          /* harmony default export */ __webpack_exports__[
            'default'
          ] = styled_components__WEBPACK_IMPORTED_MODULE_0__['default'].div.withConfig({
            componentId: 'gy3cny-0',
          })(
            [
              'max-width:60rem;margin:auto;margin-top:',
              ';padding:',
              ';@media (max-width:48rem){max-width:auto;margin:0 ',
              ';padding:',
              ';}',
            ],
            function (_ref) {
              var theme = _ref.theme;
              return theme.spacing.medium;
            },
            function (_ref2) {
              var theme = _ref2.theme;
              return '0 '.concat(theme.spacing.large);
            },
            function (_ref3) {
              var theme = _ref3.theme;
              return '0 '.concat(theme.spacing.medium);
            },
            function (_ref4) {
              var theme = _ref4.theme;
              return '0 '.concat(theme.spacing.small);
            }
          );

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './components/HighlightLine.ts':
      /*!*************************************!*\
  !*** ./components/HighlightLine.ts ***!
  \*************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! styled-components */ './node_modules/styled-components/dist/styled-components.browser.esm.js'
          );

          /* harmony default export */ __webpack_exports__[
            'default'
          ] = styled_components__WEBPACK_IMPORTED_MODULE_0__['default'].div.withConfig({
            componentId: 'sc-19nb6zv-0',
          })(
            [
              'border-radius:0.5rem;background-color:',
              ';opacity:0.7;height:0.5em;transition:0.33s all;',
            ],
            function (_ref) {
              var theme = _ref.theme;
              return theme.colors.brand;
            }
          );

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './components/NidratechLogo.tsx':
      /*!**************************************!*\
  !*** ./components/NidratechLogo.tsx ***!
  \**************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! @babel/runtime/helpers/esm/extends */ './node_modules/@babel/runtime/helpers/esm/extends.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! react */ './node_modules/react/index.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_1__
          );

          var _jsxFileName = 'F:\\Projects\\nidratech.com\\components\\NidratechLogo.tsx';

          var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;

          function NidratechLogo(props) {
            return __jsx(
              'svg',
              Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
                {
                  width: 489,
                  height: 147,
                  viewBox: '0 0 489 147',
                },
                props,
                {
                  __self: this,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 5,
                    columnNumber: 5,
                  },
                }
              ),
              __jsx('image', {
                x: 7,
                y: 79,
                width: 476,
                height: 64,
                xlinkHref:
                  'data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAAdwAAABACAYAAACwcMZ5AAAOFklEQVR4nO2djXHbuhKFkTdpAK8EugS7BLkEuQSpBKkEqwSrhKgEuwSrBKsFtHAH8qFCK1gAJAEQP/vNZDJz4ytTJLEH2D1Y/JJSSiHEo/jJRSl1EQ1C3I8rSqmPKXfE9plzmHo9KYn13U2UcD9cSClXhh85K6VUhN/VCSG60J+7BK5nn/I9nIF+zOelfrmUUt8fiXdCGn7kem1LjLMYcTkWlmtVv/EP7/f/IKV8iDHIQ4HAdH/dmg+l1POMX2O6Hz2/InzmZL6f6w8u+HPG3x8ZTJyifHcTd/fjA/fhtGQQG4Plnd4LIQ4RfuVaCPEa4XOXwDU2k72HM9Dv7JzYNQq8byvcG9NEzwjG2eVujMXWihhxORbUtX78Jn6hxP/wlNkXYez0K5bb4JFS6oFxKkl4AtEHkx3uwUEpdcz8mtfEf99EElymMZDV2OCPaRXrS/85mjcppY4xxxqyTDH5n+WzH6WUb+V/xebRA2MnhPiUUn5JKTcN3pAOQeGTSNkuDtJQ1LPppJSUGDOMEy20iOdfiAdzxNaEfj/fpZTvuY6xHLAJrmbTaICulV54WhXeRwSFXQbXco/rebDgMqOR3+wgtCnG/Apj7I801LxaxyW4AgE6d7MBM45eeN+RYmqN1wyzN07BbfRZMRPBSvNzoTr9Glk11o4BVA33nvfcTVQFE8Ik8Tj4uxvhxlxhUOwXqm/GMIg8Dkwgthm2zt50Mw12QUC62EdMNzBQheLUO08DsyYmEOfA1x+Kxd8BECy+YlXrK7S9AepmuByaLQeuWznwiPikjTvEl20B/okk+Aoum6giEchk8OMzMED6QbF2CI/ssxhKqW2B3/2e62fiHvQuXOr7r/RKN/X3NuCb6gsquAiqwV3sllWNytFUU5PRB+/9q8c7pcX96GOmxEJreI8Og/G19hBfHV/05zQvuj4p5R5toqplC0HVqG9OEJIHIcTWI7BuajLJ4R4c8f1tA32zZE0XaWJTwDJds2RPBUMBEXz3EFs9adMZy/3UnQv9+EKG6Pl+0m9Ai27z7+4YwRXYYtH8TSuJwcB4wECzpa2qEl3x9/tvMemgeF2wPmoaTwrPyjRJ4vHH/MNAbG3lpDOE9hCyPKgzBBDeF0d8eWvdwTxWcAWCExfCC0QPNJQFbLPa6kRXfH/3o0N0k39ny1agIwKiaZX7yOOPMfDqEFu9mn2K2QhHZ9U84kvT7uUpgitbv2klgwH37JFmrW4lBdGlvvdqgdk3VV8/Dv42rRh4lcvcQEnE9k5sMdmOziC+UKIrl5jc5oJLcKmbptNvf+q8JfUzSLPaRLfWTIYtrZ66lmv6fbd2nFjlngw/s+YJLyP+bv2xeWuSO4Tx3tpEd91qatkluFtLcFqxiapsHKIrK+qzewPBgHL6rlLVchFwTL/r/nkYzVO8ymUw6bItfBbbjjMQXSqFnWPzmehYBRcONlvdi01UhQPRpWaiq4pTy1QgSNXRyfR7LqiD3cAYND0fHneMrUXjUnvrb0B0X0z/5OFqrhJnDRcBwLb3j01U5WNzF9Y6EzWlasWYU1OmMmggfw8VIE3/vWvd8dkyiLnU2PxIVbN1gQnj8Fquxqpcri81XqYp3BwqQLGJqnBQM6QGQFdpFoOaYacQMWoVTY2xE5unmDuoco9yZCWX4IAszYtS6qXVs9bFSJeyLfXIJqrCwaSqmXqLrbtQgpUjtRXIeP8d5inur9wYWN1S7+ghN0GDSVOvaqkJZTN4Cy4GPZuo6sa2yq3xtJrk5wMjW2ASSVcwop4NnyLUHlRmg9q7zWTCqH24niYqDgCF4jAT1VgvpCaPMT0JlFnKaiLBqsX0M026PVvFcW5y0A5STHhGN77wMFHxcX5lQ82QeSI1k5F9k02YVsHcX7ktbOOQV7eZM6XTlI+J6o1NVMVCPld2xc7GtBr1TgMiA2FawfBkqB2oZ33k1W3+TBJcYDNRPbbcvqtkkLq0PdeaoCaFwWu7g+PM7jmNDJQmcV5xVql+BsdummhyX2tpTBZcDxPVesljz5hZLLZHNTEpRcrVN9kX6uc5rVw/5PhjB3AZzFnh+pioXtlEVSRk56lavqAtPR7pQHKqb/Ko1bTFPMX9leuHmiDy6rYQZgmuYBNVrZAiUNG+T0pwY6STqb7JU1cl3F+5TVhwC2e24Ao2UVUHygXU9qBaBJfKvMQIXsZD5qf2usUklw+nbw9KcJPvJ2emEURwAZuo6oIS3OKzFZbmE2LGqpP6XR0h7nO3cHB/5fagFi3Ntkosjd+hrldP16WUWnTfiRfjaqJqtWl1gdS8xYAy853H1lQ9ILdxzPzcE9FPd8MpxnEsOEk5+zrUHZ6DpgU3Q3MumQUMJrgCJiqILtVXWZuo/jmCjMmSc437OzE4qQERo3GAKRic5gZJ/f9LKU+GZ3Ttr9x6EB7J+0K/9znA5Ij33hZ0bnfIlPIVTxMVN1xnkgPzHjU4L6HPD0Xq2pTtCTXhpD6Hdwa0A9dvCyK44Ao+zq92inxuEFvbSibGkWZeh8xPhc1TDFMWUQQXuExUfLJQmRSXwsJKk/IWCDR9D1r3tByhFjptTZmnWHQZJjOC1nCHeJioNqjnsomKiQKMJjtHw46z5ei7OVCCF0NwTZPXNTez92YpkxnXXxsjmuAKfxPVOVJnHyZzIrlDHzHBW3vsGdZi+xy66bulb3LwBvOY2B4NAr9i85QfSqnnEq6ToPltYEqpXxlcxg3ENWP5KqrgCtSZpJQHy1YMXc994sCQHSkG8lLuUBFLbEFss5Tpc00r6l2k2jSTGL0oYdtL+cSs4d5QSu0taRs2UZVFDWkwXbN9inicmUn8omVy8LmmCSv3V64L4/vKrXPLIYngghdH9yI2UeUFtcItOROhhekJE8Ao4LAOUyo7dj2V6q/MW4TqoZVjM6slekq5B7WmFzZR5Y9jn3RpgnuG0B4TlS0ogVOROxpR323H5qlqOBMTYe5rUAjJBFf8NVHtLX2V2USVB9SMWRVWa79ErNP+g6VvsrAYB2Nz7a/MY6oKqBXu2tFsiMmEpIIrviP2EYHJZqJ6SBUkGSNJTiUJ5S5Eu0ZTSaJDPTVV1iTXva9r7q9cBdQz7NiRXgYpa7g3PExUS7pXmbRH180GZQhqMvCa0FSSq+BuuJ1q+WARQo1BrtUXwCKCC6wmKiklH+e3ABAnKjjnvEqybX+Jbsiz9E3OBQ7IdUCNQe4sVgDJU8o9niaqc+iG8owT0vQT4ei6YAz8ASZxXSU4GpIKeB+JJyorwliTMrXOxIPqLHZt58nxMm8WE1zhZ6J6g+jyiRgJwJ5NSjhKOFKx77hkWqHv9HF2MepcyApQaet9yvcXR/Z9Gf6JA3IFWDqLCW7nmT9LppSvIADYZt7vvHk/Gba0aPYDGTUuKrUsI6aWqUlK8skiJhR8bF/dUM93hX3gTKYsLriCTVRZgEkN5RwvJsuA7S/U5GAdOiA5sgJLTVJsAZnNU4WDd5yKl6+5LlB4MpCJ4AI2US3LruTV7R17SwvKt8ABiRJbtVT61nJOrmBzTTVQWcEux2eMpi96y+dXy0dHZiO4SAe+WALlhs/4jMPgGDsTxRnXPFLL1HedQm6rW9fv33CJpnywyqUyGa+Ru5qNAu9bv2DqMOltUnhzWuEKpC1tHVPeuFF3WO4Gg4kiO9hglUcFpF2IgGTpmywyFlzur1wPtkxOTgfC7AzjpBfepkocWQmuYBNVUnAf3y2icSq8JaA1tRzg88mtQEt3/cEqn1zlJr4cJgJ4x6hYKXOIlVjFUhmlVP3NsyE7wRWex/klvqTqGIgt2Te59LNUHQGpQ0vISWBmTq2Sc9lCRV3HY04pR2Y62FtOPuclRRdiS01sVYv7wrMUXGAzUa34OL/peIit5qWGftYISDZH59QSBbVKvORS80Z2wtbwnqmDrePo0+Si6xBbgTOpm+v9nK3gepiouJY7Aaxsvhz3b1vZ6TK2OvToiVumW4Eo2DxVOZ6x8jOV/0VK+eoQ21Orx7DmvML1MVExnugUqJTyj6WVZs++tm5EjvdoNSG1vLbcw9w6cp1szv/E18JEAu/4s+VZdxDdkA79H2hBl1J+OnYBnEsvVc0ha8EVfiYqxgKE9g2rWlcacV/rzBPfizykfaRbkmx/mVuajM1T7eAhugJllK+QTSgGMebTkTk7pzyfOkeyF1zhNlExd2CmucNs88szsG4bSPPMbvuIlDwVVHLNDFDX1XH3n7rwFN1u2IRiamlBj4XBZN4VY3SmpWmxFUsfXjCSF8ygqtq3FTDF0+HPWPfpBQap6g+I0HVpKeWBSHld2z5i/64NSqAuuda99apbSvlhOUWohIMpohEzzTqB89z3CIfCPGE3h23F2aHW+ob3ozfZ/XMyGDJAHT7vEe+Sr1BXmzkbSzGC63GcX6ks6bY+wC3Y0qzzYDmk4Rp4qPtRmFnqnhMhuNf+yi06RgfktOMhSDYPk6xnTC59JhQ/jnUM5Ke7VGjAnEURKeUeNlEFQw+AB52qby3FM7Ptoy1tlrXgwgvB/ZUbQn2zR4o55YRKIU4/sdj+pCjBFWyimssRg+C55RXNjLaP5Oq2kIkLbxFqEC16SqkHR+e1EKhBjGktc+ZFcYIr2EQ1lhNWdP9XSm35MP8btuDzT4rR0Te5lBoodZ3cX7kBUEfthTfkhLvPPD4gxrRcnrBSkmnqnipNVDPoJyBnCMls80XNoMZ1IOp3V5f3ndHDdsh8EfcZ3/lIfJdNgccwMiPBqvPq3UAjjDVqt2OaYqiBwSq7rXA586v1G8AwDMPctrxJYhGjsCq+sMBORAjxHxm1Umo7Ko2oAAAAAElFTkSuQmCC',
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 6,
                  columnNumber: 7,
                },
              }),
              __jsx('image', {
                'data-name': 'Ellipse 1',
                x: 51,
                y: 3,
                width: 60,
                height: 59,
                xlinkHref:
                  'data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAADwAAAA7CAYAAAAn+enKAAADm0lEQVRogeWbS0gVURjHf05FLbQiMkiKlCwLwjQpKGxhLYxaZBFBgQZt2kTt3UQPodbSomhTQdEis0VJYW1KAqGHVmIvspdBRm8IqSy+6ZvLZbyPuXcezp35wUW5DOf8f3PPvTNzzneKHrfNxydmAauBFcAyoAKYC8wEirXLH8AX4D3wEngE3APuAJ/8iDXZ4/bk7O0AtgF1gJHl+GJ9zQNWAtv1/THgLnAROAe88SpgtkBOKAI2At3AEHBMw7tp29A2jmqb3dpHkduwboWbdAheAdZ7dALtGNq29HFf+3TVWD4sArqAS0CN14YZWK59dmmGnMlVWIbUXqAf2BCUZQqk74eaJadhnouw/Lp2AO3ANLeJPWCqZunQbI5wKlyulwpX3x+faNJsFV4JLwV6gCUhlLWQbLc1a0ayCVfqJaEskNjuKNOslZlaySRcqr+GhSBrUaaZS9MdkE54EnAh29kKKZWaXRwcCx8AGgpQ1qJBHcaRSlhu6VoDj+g94rDK3qpdWIbByXTDocAQhxN2F7vw7oBvFf2mRp0SJAtPichQttOqbibJwi16RxU1xKk5lfC+CMpa7Lf+sYRrgeoJjeQv1eqYEG6JqGgyu0gS3hyKSP5iPumJ8EKnj1YFzgJxFeH6GMha1BsRu9HIRq0IV4U7o6dUGTH5/lqUi/DscGQJhOkiPCMGohYlRvKNdQwwhX/FSPi7CH8NQZCgMIU/xsPV5JuhC9FxYUiEn8ZI+Imha65x4YGhazJxoUeEXwCvYiD8GnhmTQB0TnCYIJDKgcSMx+lIq/7HdLSE72sJQVTpt36ck6dpj0dYOOGWLHwGeDcxeXxlGDhrdZAs/BM4HC1Xk0PqZmJfTDslF+fgM/nGA3VKYBf+A+zRv4VOSpdUC+K9wMEICMtQ7rW/ma7koQ245n8m35DsR1I1nk54TJcYnxeeq5m5WR3GkalsaQRYB7wNJqcnvNXMI+kay1aYJoXZjXotCzvDmjVjMbmT0sMBXX8aDLHwoGYcyHag0+JSmQZaE9KnqsuazdFUVS7lw5+BrVoaMZp/Ps8Y1SxbNJsjci0Q/6s1ytUTfNm6rhnaNZNj8t0C8FSr0uXs9nnnkZU+HWWN+U4+ut2U0anFIpuAG+mufS6RNm9qH7XWzEW+eLFvSYbUVX3JvqWd+snXuWj/t+5bErnzOh/lCX7uTCsB1uqnslgX3uek2Zn2QYfoE52ZuCXLIp4nAv4BTeSb38Ra/j8AAAAASUVORK5CYII=',
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 13,
                  columnNumber: 7,
                },
              })
            );
          }

          _c = NidratechLogo;
          /* harmony default export */ __webpack_exports__['default'] = NidratechLogo;

          var _c;

          $RefreshReg$(_c, 'NidratechLogo');

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './components/PageTitle.tsx':
      /*!**********************************!*\
  !*** ./components/PageTitle.tsx ***!
  \**********************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! react */ './node_modules/react/index.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_0__
          );
          /* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! styled-components */ './node_modules/styled-components/dist/styled-components.browser.esm.js'
          );
          /* harmony import */ var components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! components */ './components/index.ts'
          );
          var _jsxFileName = 'F:\\Projects\\nidratech.com\\components\\PageTitle.tsx';

          var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

          function PageTitle(_ref) {
            var title = _ref.title;
            return __jsx(
              TitleContainer,
              {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 11,
                  columnNumber: 5,
                },
              },
              __jsx(
                Title,
                {
                  __self: this,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 12,
                    columnNumber: 7,
                  },
                },
                title
              ),
              __jsx(components__WEBPACK_IMPORTED_MODULE_2__['HighlightLine'], {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 13,
                  columnNumber: 7,
                },
              })
            );
          }

          _c = PageTitle;
          var Title = styled_components__WEBPACK_IMPORTED_MODULE_1__['default'].h1.withConfig({
            displayName: 'Title',
            componentId: 'sc-1dghbrv-0',
          })(['text-transform:uppercase;font-weight:700;font-size:1.5em;']);
          _c2 = Title;
          var TitleContainer = styled_components__WEBPACK_IMPORTED_MODULE_1__[
            'default'
          ].div.withConfig({
            displayName: 'TitleContainer',
            componentId: 'sc-1dghbrv-1',
          })(['display:inline-block;margin-bottom:', ';'], function (_ref2) {
            var theme = _ref2.theme;
            return theme.spacing.medium;
          });
          _c3 = TitleContainer;
          /* harmony default export */ __webpack_exports__['default'] = PageTitle;

          var _c, _c2, _c3;

          $RefreshReg$(_c, 'PageTitle');
          $RefreshReg$(_c2, 'Title');
          $RefreshReg$(_c3, 'TitleContainer');

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './components/index.ts':
      /*!*****************************!*\
  !*** ./components/index.ts ***!
  \*****************************/
      /*! exports provided: Button, Container, HighlightLine, Navbar, NidratechLogo, PageTitle */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! ./Button */ './components/Button.tsx'
          );
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'Button',
            function () {
              return _Button__WEBPACK_IMPORTED_MODULE_0__['default'];
            }
          );

          /* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! ./Container */ './components/Container.tsx'
          );
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'Container',
            function () {
              return _Container__WEBPACK_IMPORTED_MODULE_1__['default'];
            }
          );

          /* harmony import */ var _HighlightLine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! ./HighlightLine */ './components/HighlightLine.ts'
          );
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'HighlightLine',
            function () {
              return _HighlightLine__WEBPACK_IMPORTED_MODULE_2__['default'];
            }
          );

          /* harmony import */ var _navbar_Navbar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! ./navbar/Navbar */ './components/navbar/Navbar.tsx'
          );
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'Navbar',
            function () {
              return _navbar_Navbar__WEBPACK_IMPORTED_MODULE_3__['default'];
            }
          );

          /* harmony import */ var _NidratechLogo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! ./NidratechLogo */ './components/NidratechLogo.tsx'
          );
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'NidratechLogo',
            function () {
              return _NidratechLogo__WEBPACK_IMPORTED_MODULE_4__['default'];
            }
          );

          /* harmony import */ var _PageTitle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
            /*! ./PageTitle */ './components/PageTitle.tsx'
          );
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'PageTitle',
            function () {
              return _PageTitle__WEBPACK_IMPORTED_MODULE_5__['default'];
            }
          );

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './components/navbar/BurgerMenu.tsx':
      /*!******************************************!*\
  !*** ./components/navbar/BurgerMenu.tsx ***!
  \******************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! react */ './node_modules/react/index.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_0__
          );
          /* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! styled-components */ './node_modules/styled-components/dist/styled-components.browser.esm.js'
          );
          var _this = undefined,
            _jsxFileName = 'F:\\Projects\\nidratech.com\\components\\navbar\\BurgerMenu.tsx';

          var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

          var BurgerMenu = function BurgerMenu(_ref) {
            var isNavbarOpen = _ref.isNavbarOpen,
              setIsNavbarOpen = _ref.setIsNavbarOpen;
            return __jsx(
              Wrapper,
              {
                onClick: function onClick() {
                  return setIsNavbarOpen(!isNavbarOpen);
                },
                __self: _this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 10,
                  columnNumber: 5,
                },
              },
              __jsx(
                'div',
                {
                  className: isNavbarOpen ? 'open' : '',
                  __self: _this,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 11,
                    columnNumber: 7,
                  },
                },
                __jsx(
                  'span',
                  {
                    __self: _this,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 12,
                      columnNumber: 9,
                    },
                  },
                  '\xA0'
                ),
                __jsx(
                  'span',
                  {
                    __self: _this,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 13,
                      columnNumber: 9,
                    },
                  },
                  '\xA0'
                ),
                __jsx(
                  'span',
                  {
                    __self: _this,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 14,
                      columnNumber: 9,
                    },
                  },
                  '\xA0'
                )
              )
            );
          };

          _c = BurgerMenu;
          var Wrapper = styled_components__WEBPACK_IMPORTED_MODULE_1__['default'].div.withConfig({
            displayName: 'Wrapper',
            componentId: 'nas2d7-0',
          })(
            [
              'position:relative;padding-top:0.7rem;cursor:pointer;display:block;& span{background:',
              ';display:block;position:relative;width:3.5rem;height:0.4rem;margin-bottom:0.7rem;transition:all ease-in-out 0.2s;}.open span:nth-child(2){opacity:0;}.open span:nth-child(3){transform:rotate(45deg);top:-23px;}.open span:nth-child(1){transform:rotate(-45deg);top:11px;}',
            ],
            function (_ref2) {
              var theme = _ref2.theme;
              return theme.colors.brand;
            }
          );
          _c2 = Wrapper;
          /* harmony default export */ __webpack_exports__['default'] = BurgerMenu;

          var _c, _c2;

          $RefreshReg$(_c, 'BurgerMenu');
          $RefreshReg$(_c2, 'Wrapper');

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './components/navbar/CollapseMenu.tsx':
      /*!********************************************!*\
  !*** ./components/navbar/CollapseMenu.tsx ***!
  \********************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! react */ './node_modules/react/index.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_0__
          );
          /* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! styled-components */ './node_modules/styled-components/dist/styled-components.browser.esm.js'
          );
          /* harmony import */ var react_spring__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! react-spring */ './node_modules/react-spring/web.js'
          );
          /* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! next/link */ './node_modules/next/link.js'
          );
          /* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
            next_link__WEBPACK_IMPORTED_MODULE_3__
          );
          /* harmony import */ var polished__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! polished */ './node_modules/polished/dist/polished.esm.js'
          );
          /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
            /*! next/router */ './node_modules/next/dist/client/router.js'
          );
          /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
            next_router__WEBPACK_IMPORTED_MODULE_5__
          );
          var _this = undefined,
            _jsxFileName = 'F:\\Projects\\nidratech.com\\components\\navbar\\CollapseMenu.tsx',
            _s = $RefreshSig$();

          var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

          var CollapseMenu = function CollapseMenu(_ref) {
            _s();

            var isNavbarOpen = _ref.isNavbarOpen,
              setIsNavbarOpen = _ref.setIsNavbarOpen;

            var _useSpring = Object(react_spring__WEBPACK_IMPORTED_MODULE_2__['useSpring'])({
                open: isNavbarOpen ? 0 : 1,
              }),
              open = _useSpring.open;

            var _useRouter = Object(next_router__WEBPACK_IMPORTED_MODULE_5__['useRouter'])(),
              pathname = _useRouter.pathname;

            if (isNavbarOpen) {
              return __jsx(
                CollapseWrapper,
                {
                  style: {
                    transform: open
                      .interpolate({
                        range: [0, 0.2, 0.3, 1],
                        output: [0, -20, 0, -200],
                      })
                      .interpolate(function (openValue) {
                        return 'translate3d(0, '.concat(openValue, 'px, 0');
                      }),
                  },
                  __self: _this,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 18,
                    columnNumber: 7,
                  },
                },
                __jsx(
                  NavLinks,
                  {
                    __self: _this,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 28,
                      columnNumber: 9,
                    },
                  },
                  __jsx(
                    next_link__WEBPACK_IMPORTED_MODULE_3___default.a,
                    {
                      href: '/',
                      passHref: true,
                      __self: _this,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 29,
                        columnNumber: 11,
                      },
                    },
                    __jsx(
                      NavItem,
                      {
                        as: 'a',
                        title: 'Home',
                        onClick: function onClick() {
                          return setIsNavbarOpen(false);
                        },
                        isActive: pathname === '/',
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 30,
                          columnNumber: 13,
                        },
                      },
                      'Home'
                    )
                  ),
                  __jsx(
                    next_link__WEBPACK_IMPORTED_MODULE_3___default.a,
                    {
                      href: '/clients',
                      passHref: true,
                      __self: _this,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 40,
                        columnNumber: 11,
                      },
                    },
                    __jsx(
                      NavItem,
                      {
                        as: 'a',
                        title: 'Clients',
                        onClick: function onClick() {
                          return setIsNavbarOpen(false);
                        },
                        isActive: pathname === '/clients',
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 41,
                          columnNumber: 13,
                        },
                      },
                      'Clients'
                    )
                  ),
                  __jsx(
                    next_link__WEBPACK_IMPORTED_MODULE_3___default.a,
                    {
                      href: '/projects',
                      passHref: true,
                      __self: _this,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 51,
                        columnNumber: 11,
                      },
                    },
                    __jsx(
                      NavItem,
                      {
                        as: 'a',
                        title: 'Projects',
                        onClick: function onClick() {
                          return setIsNavbarOpen(false);
                        },
                        isActive: pathname === '/projects',
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 52,
                          columnNumber: 13,
                        },
                      },
                      'Projects'
                    )
                  ),
                  __jsx(
                    next_link__WEBPACK_IMPORTED_MODULE_3___default.a,
                    {
                      href: '/contact',
                      passHref: true,
                      __self: _this,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 62,
                        columnNumber: 11,
                      },
                    },
                    __jsx(
                      NavItem,
                      {
                        as: 'a',
                        title: 'Contact',
                        onClick: function onClick() {
                          return setIsNavbarOpen(false);
                        },
                        isActive: pathname === '/contact',
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 63,
                          columnNumber: 13,
                        },
                      },
                      'Contact'
                    )
                  )
                )
              );
            }

            return null;
          };

          _s(CollapseMenu, 'iExunLE4bQKF8G4FwvomFeCQaus=', false, function () {
            return [
              react_spring__WEBPACK_IMPORTED_MODULE_2__['useSpring'],
              next_router__WEBPACK_IMPORTED_MODULE_5__['useRouter'],
            ];
          });

          _c = CollapseMenu;
          var NavItem = styled_components__WEBPACK_IMPORTED_MODULE_1__['default'].a.withConfig({
            displayName: 'NavItem',
            componentId: 'sc-3dpomo-0',
          })(
            ['display:flex;padding:0 ', ';color:', ';:hover{color:', ';}'],
            function (_ref2) {
              var theme = _ref2.theme;
              return theme.spacing.medium;
            },
            function (_ref3) {
              var isActive = _ref3.isActive,
                theme = _ref3.theme;
              return isActive ? theme.colors.brand : theme.colors.grey;
            },
            function (_ref4) {
              var isActive = _ref4.isActive,
                theme = _ref4.theme;
              return Object(polished__WEBPACK_IMPORTED_MODULE_4__['darken'])(
                0.05,
                isActive ? theme.colors.brand : theme.colors.grey
              );
            }
          );
          _c2 = NavItem;
          var CollapseWrapper = Object(styled_components__WEBPACK_IMPORTED_MODULE_1__['default'])(
            react_spring__WEBPACK_IMPORTED_MODULE_2__['animated'].div
          ).withConfig({
            displayName: 'CollapseWrapper',
            componentId: 'sc-3dpomo-1',
          })(['background:', ';position:fixed;top:4.5rem;left:0;right:0;z-index:999;'], function (
            _ref5
          ) {
            var theme = _ref5.theme;
            return Object(polished__WEBPACK_IMPORTED_MODULE_4__['darken'])(
              0.05,
              theme.colors.white
            );
          });
          _c3 = CollapseWrapper;
          var NavLinks = styled_components__WEBPACK_IMPORTED_MODULE_1__['default'].ul.withConfig({
            displayName: 'NavLinks',
            componentId: 'sc-3dpomo-2',
          })([
            'list-style-type:none;padding:2rem 1rem 2rem 2rem;display:flex;align-items:center;@media (min-width:48rem){display:none;}',
          ]);
          _c4 = NavLinks;
          /* harmony default export */ __webpack_exports__['default'] = CollapseMenu;

          var _c, _c2, _c3, _c4;

          $RefreshReg$(_c, 'CollapseMenu');
          $RefreshReg$(_c2, 'NavItem');
          $RefreshReg$(_c3, 'CollapseWrapper');
          $RefreshReg$(_c4, 'NavLinks');

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './components/navbar/Navbar.tsx':
      /*!**************************************!*\
  !*** ./components/navbar/Navbar.tsx ***!
  \**************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! react */ './node_modules/react/index.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_0__
          );
          /* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! styled-components */ './node_modules/styled-components/dist/styled-components.browser.esm.js'
          );
          /* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! next/link */ './node_modules/next/link.js'
          );
          /* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
            next_link__WEBPACK_IMPORTED_MODULE_2__
          );
          /* harmony import */ var polished__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! polished */ './node_modules/polished/dist/polished.esm.js'
          );
          /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! next/router */ './node_modules/next/dist/client/router.js'
          );
          /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
            next_router__WEBPACK_IMPORTED_MODULE_4__
          );
          /* harmony import */ var components_NidratechLogo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
            /*! components/NidratechLogo */ './components/NidratechLogo.tsx'
          );
          /* harmony import */ var _BurgerMenu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
            /*! ./BurgerMenu */ './components/navbar/BurgerMenu.tsx'
          );
          /* harmony import */ var _CollapseMenu__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
            /*! ./CollapseMenu */ './components/navbar/CollapseMenu.tsx'
          );
          var _this = undefined,
            _jsxFileName = 'F:\\Projects\\nidratech.com\\components\\navbar\\Navbar.tsx',
            _s = $RefreshSig$();

          var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

          var Navbar = function Navbar(_ref) {
            _s();

            var isNavbarOpen = _ref.isNavbarOpen,
              setIsNavbarOpen = _ref.setIsNavbarOpen;

            var _useRouter = Object(next_router__WEBPACK_IMPORTED_MODULE_4__['useRouter'])(),
              pathname = _useRouter.pathname;

            return __jsx(
              react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,
              null,
              __jsx(
                NavBar,
                {
                  __self: _this,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 20,
                    columnNumber: 7,
                  },
                },
                __jsx(
                  FlexContainer,
                  {
                    __self: _this,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 21,
                      columnNumber: 9,
                    },
                  },
                  __jsx(
                    next_link__WEBPACK_IMPORTED_MODULE_2___default.a,
                    {
                      href: '/',
                      passHref: true,
                      __self: _this,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 22,
                        columnNumber: 11,
                      },
                    },
                    __jsx(
                      NavItem,
                      {
                        as: 'a',
                        'aria-label': 'Nidratech Ltd.',
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 23,
                          columnNumber: 13,
                        },
                      },
                      __jsx(StyledNidratechLogo, {
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 24,
                          columnNumber: 15,
                        },
                      })
                    )
                  ),
                  __jsx(
                    NavLinks,
                    {
                      __self: _this,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 28,
                        columnNumber: 11,
                      },
                    },
                    __jsx(
                      next_link__WEBPACK_IMPORTED_MODULE_2___default.a,
                      {
                        href: '/',
                        passHref: true,
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 29,
                          columnNumber: 13,
                        },
                      },
                      __jsx(
                        NavItem,
                        {
                          as: 'a',
                          title: 'Home',
                          isActive: pathname === '/',
                          __self: _this,
                          __source: {
                            fileName: _jsxFileName,
                            lineNumber: 30,
                            columnNumber: 15,
                          },
                        },
                        'Home'
                      )
                    ),
                    __jsx(
                      next_link__WEBPACK_IMPORTED_MODULE_2___default.a,
                      {
                        href: '/clients',
                        passHref: true,
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 35,
                          columnNumber: 13,
                        },
                      },
                      __jsx(
                        NavItem,
                        {
                          as: 'a',
                          title: 'Clients',
                          isActive: pathname === '/clients',
                          __self: _this,
                          __source: {
                            fileName: _jsxFileName,
                            lineNumber: 36,
                            columnNumber: 15,
                          },
                        },
                        'Clients'
                      )
                    ),
                    __jsx(
                      next_link__WEBPACK_IMPORTED_MODULE_2___default.a,
                      {
                        href: '/projects',
                        passHref: true,
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 41,
                          columnNumber: 13,
                        },
                      },
                      __jsx(
                        NavItem,
                        {
                          as: 'a',
                          title: 'Projects',
                          isActive: pathname === '/projects',
                          __self: _this,
                          __source: {
                            fileName: _jsxFileName,
                            lineNumber: 42,
                            columnNumber: 15,
                          },
                        },
                        'Projects'
                      )
                    ),
                    __jsx(
                      next_link__WEBPACK_IMPORTED_MODULE_2___default.a,
                      {
                        href: '/contact',
                        passHref: true,
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 47,
                          columnNumber: 13,
                        },
                      },
                      __jsx(
                        NavItem,
                        {
                          as: 'a',
                          title: 'Contact us',
                          isActive: pathname === '/contact',
                          __self: _this,
                          __source: {
                            fileName: _jsxFileName,
                            lineNumber: 48,
                            columnNumber: 15,
                          },
                        },
                        'Contact'
                      )
                    )
                  ),
                  __jsx(
                    BurgerWrapper,
                    {
                      __self: _this,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 54,
                        columnNumber: 11,
                      },
                    },
                    __jsx(_BurgerMenu__WEBPACK_IMPORTED_MODULE_6__['default'], {
                      isNavbarOpen: isNavbarOpen,
                      setIsNavbarOpen: setIsNavbarOpen,
                      __self: _this,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 55,
                        columnNumber: 13,
                      },
                    })
                  )
                )
              ),
              __jsx(_CollapseMenu__WEBPACK_IMPORTED_MODULE_7__['default'], {
                isNavbarOpen: isNavbarOpen,
                setIsNavbarOpen: setIsNavbarOpen,
                __self: _this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 60,
                  columnNumber: 7,
                },
              })
            );
          };

          _s(Navbar, 'QpP2vYJstxsDz0K+Qwttl8PPVoY=', false, function () {
            return [next_router__WEBPACK_IMPORTED_MODULE_4__['useRouter']];
          });

          _c = Navbar;
          var StyledNidratechLogo = Object(
            styled_components__WEBPACK_IMPORTED_MODULE_1__['default']
          )(components_NidratechLogo__WEBPACK_IMPORTED_MODULE_5__['default']).withConfig({
            displayName: 'StyledNidratechLogo',
            componentId: 'sc-8vwuz5-0',
          })(['width:9.5rem;height:4rem;']);
          _c2 = StyledNidratechLogo;
          var NavItem = styled_components__WEBPACK_IMPORTED_MODULE_1__['default'].a.withConfig({
            displayName: 'NavItem',
            componentId: 'sc-8vwuz5-1',
          })(
            [
              'display:flex;padding:0 ',
              ';color:',
              ';:hover{color:',
              ';}@media (max-width:48rem){padding:0;}',
            ],
            function (_ref2) {
              var theme = _ref2.theme;
              return theme.spacing.medium;
            },
            function (_ref3) {
              var isActive = _ref3.isActive,
                theme = _ref3.theme;
              return isActive ? theme.colors.brand : theme.colors.grey;
            },
            function (_ref4) {
              var isActive = _ref4.isActive,
                theme = _ref4.theme;
              return Object(polished__WEBPACK_IMPORTED_MODULE_3__['darken'])(
                0.05,
                isActive ? theme.colors.brand : theme.colors.grey
              );
            }
          );
          _c3 = NavItem;
          var NavBar = styled_components__WEBPACK_IMPORTED_MODULE_1__['default'].nav.withConfig({
            displayName: 'NavBar',
            componentId: 'sc-8vwuz5-2',
          })(['position:fixed;width:100%;top:0;left:0;z-index:1;']);
          _c4 = NavBar;
          var FlexContainer = styled_components__WEBPACK_IMPORTED_MODULE_1__[
            'default'
          ].div.withConfig({
            displayName: 'FlexContainer',
            componentId: 'sc-8vwuz5-3',
          })(
            [
              'max-width:120rem;display:flex;margin:auto;justify-content:space-between;padding:0 ',
              ';height:',
              ';background:',
              ';@media (max-width:48rem){padding:',
              ';}',
            ],
            function (_ref5) {
              var theme = _ref5.theme;
              return theme.spacing.medium;
            },
            function (_ref6) {
              var theme = _ref6.theme;
              return theme.spacing.navBarHeight;
            },
            function (_ref7) {
              var theme = _ref7.theme;
              return theme.colors.white;
            },
            function (_ref8) {
              var theme = _ref8.theme;
              return '0 '.concat(theme.spacing.small);
            }
          );
          _c5 = FlexContainer;
          var NavLinks = styled_components__WEBPACK_IMPORTED_MODULE_1__['default'].ul.withConfig({
            displayName: 'NavLinks',
            componentId: 'sc-8vwuz5-4',
          })([
            'justify-self:end;list-style-type:none;margin:auto 0;display:flex;align-items:center;@media (max-width:48rem){display:none;}',
          ]);
          _c6 = NavLinks;
          var BurgerWrapper = styled_components__WEBPACK_IMPORTED_MODULE_1__[
            'default'
          ].div.withConfig({
            displayName: 'BurgerWrapper',
            componentId: 'sc-8vwuz5-5',
          })(['margin:auto 0;@media (min-width:48rem){display:none;}']);
          _c7 = BurgerWrapper;
          /* harmony default export */ __webpack_exports__['default'] = Navbar;

          var _c, _c2, _c3, _c4, _c5, _c6, _c7;

          $RefreshReg$(_c, 'Navbar');
          $RefreshReg$(_c2, 'StyledNidratechLogo');
          $RefreshReg$(_c3, 'NavItem');
          $RefreshReg$(_c4, 'NavBar');
          $RefreshReg$(_c5, 'FlexContainer');
          $RefreshReg$(_c6, 'NavLinks');
          $RefreshReg$(_c7, 'BurgerWrapper');

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js':
      /*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js ***!
  \**************************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _assertThisInitialized;
          }
        );
        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return self;
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/construct.js':
      /*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/construct.js ***!
  \**************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _construct;
          }
        );
        /* harmony import */ var _setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./setPrototypeOf */ './node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js'
        );
        /* harmony import */ var _isNativeReflectConstruct__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./isNativeReflectConstruct */ './node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js'
        );

        function _construct(Parent, args, Class) {
          if (Object(_isNativeReflectConstruct__WEBPACK_IMPORTED_MODULE_1__['default'])()) {
            _construct = Reflect.construct;
          } else {
            _construct = function _construct(Parent, args, Class) {
              var a = [null];
              a.push.apply(a, args);
              var Constructor = Function.bind.apply(Parent, a);
              var instance = new Constructor();
              if (Class)
                Object(_setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__['default'])(
                  instance,
                  Class.prototype
                );
              return instance;
            };
          }

          return _construct.apply(null, arguments);
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/extends.js':
      /*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _extends;
          }
        );
        function _extends() {
          _extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];

                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }

              return target;
            };

          return _extends.apply(this, arguments);
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js':
      /*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js ***!
  \*******************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _getPrototypeOf;
          }
        );
        function _getPrototypeOf(o) {
          _getPrototypeOf = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function _getPrototypeOf(o) {
                return o.__proto__ || Object.getPrototypeOf(o);
              };
          return _getPrototypeOf(o);
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/inheritsLoose.js':
      /*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \******************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _inheritsLoose;
          }
        );
        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          subClass.__proto__ = superClass;
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/isNativeFunction.js':
      /*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js ***!
  \*********************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _isNativeFunction;
          }
        );
        function _isNativeFunction(fn) {
          return Function.toString.call(fn).indexOf('[native code]') !== -1;
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js':
      /*!*****************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js ***!
  \*****************************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _isNativeReflectConstruct;
          }
        );
        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct) return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;

          try {
            Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
            return true;
          } catch (e) {
            return false;
          }
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js':
      /*!****************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js ***!
  \****************************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _objectWithoutProperties;
          }
        );
        /* harmony import */ var _objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./objectWithoutPropertiesLoose */ './node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js'
        );

        function _objectWithoutProperties(source, excluded) {
          if (source == null) return {};
          var target = Object(
            _objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__['default']
          )(source, excluded);
          var key, i;

          if (Object.getOwnPropertySymbols) {
            var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

            for (i = 0; i < sourceSymbolKeys.length; i++) {
              key = sourceSymbolKeys[i];
              if (excluded.indexOf(key) >= 0) continue;
              if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
              target[key] = source[key];
            }
          }

          return target;
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js':
      /*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _objectWithoutPropertiesLoose;
          }
        );
        function _objectWithoutPropertiesLoose(source, excluded) {
          if (source == null) return {};
          var target = {};
          var sourceKeys = Object.keys(source);
          var key, i;

          for (i = 0; i < sourceKeys.length; i++) {
            key = sourceKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            target[key] = source[key];
          }

          return target;
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js':
      /*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _setPrototypeOf;
          }
        );
        function _setPrototypeOf(o, p) {
          _setPrototypeOf =
            Object.setPrototypeOf ||
            function _setPrototypeOf(o, p) {
              o.__proto__ = p;
              return o;
            };

          return _setPrototypeOf(o, p);
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js':
      /*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js ***!
  \**************************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _taggedTemplateLiteral;
          }
        );
        function _taggedTemplateLiteral(strings, raw) {
          if (!raw) {
            raw = strings.slice(0);
          }

          return Object.freeze(
            Object.defineProperties(strings, {
              raw: {
                value: Object.freeze(raw),
              },
            })
          );
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js':
      /*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js ***!
  \*******************************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _taggedTemplateLiteralLoose;
          }
        );
        function _taggedTemplateLiteralLoose(strings, raw) {
          if (!raw) {
            raw = strings.slice(0);
          }

          strings.raw = raw;
          return strings;
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js':
      /*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js ***!
  \********************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return _wrapNativeSuper;
          }
        );
        /* harmony import */ var _getPrototypeOf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./getPrototypeOf */ './node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js'
        );
        /* harmony import */ var _setPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./setPrototypeOf */ './node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js'
        );
        /* harmony import */ var _isNativeFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./isNativeFunction */ './node_modules/@babel/runtime/helpers/esm/isNativeFunction.js'
        );
        /* harmony import */ var _construct__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./construct */ './node_modules/@babel/runtime/helpers/esm/construct.js'
        );

        function _wrapNativeSuper(Class) {
          var _cache = typeof Map === 'function' ? new Map() : undefined;

          _wrapNativeSuper = function _wrapNativeSuper(Class) {
            if (
              Class === null ||
              !Object(_isNativeFunction__WEBPACK_IMPORTED_MODULE_2__['default'])(Class)
            )
              return Class;

            if (typeof Class !== 'function') {
              throw new TypeError('Super expression must either be null or a function');
            }

            if (typeof _cache !== 'undefined') {
              if (_cache.has(Class)) return _cache.get(Class);

              _cache.set(Class, Wrapper);
            }

            function Wrapper() {
              return Object(_construct__WEBPACK_IMPORTED_MODULE_3__['default'])(
                Class,
                arguments,
                Object(_getPrototypeOf__WEBPACK_IMPORTED_MODULE_0__['default'])(this).constructor
              );
            }

            Wrapper.prototype = Object.create(Class.prototype, {
              constructor: {
                value: Wrapper,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            });
            return Object(_setPrototypeOf__WEBPACK_IMPORTED_MODULE_1__['default'])(Wrapper, Class);
          };

          return _wrapNativeSuper(Class);
        }

        /***/
      },

    /***/ './node_modules/@babel/runtime/helpers/interopRequireDefault.js':
      /*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _interopRequireDefault(obj) {
          return obj && obj.__esModule
            ? obj
            : {
                default: obj,
              };
        }

        module.exports = _interopRequireDefault;

        /***/
      },

    /***/ './node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js':
      /*!*******************************************************************************!*\
  !*** ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js ***!
  \*******************************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @emotion/memoize */ './node_modules/@emotion/memoize/dist/memoize.browser.esm.js'
        );

        var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

        var index = Object(_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__['default'])(
          function (prop) {
            return (
              reactPropsRegex.test(prop) ||
              (prop.charCodeAt(0) === 111 &&
                /* o */
                prop.charCodeAt(1) === 110 &&
                /* n */
                prop.charCodeAt(2) < 91)
            );
          }
          /* Z+1 */
        );

        /* harmony default export */ __webpack_exports__['default'] = index;

        /***/
      },

    /***/ './node_modules/@emotion/memoize/dist/memoize.browser.esm.js':
      /*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*******************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        function memoize(fn) {
          var cache = {};
          return function (arg) {
            if (cache[arg] === undefined) cache[arg] = fn(arg);
            return cache[arg];
          };
        }

        /* harmony default export */ __webpack_exports__['default'] = memoize;

        /***/
      },

    /***/ './node_modules/@emotion/stylis/dist/stylis.browser.esm.js':
      /*!*****************************************************************!*\
  !*** ./node_modules/@emotion/stylis/dist/stylis.browser.esm.js ***!
  \*****************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        function stylis_min(W) {
          function M(d, c, e, h, a) {
            for (
              var m = 0,
                b = 0,
                v = 0,
                n = 0,
                q,
                g,
                x = 0,
                K = 0,
                k,
                u = (k = q = 0),
                l = 0,
                r = 0,
                I = 0,
                t = 0,
                B = e.length,
                J = B - 1,
                y,
                f = '',
                p = '',
                F = '',
                G = '',
                C;
              l < B;

            ) {
              g = e.charCodeAt(l);
              l === J &&
                0 !== b + n + v + m &&
                (0 !== b && (g = 47 === b ? 10 : 47), (n = v = m = 0), B++, J++);

              if (0 === b + n + v + m) {
                if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {
                  switch (g) {
                    case 32:
                    case 9:
                    case 59:
                    case 13:
                    case 10:
                      break;

                    default:
                      f += e.charAt(l);
                  }

                  g = 59;
                }

                switch (g) {
                  case 123:
                    f = f.trim();
                    q = f.charCodeAt(0);
                    k = 1;

                    for (t = ++l; l < B; ) {
                      switch ((g = e.charCodeAt(l))) {
                        case 123:
                          k++;
                          break;

                        case 125:
                          k--;
                          break;

                        case 47:
                          switch ((g = e.charCodeAt(l + 1))) {
                            case 42:
                            case 47:
                              a: {
                                for (u = l + 1; u < J; ++u) {
                                  switch (e.charCodeAt(u)) {
                                    case 47:
                                      if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                        l = u + 1;
                                        break a;
                                      }

                                      break;

                                    case 10:
                                      if (47 === g) {
                                        l = u + 1;
                                        break a;
                                      }
                                  }
                                }

                                l = u;
                              }
                          }

                          break;

                        case 91:
                          g++;

                        case 40:
                          g++;

                        case 34:
                        case 39:
                          for (; l++ < J && e.charCodeAt(l) !== g; ) {}
                      }

                      if (0 === k) break;
                      l++;
                    }

                    k = e.substring(t, l);
                    0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));

                    switch (q) {
                      case 64:
                        0 < r && (f = f.replace(N, ''));
                        g = f.charCodeAt(1);

                        switch (g) {
                          case 100:
                          case 109:
                          case 115:
                          case 45:
                            r = c;
                            break;

                          default:
                            r = O;
                        }

                        k = M(c, r, k, g, a + 1);
                        t = k.length;
                        0 < A &&
                          ((r = X(O, f, I)),
                          (C = H(3, k, r, c, D, z, t, g, a, h)),
                          (f = r.join('')),
                          void 0 !== C && 0 === (t = (k = C.trim()).length) && ((g = 0), (k = '')));
                        if (0 < t)
                          switch (g) {
                            case 115:
                              f = f.replace(da, ea);

                            case 100:
                            case 109:
                            case 45:
                              k = f + '{' + k + '}';
                              break;

                            case 107:
                              f = f.replace(fa, '$1 $2');
                              k = f + '{' + k + '}';
                              k =
                                1 === w || (2 === w && L('@' + k, 3))
                                  ? '@-webkit-' + k + '@' + k
                                  : '@' + k;
                              break;

                            default:
                              (k = f + k), 112 === h && (k = ((p += k), ''));
                          }
                        else k = '';
                        break;

                      default:
                        k = M(c, X(c, f, I), k, h, a + 1);
                    }

                    F += k;
                    k = I = r = u = q = 0;
                    f = '';
                    g = e.charCodeAt(++l);
                    break;

                  case 125:
                  case 59:
                    f = (0 < r ? f.replace(N, '') : f).trim();
                    if (1 < (t = f.length))
                      switch (
                        (0 === u &&
                          ((q = f.charCodeAt(0)), 45 === q || (96 < q && 123 > q)) &&
                          (t = (f = f.replace(' ', ':')).length),
                        0 < A &&
                          void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) &&
                          0 === (t = (f = C.trim()).length) &&
                          (f = '\x00\x00'),
                        (q = f.charCodeAt(0)),
                        (g = f.charCodeAt(1)),
                        q)
                      ) {
                        case 0:
                          break;

                        case 64:
                          if (105 === g || 99 === g) {
                            G += f + e.charAt(l);
                            break;
                          }

                        default:
                          58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));
                      }
                    I = r = u = q = 0;
                    f = '';
                    g = e.charCodeAt(++l);
                }
              }

              switch (g) {
                case 13:
                case 10:
                  47 === b
                    ? (b = 0)
                    : 0 === 1 + q && 107 !== h && 0 < f.length && ((r = 1), (f += '\x00'));
                  0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);
                  z = 1;
                  D++;
                  break;

                case 59:
                case 125:
                  if (0 === b + n + v + m) {
                    z++;
                    break;
                  }

                default:
                  z++;
                  y = e.charAt(l);

                  switch (g) {
                    case 9:
                    case 32:
                      if (0 === n + m + b)
                        switch (x) {
                          case 44:
                          case 58:
                          case 9:
                          case 32:
                            y = '';
                            break;

                          default:
                            32 !== g && (y = ' ');
                        }
                      break;

                    case 0:
                      y = '\\0';
                      break;

                    case 12:
                      y = '\\f';
                      break;

                    case 11:
                      y = '\\v';
                      break;

                    case 38:
                      0 === n + b + m && ((r = I = 1), (y = '\f' + y));
                      break;

                    case 108:
                      if (0 === n + b + m + E && 0 < u)
                        switch (l - u) {
                          case 2:
                            112 === x && 58 === e.charCodeAt(l - 3) && (E = x);

                          case 8:
                            111 === K && (E = K);
                        }
                      break;

                    case 58:
                      0 === n + b + m && (u = l);
                      break;

                    case 44:
                      0 === b + v + n + m && ((r = 1), (y += '\r'));
                      break;

                    case 34:
                    case 39:
                      0 === b && (n = n === g ? 0 : 0 === n ? g : n);
                      break;

                    case 91:
                      0 === n + b + v && m++;
                      break;

                    case 93:
                      0 === n + b + v && m--;
                      break;

                    case 41:
                      0 === n + b + m && v--;
                      break;

                    case 40:
                      if (0 === n + b + m) {
                        if (0 === q)
                          switch (2 * x + 3 * K) {
                            case 533:
                              break;

                            default:
                              q = 1;
                          }
                        v++;
                      }

                      break;

                    case 64:
                      0 === b + v + n + m + u + k && (k = 1);
                      break;

                    case 42:
                    case 47:
                      if (!(0 < n + m + v))
                        switch (b) {
                          case 0:
                            switch (2 * g + 3 * e.charCodeAt(l + 1)) {
                              case 235:
                                b = 47;
                                break;

                              case 220:
                                (t = l), (b = 42);
                            }

                            break;

                          case 42:
                            47 === g &&
                              42 === x &&
                              t + 2 !== l &&
                              (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)),
                              (y = ''),
                              (b = 0));
                        }
                  }

                  0 === b && (f += y);
              }

              K = x;
              x = g;
              l++;
            }

            t = p.length;

            if (0 < t) {
              r = c;
              if (
                0 < A &&
                ((C = H(2, p, r, d, D, z, t, h, a, h)), void 0 !== C && 0 === (p = C).length)
              )
                return G + p + F;
              p = r.join(',') + '{' + p + '}';

              if (0 !== w * E) {
                2 !== w || L(p, 2) || (E = 0);

                switch (E) {
                  case 111:
                    p = p.replace(ha, ':-moz-$1') + p;
                    break;

                  case 112:
                    p =
                      p.replace(Q, '::-webkit-input-$1') +
                      p.replace(Q, '::-moz-$1') +
                      p.replace(Q, ':-ms-input-$1') +
                      p;
                }

                E = 0;
              }
            }

            return G + p + F;
          }

          function X(d, c, e) {
            var h = c.trim().split(ia);
            c = h;
            var a = h.length,
              m = d.length;

            switch (m) {
              case 0:
              case 1:
                var b = 0;

                for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {
                  c[b] = Z(d, c[b], e).trim();
                }

                break;

              default:
                var v = (b = 0);

                for (c = []; b < a; ++b) {
                  for (var n = 0; n < m; ++n) {
                    c[v++] = Z(d[n] + ' ', h[b], e).trim();
                  }
                }
            }

            return c;
          }

          function Z(d, c, e) {
            var h = c.charCodeAt(0);
            33 > h && (h = (c = c.trim()).charCodeAt(0));

            switch (h) {
              case 38:
                return c.replace(F, '$1' + d.trim());

              case 58:
                return d.trim() + c.replace(F, '$1' + d.trim());

              default:
                if (0 < 1 * e && 0 < c.indexOf('\f'))
                  return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());
            }

            return d + c;
          }

          function P(d, c, e, h) {
            var a = d + ';',
              m = 2 * c + 3 * e + 4 * h;

            if (944 === m) {
              d = a.indexOf(':', 9) + 1;
              var b = a.substring(d, a.length - 1).trim();
              b = a.substring(0, d).trim() + b + ';';
              return 1 === w || (2 === w && L(b, 1)) ? '-webkit-' + b + b : b;
            }

            if (0 === w || (2 === w && !L(a, 1))) return a;

            switch (m) {
              case 1015:
                return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;

              case 951:
                return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;

              case 963:
                return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;

              case 1009:
                if (100 !== a.charCodeAt(4)) break;

              case 969:
              case 942:
                return '-webkit-' + a + a;

              case 978:
                return '-webkit-' + a + '-moz-' + a + a;

              case 1019:
              case 983:
                return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;

              case 883:
                if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;
                if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;
                break;

              case 932:
                if (45 === a.charCodeAt(4))
                  switch (a.charCodeAt(5)) {
                    case 103:
                      return (
                        '-webkit-box-' +
                        a.replace('-grow', '') +
                        '-webkit-' +
                        a +
                        '-ms-' +
                        a.replace('grow', 'positive') +
                        a
                      );

                    case 115:
                      return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;

                    case 98:
                      return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;
                  }
                return '-webkit-' + a + '-ms-' + a + a;

              case 964:
                return '-webkit-' + a + '-ms-flex-' + a + a;

              case 1023:
                if (99 !== a.charCodeAt(8)) break;
                b = a
                  .substring(a.indexOf(':', 15))
                  .replace('flex-', '')
                  .replace('space-between', 'justify');
                return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;

              case 1005:
                return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;

              case 1e3:
                b = a.substring(13).trim();
                c = b.indexOf('-') + 1;

                switch (b.charCodeAt(0) + b.charCodeAt(c)) {
                  case 226:
                    b = a.replace(G, 'tb');
                    break;

                  case 232:
                    b = a.replace(G, 'tb-rl');
                    break;

                  case 220:
                    b = a.replace(G, 'lr');
                    break;

                  default:
                    return a;
                }

                return '-webkit-' + a + '-ms-' + b + a;

              case 1017:
                if (-1 === a.indexOf('sticky', 9)) break;

              case 975:
                c = (a = d).length - 10;
                b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a)
                  .substring(d.indexOf(':', 7) + 1)
                  .trim();

                switch ((m = b.charCodeAt(0) + (b.charCodeAt(7) | 0))) {
                  case 203:
                    if (111 > b.charCodeAt(8)) break;

                  case 115:
                    a = a.replace(b, '-webkit-' + b) + ';' + a;
                    break;

                  case 207:
                  case 102:
                    a =
                      a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') +
                      ';' +
                      a.replace(b, '-webkit-' + b) +
                      ';' +
                      a.replace(b, '-ms-' + b + 'box') +
                      ';' +
                      a;
                }

                return a + ';';

              case 938:
                if (45 === a.charCodeAt(5))
                  switch (a.charCodeAt(6)) {
                    case 105:
                      return (
                        (b = a.replace('-items', '')),
                        '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a
                      );

                    case 115:
                      return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;

                    default:
                      return (
                        '-webkit-' +
                        a +
                        '-ms-flex-line-pack' +
                        a.replace('align-content', '').replace(ba, '') +
                        a
                      );
                  }
                break;

              case 973:
              case 989:
                if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;

              case 931:
              case 953:
                if (!0 === la.test(d))
                  return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0)
                    ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(
                        ':fill-available',
                        ':stretch'
                      )
                    : a.replace(b, '-webkit-' + b) +
                        a.replace(b, '-moz-' + b.replace('fill-', '')) +
                        a;
                break;

              case 962:
                if (
                  ((a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a),
                  211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10))
                )
                  return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;
            }

            return a;
          }

          function L(d, c) {
            var e = d.indexOf(1 === c ? ':' : '{'),
              h = d.substring(0, 3 !== c ? e : 10);
            e = d.substring(e + 1, d.length - 1);
            return R(2 !== c ? h : h.replace(na, '$1'), e, c);
          }

          function ea(d, c) {
            var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
            return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';
          }

          function H(d, c, e, h, a, m, b, v, n, q) {
            for (var g = 0, x = c, w; g < A; ++g) {
              switch ((w = S[g].call(B, d, x, e, h, a, m, b, v, n, q))) {
                case void 0:
                case !1:
                case !0:
                case null:
                  break;

                default:
                  x = w;
              }
            }

            if (x !== c) return x;
          }

          function T(d) {
            switch (d) {
              case void 0:
              case null:
                A = S.length = 0;
                break;

              default:
                if ('function' === typeof d) S[A++] = d;
                else if ('object' === typeof d)
                  for (var c = 0, e = d.length; c < e; ++c) {
                    T(d[c]);
                  }
                else Y = !!d | 0;
            }

            return T;
          }

          function U(d) {
            d = d.prefix;
            void 0 !== d &&
              ((R = null), d ? ('function' !== typeof d ? (w = 1) : ((w = 2), (R = d))) : (w = 0));
            return U;
          }

          function B(d, c) {
            var e = d;
            33 > e.charCodeAt(0) && (e = e.trim());
            V = e;
            e = [V];

            if (0 < A) {
              var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);
              void 0 !== h && 'string' === typeof h && (c = h);
            }

            var a = M(O, e, c, 0, 0);
            0 < A && ((h = H(-2, a, e, e, D, z, a.length, 0, 0, 0)), void 0 !== h && (a = h));
            V = '';
            E = 0;
            z = D = 1;
            return a;
          }

          var ca = /^\0+/g,
            N = /[\0\r\f]/g,
            aa = /: */g,
            ka = /zoo|gra/,
            ma = /([,: ])(transform)/g,
            ia = /,\r+?/g,
            F = /([\t\r\n ])*\f?&/g,
            fa = /@(k\w+)\s*(\S*)\s*/,
            Q = /::(place)/g,
            ha = /:(read-only)/g,
            G = /[svh]\w+-[tblr]{2}/,
            da = /\(\s*(.*)\s*\)/g,
            oa = /([\s\S]*?);/g,
            ba = /-self|flex-/g,
            na = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
            la = /stretch|:\s*\w+\-(?:conte|avail)/,
            ja = /([^-])(image-set\()/,
            z = 1,
            D = 1,
            E = 0,
            w = 1,
            O = [],
            S = [],
            A = 0,
            R = null,
            Y = 0,
            V = '';
          B.use = T;
          B.set = U;
          void 0 !== W && U(W);
          return B;
        }

        /* harmony default export */ __webpack_exports__['default'] = stylis_min;

        /***/
      },

    /***/ './node_modules/@emotion/unitless/dist/unitless.browser.esm.js':
      /*!*********************************************************************!*\
  !*** ./node_modules/@emotion/unitless/dist/unitless.browser.esm.js ***!
  \*********************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        var unitlessKeys = {
          animationIterationCount: 1,
          borderImageOutset: 1,
          borderImageSlice: 1,
          borderImageWidth: 1,
          boxFlex: 1,
          boxFlexGroup: 1,
          boxOrdinalGroup: 1,
          columnCount: 1,
          columns: 1,
          flex: 1,
          flexGrow: 1,
          flexPositive: 1,
          flexShrink: 1,
          flexNegative: 1,
          flexOrder: 1,
          gridRow: 1,
          gridRowEnd: 1,
          gridRowSpan: 1,
          gridRowStart: 1,
          gridColumn: 1,
          gridColumnEnd: 1,
          gridColumnSpan: 1,
          gridColumnStart: 1,
          msGridRow: 1,
          msGridRowSpan: 1,
          msGridColumn: 1,
          msGridColumnSpan: 1,
          fontWeight: 1,
          lineHeight: 1,
          opacity: 1,
          order: 1,
          orphans: 1,
          tabSize: 1,
          widows: 1,
          zIndex: 1,
          zoom: 1,
          WebkitLineClamp: 1,
          // SVG-related properties
          fillOpacity: 1,
          floodOpacity: 1,
          stopOpacity: 1,
          strokeDasharray: 1,
          strokeDashoffset: 1,
          strokeMiterlimit: 1,
          strokeOpacity: 1,
          strokeWidth: 1,
        };

        /* harmony default export */ __webpack_exports__['default'] = unitlessKeys;

        /***/
      },

    /***/ './node_modules/dom-helpers/class/addClass.js':
      /*!****************************************************!*\
  !*** ./node_modules/dom-helpers/class/addClass.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var _interopRequireDefault = __webpack_require__(
          /*! @babel/runtime/helpers/interopRequireDefault */ './node_modules/@babel/runtime/helpers/interopRequireDefault.js'
        );

        exports.__esModule = true;
        exports.default = addClass;

        var _hasClass = _interopRequireDefault(
          __webpack_require__(/*! ./hasClass */ './node_modules/dom-helpers/class/hasClass.js')
        );

        function addClass(element, className) {
          if (element.classList) element.classList.add(className);
          else if (!(0, _hasClass.default)(element, className))
            if (typeof element.className === 'string')
              element.className = element.className + ' ' + className;
            else
              element.setAttribute(
                'class',
                ((element.className && element.className.baseVal) || '') + ' ' + className
              );
        }

        module.exports = exports['default'];

        /***/
      },

    /***/ './node_modules/dom-helpers/class/hasClass.js':
      /*!****************************************************!*\
  !*** ./node_modules/dom-helpers/class/hasClass.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.default = hasClass;

        function hasClass(element, className) {
          if (element.classList) return !!className && element.classList.contains(className);
          else
            return (
              (' ' + (element.className.baseVal || element.className) + ' ').indexOf(
                ' ' + className + ' '
              ) !== -1
            );
        }

        module.exports = exports['default'];

        /***/
      },

    /***/ './node_modules/dom-helpers/class/removeClass.js':
      /*!*******************************************************!*\
  !*** ./node_modules/dom-helpers/class/removeClass.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        function replaceClassName(origClass, classToRemove) {
          return origClass
            .replace(new RegExp('(^|\\s)' + classToRemove + '(?:\\s|$)', 'g'), '$1')
            .replace(/\s+/g, ' ')
            .replace(/^\s*|\s*$/g, '');
        }

        module.exports = function removeClass(element, className) {
          if (element.classList) element.classList.remove(className);
          else if (typeof element.className === 'string')
            element.className = replaceClassName(element.className, className);
          else
            element.setAttribute(
              'class',
              replaceClassName((element.className && element.className.baseVal) || '', className)
            );
        };

        /***/
      },

    /***/ './node_modules/function-bind/implementation.js':
      /*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        /* eslint no-invalid-this: 1 */

        var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
        var slice = Array.prototype.slice;
        var toStr = Object.prototype.toString;
        var funcType = '[object Function]';

        module.exports = function bind(that) {
          var target = this;
          if (typeof target !== 'function' || toStr.call(target) !== funcType) {
            throw new TypeError(ERROR_MESSAGE + target);
          }
          var args = slice.call(arguments, 1);

          var bound;
          var binder = function () {
            if (this instanceof bound) {
              var result = target.apply(this, args.concat(slice.call(arguments)));
              if (Object(result) === result) {
                return result;
              }
              return this;
            } else {
              return target.apply(that, args.concat(slice.call(arguments)));
            }
          };

          var boundLength = Math.max(0, target.length - args.length);
          var boundArgs = [];
          for (var i = 0; i < boundLength; i++) {
            boundArgs.push('$' + i);
          }

          bound = Function(
            'binder',
            'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }'
          )(binder);

          if (target.prototype) {
            var Empty = function Empty() {};
            Empty.prototype = target.prototype;
            bound.prototype = new Empty();
            Empty.prototype = null;
          }

          return bound;
        };

        /***/
      },

    /***/ './node_modules/function-bind/index.js':
      /*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var implementation = __webpack_require__(
          /*! ./implementation */ './node_modules/function-bind/implementation.js'
        );

        module.exports = Function.prototype.bind || implementation;

        /***/
      },

    /***/ './node_modules/has/src/index.js':
      /*!***************************************!*\
  !*** ./node_modules/has/src/index.js ***!
  \***************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var bind = __webpack_require__(
          /*! function-bind */ './node_modules/function-bind/index.js'
        );

        module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

        /***/
      },

    /***/ './node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js':
      /*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var reactIs = __webpack_require__(/*! react-is */ './node_modules/react-is/index.js');

        /**
         * Copyright 2015, Yahoo! Inc.
         * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
         */
        var REACT_STATICS = {
          childContextTypes: true,
          contextType: true,
          contextTypes: true,
          defaultProps: true,
          displayName: true,
          getDefaultProps: true,
          getDerivedStateFromError: true,
          getDerivedStateFromProps: true,
          mixins: true,
          propTypes: true,
          type: true,
        };
        var KNOWN_STATICS = {
          name: true,
          length: true,
          prototype: true,
          caller: true,
          callee: true,
          arguments: true,
          arity: true,
        };
        var FORWARD_REF_STATICS = {
          $$typeof: true,
          render: true,
          defaultProps: true,
          displayName: true,
          propTypes: true,
        };
        var MEMO_STATICS = {
          $$typeof: true,
          compare: true,
          defaultProps: true,
          displayName: true,
          propTypes: true,
          type: true,
        };
        var TYPE_STATICS = {};
        TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
        TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

        function getStatics(component) {
          // React v16.11 and below
          if (reactIs.isMemo(component)) {
            return MEMO_STATICS;
          } // React v16.12 and above

          return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
        }

        var defineProperty = Object.defineProperty;
        var getOwnPropertyNames = Object.getOwnPropertyNames;
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
        var getPrototypeOf = Object.getPrototypeOf;
        var objectPrototype = Object.prototype;
        function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
          if (typeof sourceComponent !== 'string') {
            // don't hoist over string (html) components
            if (objectPrototype) {
              var inheritedComponent = getPrototypeOf(sourceComponent);

              if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
              }
            }

            var keys = getOwnPropertyNames(sourceComponent);

            if (getOwnPropertySymbols) {
              keys = keys.concat(getOwnPropertySymbols(sourceComponent));
            }

            var targetStatics = getStatics(targetComponent);
            var sourceStatics = getStatics(sourceComponent);

            for (var i = 0; i < keys.length; ++i) {
              var key = keys[i];

              if (
                !KNOWN_STATICS[key] &&
                !(blacklist && blacklist[key]) &&
                !(sourceStatics && sourceStatics[key]) &&
                !(targetStatics && targetStatics[key])
              ) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

                try {
                  // Avoid failures from read-only properties
                  defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
              }
            }
          }

          return targetComponent;
        }

        module.exports = hoistNonReactStatics;

        /***/
      },

    /***/ './node_modules/native-url/dist/index.js':
      /*!***********************************************!*\
  !*** ./node_modules/native-url/dist/index.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var e,
          t =
            (e = __webpack_require__(
              /*! querystring */ './node_modules/querystring-es3/index.js'
            )) &&
            'object' == typeof e &&
            'default' in e
              ? e.default
              : e,
          r = /https?|ftp|gopher|file/;
        function o(e) {
          'string' == typeof e && (e = g(e));
          var o = (function (e, t, r) {
            var o = e.auth,
              a = e.hostname,
              s = e.protocol || '',
              c = e.pathname || '',
              h = e.hash || '',
              p = e.query || '',
              n = !1;
            (o = o ? encodeURIComponent(o).replace(/%3A/i, ':') + '@' : ''),
              e.host
                ? (n = o + e.host)
                : a &&
                  ((n = o + (~a.indexOf(':') ? '[' + a + ']' : a)), e.port && (n += ':' + e.port)),
              p && 'object' == typeof p && (p = t.encode(p));
            var l = e.search || (p && '?' + p) || '';
            return (
              s && ':' !== s.substr(-1) && (s += ':'),
              e.slashes || ((!s || r.test(s)) && !1 !== n)
                ? ((n = '//' + (n || '')), c && '/' !== c[0] && (c = '/' + c))
                : n || (n = ''),
              h && '#' !== h[0] && (h = '#' + h),
              l && '?' !== l[0] && (l = '?' + l),
              {
                protocol: s,
                host: n,
                pathname: (c = c.replace(/[?#]/g, encodeURIComponent)),
                search: (l = l.replace('#', '%23')),
                hash: h,
              }
            );
          })(e, t, r);
          return '' + o.protocol + o.host + o.pathname + o.search + o.hash;
        }
        var a = 'http://',
          s = 'w.w',
          c = a + s,
          h = /^([a-z0-9.+-]*:\/\/\/)([a-z0-9.+-]:\/*)?/i,
          p = /https?|ftp|gopher|file/;
        function n(e, t) {
          var r = 'string' == typeof e ? g(e) : e;
          e = 'object' == typeof e ? o(e) : e;
          var s = g(t),
            n = '';
          r.protocol &&
            !r.slashes &&
            ((n = r.protocol),
            (e = e.replace(r.protocol, '')),
            (n += '/' === t[0] || '/' === e[0] ? '/' : '')),
            n &&
              s.protocol &&
              ((n = ''), s.slashes || ((n = s.protocol), (t = t.replace(s.protocol, ''))));
          var l = e.match(h);
          l &&
            !s.protocol &&
            ((e = e.substr((n = l[1] + (l[2] || '')).length)),
            /^\/\/[^/]/.test(t) && (n = n.slice(0, -1)));
          var i = new URL(e, c + '/'),
            f = new URL(t, i).toString().replace(c, ''),
            u = s.protocol || r.protocol;
          return (
            (u += r.slashes || s.slashes ? '//' : ''),
            !n && u ? (f = f.replace(a, u)) : n && (f = f.replace(a, '')),
            p.test(f) ||
              ~t.indexOf('.') ||
              '/' === e.slice(-1) ||
              '/' === t.slice(-1) ||
              '/' !== f.slice(-1) ||
              (f = f.slice(0, -1)),
            n && (f = n + ('/' === f[0] ? f.substr(1) : f)),
            f
          );
        }
        function l() {}
        (l.parse = g), (l.format = o), (l.resolve = n), (l.resolveObject = n);
        var i = /^https?|ftp|gopher|file/,
          f = /^(.*?)([#?].*)/,
          u = /^([a-z0-9.+-]*:)(\/{0,3})(.*)/i,
          m = /^([a-z0-9.+-]*:)?\/\/\/*/i,
          v = /^([a-z0-9.+-]*:)(\/{0,2})\[(.*)\]$/i;
        function d(e) {
          try {
            return decodeURI(e);
          } catch (t) {
            return e;
          }
        }
        function g(e, r, a) {
          if (
            (void 0 === r && (r = !1),
            void 0 === a && (a = !1),
            e && 'object' == typeof e && e instanceof l)
          )
            return e;
          var h = (e = e.trim()).match(f);
          (e = h ? d(h[1]).replace(/\\/g, '/') + h[2] : d(e).replace(/\\/g, '/')),
            v.test(e) && '/' !== e.slice(-1) && (e += '/');
          var p = !/(^javascript)/.test(e) && e.match(u),
            n = m.test(e),
            g = '';
          p &&
            (i.test(p[1]) || ((g = p[1].toLowerCase()), (e = '' + p[2] + p[3])),
            p[2] || ((n = !1), i.test(p[1]) ? ((g = p[1]), (e = '' + p[3])) : (e = '//' + p[3])),
            (3 !== p[2].length && 1 !== p[2].length) || ((g = p[1]), (e = '/' + p[3])));
          var b,
            y = (h ? h[1] : e).match(/(:[0-9]+)/),
            j = '';
          y && y[1] && 3 === y[1].length && (e = e.replace((j = y[1]), j + '00'));
          var w = new l(),
            x = '',
            U = '';
          try {
            b = new URL(e);
          } catch (t) {
            (x = t),
              g || a || !/^\/\//.test(e) || /^\/\/.+[@.]/.test(e) || ((U = '/'), (e = e.substr(1)));
            try {
              b = new URL(e, c);
            } catch (e) {
              return (w.protocol = g), (w.href = g), w;
            }
          }
          (w.slashes = n && !U),
            (w.host = b.host === s ? '' : b.host),
            (w.hostname = b.hostname === s ? '' : b.hostname.replace(/(\[|\])/g, '')),
            (w.protocol = x ? g || null : b.protocol),
            (w.search = b.search.replace(/\\/g, '%5C')),
            (w.hash = b.hash.replace(/\\/g, '%5C'));
          var R = e.split('#');
          !w.search && ~R[0].indexOf('?') && (w.search = '?'),
            w.hash || '' !== R[1] || (w.hash = '#'),
            (w.query = r ? t.decode(b.search.substr(1)) : w.search.substr(1)),
            (w.pathname = U + d(b.pathname).replace(/"/g, '%22')),
            'about:' === w.protocol &&
              'blank' === w.pathname &&
              ((w.protocol = ''), (w.pathname = '')),
            x && '/' !== e[0] && (w.pathname = w.pathname.substr(1)),
            g && !i.test(g) && '/' !== e.slice(-1) && '/' === w.pathname && (w.pathname = ''),
            (w.path = w.pathname + w.search),
            (w.auth = [b.username, b.password].map(decodeURIComponent).filter(Boolean).join(':')),
            (w.port = b.port),
            j && ((w.host = w.host.replace(j + '00', j)), (w.port = w.port.slice(0, -2))),
            (w.href = U ? '' + w.pathname + w.search + w.hash : o(w));
          var O = /^(file)/.test(w.href) ? ['host', 'hostname'] : [];
          return (
            Object.keys(w).forEach(function (e) {
              ~O.indexOf(e) || (w[e] = w[e] || null);
            }),
            w
          );
        }
        (exports.parse = g),
          (exports.format = o),
          (exports.resolve = n),
          (exports.resolveObject = function (e, t) {
            return g(n(e, t));
          }),
          (exports.Url = l);
        //# sourceMappingURL=index.js.map

        /***/
      },

    /***/ './node_modules/next-page-transitions/lib/PageTransition.js':
      /*!******************************************************************!*\
  !*** ./node_modules/next-page-transitions/lib/PageTransition.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        exports.default = void 0;

        var _react = _interopRequireWildcard(
          __webpack_require__(/*! react */ './node_modules/react/index.js')
        );

        var _propTypes = _interopRequireDefault(
          __webpack_require__(/*! prop-types */ './node_modules/prop-types/index.js')
        );

        var _Transition = _interopRequireDefault(
          __webpack_require__(
            /*! react-transition-group/Transition */ './node_modules/react-transition-group/Transition.js'
          )
        );

        var _CSSTransition = _interopRequireDefault(
          __webpack_require__(
            /*! react-transition-group/CSSTransition */ './node_modules/react-transition-group/CSSTransition.js'
          )
        );

        var _PropTypes = __webpack_require__(
          /*! react-transition-group/utils/PropTypes */ './node_modules/react-transition-group/utils/PropTypes.js'
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                  var desc =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(obj, key)
                      : {};
                  if (desc.get || desc.set) {
                    Object.defineProperty(newObj, key, desc);
                  } else {
                    newObj[key] = obj[key];
                  }
                }
              }
            }
            newObj.default = obj;
            return newObj;
          }
        }

        function _typeof(obj) {
          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof = function _typeof(obj) {
              return typeof obj;
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };
          }
          return _typeof(obj);
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        function _possibleConstructorReturn(self, call) {
          if (call && (_typeof(call) === 'object' || typeof call === 'function')) {
            return call;
          }
          return _assertThisInitialized(self);
        }

        function _getPrototypeOf(o) {
          _getPrototypeOf = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function _getPrototypeOf(o) {
                return o.__proto__ || Object.getPrototypeOf(o);
              };
          return _getPrototypeOf(o);
        }

        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function');
          }
          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: { value: subClass, writable: true, configurable: true },
          });
          if (superClass) _setPrototypeOf(subClass, superClass);
        }

        function _setPrototypeOf(o, p) {
          _setPrototypeOf =
            Object.setPrototypeOf ||
            function _setPrototypeOf(o, p) {
              o.__proto__ = p;
              return o;
            };
          return _setPrototypeOf(o, p);
        }

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            var ownKeys = Object.keys(source);
            if (typeof Object.getOwnPropertySymbols === 'function') {
              ownKeys = ownKeys.concat(
                Object.getOwnPropertySymbols(source).filter(function (sym) {
                  return Object.getOwnPropertyDescriptor(source, sym).enumerable;
                })
              );
            }
            ownKeys.forEach(function (key) {
              _defineProperty(target, key, source[key]);
            });
          }
          return target;
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        function areChildrenDifferent(oldChildren, newChildren) {
          return oldChildren !== newChildren;
        }

        function differentChildrenNeedAnimation(oldChildren, newChildren) {
          if (!oldChildren || !newChildren) {
            return true;
          }

          if (
            !_react.default.isValidElement(oldChildren) ||
            !_react.default.isValidElement(newChildren)
          ) {
            // eslint-disable-next-line no-console
            console.warn(
              '[next-page-transitions] PageTransition child is not a valid React component'
            );
            return true;
          }

          if (oldChildren.key == null || newChildren.key == null) {
            // eslint-disable-next-line no-console
            console.warn('[next-page-transitions] PageTransition child does not have a key');
            return true;
          }

          return oldChildren.key !== newChildren.key;
        }

        function buildClassName(className, state) {
          switch (state) {
            case 'enter':
              return ''.concat(className, '-enter');

            case 'entering':
              return ''.concat(className, '-enter ').concat(className, '-enter-active');

            case 'entered':
              return ''.concat(className, '-enter-done');

            case 'exit':
              return ''.concat(className, '-exit');

            case 'exiting':
              return ''.concat(className, '-exit ').concat(className, '-exit-active');

            case 'exited':
              return ''.concat(className, '-exit-done');

            default:
              return '';
          }
        }

        function shouldDelayEnter(children) {
          return _react.default.isValidElement(children) && children.type.pageTransitionDelayEnter;
        }

        function makeStateUpdater(state, otherProps) {
          return function updateState() {
            this.setState(
              _objectSpread(
                {
                  state: state,
                },
                otherProps
              )
            );
          };
        }

        var PageTransition =
          /*#__PURE__*/
          (function (_React$Component) {
            _inherits(PageTransition, _React$Component);

            function PageTransition(props) {
              var _this;

              _classCallCheck(this, PageTransition);

              _this = _possibleConstructorReturn(
                this,
                _getPrototypeOf(PageTransition).call(this, props)
              );

              _defineProperty(
                _assertThisInitialized(_this),
                'onEntering',
                makeStateUpdater('entering').bind(_assertThisInitialized(_this))
              );

              _defineProperty(
                _assertThisInitialized(_this),
                'onEntered',
                makeStateUpdater('entered').bind(_assertThisInitialized(_this))
              );

              _defineProperty(
                _assertThisInitialized(_this),
                'onExiting',
                makeStateUpdater('exiting').bind(_assertThisInitialized(_this))
              );

              _defineProperty(
                _assertThisInitialized(_this),
                'onExited',
                makeStateUpdater('exited', {
                  renderedChildren: null,
                }).bind(_assertThisInitialized(_this))
              );

              var children = props.children;
              _this.state = {
                state: props.skipInitialTransition ? 'init' : 'enter',
                isIn: !shouldDelayEnter(children),
                currentChildren: children,
                nextChildren: null,
                renderedChildren: children,
                showLoading: false,
              };
              return _this;
            }

            _createClass(PageTransition, [
              {
                key: 'componentDidMount',
                value: function componentDidMount() {
                  var _this2 = this;

                  var _this$props = this.props,
                    children = _this$props.children,
                    monkeyPatchScrolling = _this$props.monkeyPatchScrolling;

                  if (shouldDelayEnter(children)) {
                    this.setState({
                      timeoutId: this.startEnterTimer(),
                    });
                  }

                  if (monkeyPatchScrolling && typeof window !== 'undefined') {
                    // Forgive me for what I'm about to do
                    this.originalScrollTo = window.scrollTo;
                    this.disableScrolling = false;

                    window.scrollTo = function () {
                      if (_this2.disableScrolling) return;

                      for (
                        var _len = arguments.length, args = new Array(_len), _key = 0;
                        _key < _len;
                        _key++
                      ) {
                        args[_key] = arguments[_key];
                      }

                      _this2.originalScrollTo.apply(window, args);
                    };
                  }
                },
              },
              {
                key: 'componentDidUpdate',
                value: function componentDidUpdate(prevProps, prevState) {
                  var _this$state = this.state,
                    currentChildren = _this$state.currentChildren,
                    renderedChildren = _this$state.renderedChildren,
                    nextChildren = _this$state.nextChildren,
                    isIn = _this$state.isIn,
                    state = _this$state.state;
                  var children = this.props.children;
                  var _this$state2 = this.state,
                    timeoutId = _this$state2.timeoutId,
                    showLoading = _this$state2.showLoading;
                  var hasNewChildren = areChildrenDifferent(currentChildren, children);
                  var needsTransition = areChildrenDifferent(renderedChildren, children);
                  var shouldAnimateTransition =
                    needsTransition && differentChildrenNeedAnimation(renderedChildren, children);

                  if (isIn && needsTransition && !shouldAnimateTransition) {
                    // We need to update our rendered children, but we shouldn't animate them.
                    // This will occur when the key prop on our children stays the same but
                    // the children themselves change. This can happen in a lot of cases: HMR,
                    // a rerender due to a Redux state change, a Router.push to the current page,
                    // etc. In this case, we'll just immediately flush the children to be
                    // rendered.
                    this.setState({
                      currentChildren: children,
                      renderedChildren: children,
                    });
                  } else if (hasNewChildren) {
                    // We got a new set of children while we were transitioning some in
                    // Immediately start transitioning out this component and update the next
                    // component
                    this.setState({
                      isIn: false,
                      nextChildren: children,
                      currentChildren: children,
                    });

                    if (timeoutId) {
                      clearTimeout(timeoutId);
                    }
                  } else if (
                    needsTransition &&
                    !isIn &&
                    (state === 'enter' || state === 'exited')
                  ) {
                    if (shouldDelayEnter(nextChildren)) {
                      // Wait for the ready callback to actually transition in, but still
                      // mount the component to allow it to start loading things
                      this.setState({
                        renderedChildren: nextChildren,
                        nextChildren: null,
                        timeoutId: this.startEnterTimer(),
                      });
                    } else {
                      // No need to wait, mount immediately
                      this.setState({
                        isIn: true,
                        renderedChildren: nextChildren,
                        nextChildren: null,
                      });
                    }
                  } else if (prevState.showLoading && !showLoading) {
                    // We hid the loading indicator; now that that change has been flushed to
                    // the DOM, we can now bring in the next component!
                    this.setState({
                      isIn: true,
                    });
                  }
                },
              },
              {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                  if (this.originalScrollTo && typeof window !== 'undefined') {
                    window.scrollTo = this.originalScrollTo;
                  }

                  var timeoutId = this.state.timeoutId;
                  if (timeoutId) clearTimeout(timeoutId);
                },
              },
              {
                key: 'onEnter',
                value: function onEnter() {
                  // It's safe to reenable scrolling now
                  this.disableScrolling = false;
                  this.setState({
                    state: 'enter',
                    showLoading: false,
                  });
                },
              },
              {
                key: 'onExit',
                value: function onExit() {
                  // Disable scrolling until this component has unmounted
                  this.disableScrolling = true;
                  this.setState({
                    state: 'exit',
                  });
                },
              },
              {
                key: 'onChildLoaded',
                value: function onChildLoaded() {
                  var _this$state3 = this.state,
                    timeoutId = _this$state3.timeoutId,
                    showLoading = _this$state3.showLoading;

                  if (timeoutId) {
                    clearTimeout(timeoutId);
                  }

                  if (showLoading) {
                    // We'll hide the loader first and animate in the page on the next tick
                    this.setState({
                      showLoading: false,
                    });
                  } else {
                    // We can immediately bring in the next page!
                    this.setState({
                      isIn: true,
                    });
                  }
                },
              },
              {
                key: 'startEnterTimer',
                value: function startEnterTimer() {
                  var _this3 = this;

                  var loadingDelay = this.props.loadingDelay;
                  return setTimeout(function () {
                    _this3.setState({
                      showLoading: true,
                    });
                  }, loadingDelay);
                },
              },
              {
                key: 'render',
                value: function render() {
                  var _this4 = this;

                  var _this$props2 = this.props,
                    Tag = _this$props2.tag,
                    timeout = _this$props2.timeout,
                    loadingComponent = _this$props2.loadingComponent,
                    loadingCallbackName = _this$props2.loadingCallbackName,
                    classNames = _this$props2.classNames,
                    loadingClassNames = _this$props2.loadingClassNames,
                    loadingTimeout = _this$props2.loadingTimeout,
                    skipInitialTransition = _this$props2.skipInitialTransition;
                  var _this$state4 = this.state,
                    children = _this$state4.renderedChildren,
                    state = _this$state4.state,
                    isIn = _this$state4.isIn,
                    showLoading = _this$state4.showLoading;

                  if (['entering', 'exiting', 'exited'].indexOf(state) !== -1) {
                    // Need to reflow!
                    // eslint-disable-next-line no-unused-expressions
                    if (document.body) document.body.scrollTop;
                  }

                  var hasLoadingComponent = !!loadingComponent;
                  var containerClassName = buildClassName(classNames, state);
                  return _react.default.createElement(
                    _react.Fragment,
                    null,
                    _react.default.createElement(
                      _Transition.default,
                      {
                        timeout: timeout,
                        in: isIn,
                        appear: !skipInitialTransition,
                        onEnter: function onEnter() {
                          return _this4.onEnter();
                        },
                        onEntering: function onEntering() {
                          return _this4.onEntering();
                        },
                        onEntered: function onEntered() {
                          return _this4.onEntered();
                        },
                        onExit: function onExit() {
                          return _this4.onExit();
                        },
                        onExiting: function onExiting() {
                          return _this4.onExiting();
                        },
                        onExited: function onExited() {
                          return _this4.onExited();
                        },
                      },
                      _react.default.createElement(
                        Tag,
                        {
                          className: containerClassName,
                        },
                        children &&
                          _react.default.cloneElement(
                            children,
                            _defineProperty({}, loadingCallbackName, function () {
                              return _this4.onChildLoaded();
                            })
                          )
                      )
                    ),
                    hasLoadingComponent &&
                      _react.default.createElement(
                        _CSSTransition.default,
                        {
                          in: showLoading,
                          mountOnEnter: true,
                          unmountOnExit: true,
                          appear: true,
                          classNames: loadingClassNames,
                          timeout: loadingTimeout,
                        },
                        loadingComponent
                      )
                  );
                },
              },
            ]);

            return PageTransition;
          })(_react.default.Component); // We do weird things with timeoutsShape because these are omitted in some
        // environments
        // See https://github.com/reactjs/react-transition-group/pull/448

        PageTransition.propTypes = {
          tag: _propTypes.default.oneOfType([
            _propTypes.default.func,
            _propTypes.default.string,
            _propTypes.default.shape({
              $$typeof: _propTypes.default.symbol,
              render: _propTypes.default.func,
            }),
          ]),
          children: _propTypes.default.node.isRequired,
          classNames: _propTypes.default.string.isRequired,

          /* eslint-disable react/require-default-props */
          timeout: function timeout(props) {
            if (_PropTypes.timeoutsShape) {
              for (
                var _len2 = arguments.length,
                  args = new Array(_len2 > 1 ? _len2 - 1 : 0),
                  _key2 = 1;
                _key2 < _len2;
                _key2++
              ) {
                args[_key2 - 1] = arguments[_key2];
              }

              return _PropTypes.timeoutsShape.isRequired.apply(
                _PropTypes.timeoutsShape,
                [props].concat(args)
              );
            }

            return undefined;
          },
          loadingComponent: _propTypes.default.element,
          loadingDelay: _propTypes.default.number,
          loadingCallbackName: _propTypes.default.string,

          /* eslint-disable react/require-default-props */
          loadingTimeout: function loadingTimeout(props) {
            if (_PropTypes.timeoutsShape && props.loadingComponent) {
              for (
                var _len3 = arguments.length,
                  args = new Array(_len3 > 1 ? _len3 - 1 : 0),
                  _key3 = 1;
                _key3 < _len3;
                _key3++
              ) {
                args[_key3 - 1] = arguments[_key3];
              }

              return _PropTypes.timeoutsShape.isRequired.apply(
                _PropTypes.timeoutsShape,
                [props].concat(args)
              );
            }

            return undefined;
          },
          loadingClassNames: function loadingClassNames(props) {
            var pt = _propTypes.default.string;
            if (props.loadingTimeout) pt = pt.isRequired;

            for (
              var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1;
              _key4 < _len4;
              _key4++
            ) {
              args[_key4 - 1] = arguments[_key4];
            }

            return pt.apply(void 0, [props].concat(args));
          },

          /* eslint-enable react/require-default-props */
          monkeyPatchScrolling: _propTypes.default.bool,
          skipInitialTransition: _propTypes.default.bool,
        };
        PageTransition.defaultProps = {
          tag: 'div',
          loadingComponent: null,
          loadingCallbackName: 'pageTransitionReadyToEnter',
          loadingDelay: 500,
          monkeyPatchScrolling: false,
          skipInitialTransition: false,
        };
        var _default = PageTransition;
        exports.default = _default;

        /***/
      },

    /***/ './node_modules/next-page-transitions/lib/index.js':
      /*!*********************************************************!*\
  !*** ./node_modules/next-page-transitions/lib/index.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var _PageTransition = _interopRequireDefault(
          __webpack_require__(
            /*! ./PageTransition */ './node_modules/next-page-transitions/lib/PageTransition.js'
          )
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        module.exports = {
          PageTransition: _PageTransition.default,
        };

        /***/
      },

    /***/ './node_modules/next/dist/build/polyfills/object-assign.js':
      /*!***********************************************************************************************************************!*\
  !*** delegated ./node_modules/next/dist/build/polyfills/object-assign.js from dll-reference dll_5030f387d328e4415785 ***!
  \***********************************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_5030f387d328e4415785 */ 'dll-reference dll_5030f387d328e4415785'
        )('./node_modules/next/dist/build/polyfills/object-assign.js');

        /***/
      },

    /***/ './node_modules/next/dist/build/polyfills/object.assign/index.js':
      /*!***********************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object.assign/index.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        var assign = Object.assign.bind(Object);
        function g() {
          return assign;
        }
        Object.defineProperties(g(), {
          implementation: { get: g },
          shim: { value: g },
          getPolyfill: { value: g },
        });
        module.exports = g();
        //# sourceMappingURL=index.js.map

        /***/
      },

    /***/ './node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx!./':
      /*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx ***!
  \**********************************************************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        (window.__NEXT_P = window.__NEXT_P || []).push([
          '/_app',
          function () {
            return __webpack_require__(/*! private-next-pages/_app.tsx */ './pages/_app.tsx');
          },
        ]);

        /***/
      },

    /***/ './node_modules/next/dist/client/link.js':
      /*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          var _classCallCheck = __webpack_require__(
            /*! @babel/runtime/helpers/classCallCheck */ './node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js'
          );

          var _createClass = __webpack_require__(
            /*! @babel/runtime/helpers/createClass */ './node_modules/next/node_modules/@babel/runtime/helpers/createClass.js'
          );

          var _inherits = __webpack_require__(
            /*! @babel/runtime/helpers/inherits */ './node_modules/next/node_modules/@babel/runtime/helpers/inherits.js'
          );

          var _possibleConstructorReturn = __webpack_require__(
            /*! @babel/runtime/helpers/possibleConstructorReturn */ './node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
          );

          var _getPrototypeOf = __webpack_require__(
            /*! @babel/runtime/helpers/getPrototypeOf */ './node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf.js'
          );

          function _createSuper(Derived) {
            var hasNativeReflectConstruct = _isNativeReflectConstruct();
            return function _createSuperInternal() {
              var Super = _getPrototypeOf(Derived),
                result;
              if (hasNativeReflectConstruct) {
                var NewTarget = _getPrototypeOf(this).constructor;
                result = Reflect.construct(Super, arguments, NewTarget);
              } else {
                result = Super.apply(this, arguments);
              }
              return _possibleConstructorReturn(this, result);
            };
          }

          function _isNativeReflectConstruct() {
            if (typeof Reflect === 'undefined' || !Reflect.construct) return false;
            if (Reflect.construct.sham) return false;
            if (typeof Proxy === 'function') return true;
            try {
              Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
              return true;
            } catch (e) {
              return false;
            }
          }

          var _interopRequireDefault = __webpack_require__(
            /*! @babel/runtime/helpers/interopRequireDefault */ './node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js'
          );

          var _interopRequireWildcard = __webpack_require__(
            /*! @babel/runtime/helpers/interopRequireWildcard */ './node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js'
          );

          exports.__esModule = true;
          exports['default'] = void 0;

          var _react = _interopRequireWildcard(
            __webpack_require__(/*! react */ './node_modules/react/index.js')
          );

          var _url = __webpack_require__(/*! url */ './node_modules/native-url/dist/index.js');

          var _utils = __webpack_require__(
            /*! ../next-server/lib/utils */ './node_modules/next/dist/next-server/lib/utils.js'
          );

          var _router = _interopRequireDefault(
            __webpack_require__(/*! ./router */ './node_modules/next/dist/client/router.js')
          );

          var _router2 = __webpack_require__(
            /*! ../next-server/lib/router/router */ './node_modules/next/dist/next-server/lib/router/router.js'
          );

          function isLocal(href) {
            var url = (0, _url.parse)(href, false, true);
            var origin = (0, _url.parse)((0, _utils.getLocationOrigin)(), false, true);
            return !url.host || (url.protocol === origin.protocol && url.host === origin.host);
          }

          function memoizedFormatUrl(formatFunc) {
            var lastHref = null;
            var lastAs = null;
            var lastResult = null;
            return function (href, as) {
              if (lastResult && href === lastHref && as === lastAs) {
                return lastResult;
              }

              var result = formatFunc(href, as);
              lastHref = href;
              lastAs = as;
              lastResult = result;
              return result;
            };
          }

          function formatUrl(url) {
            return url && typeof url === 'object' ? (0, _utils.formatWithValidation)(url) : url;
          }

          var observer;
          var listeners = new Map();
          var IntersectionObserver = true ? window.IntersectionObserver : undefined;
          var prefetched = {};

          function getObserver() {
            // Return shared instance of IntersectionObserver if already created
            if (observer) {
              return observer;
            } // Only create shared IntersectionObserver if supported in browser

            if (!IntersectionObserver) {
              return undefined;
            }

            return (observer = new IntersectionObserver(
              function (entries) {
                entries.forEach(function (entry) {
                  if (!listeners.has(entry.target)) {
                    return;
                  }

                  var cb = listeners.get(entry.target);

                  if (entry.isIntersecting || entry.intersectionRatio > 0) {
                    observer.unobserve(entry.target);
                    listeners['delete'](entry.target);
                    cb();
                  }
                });
              },
              {
                rootMargin: '200px',
              }
            ));
          }

          var listenToIntersections = function listenToIntersections(el, cb) {
            var observer = getObserver();

            if (!observer) {
              return function () {};
            }

            observer.observe(el);
            listeners.set(el, cb);
            return function () {
              try {
                observer.unobserve(el);
              } catch (err) {
                console.error(err);
              }

              listeners['delete'](el);
            };
          };

          var Link = /*#__PURE__*/ (function (_react$Component) {
            _inherits(Link, _react$Component);

            var _super = _createSuper(Link);

            function Link(props) {
              var _this;

              _classCallCheck(this, Link);

              _this = _super.call(this, props);
              _this.p = void 0;

              _this.cleanUpListeners = function () {};

              _this.formatUrls = memoizedFormatUrl(function (href, asHref) {
                return {
                  href: (0, _router2.addBasePath)(formatUrl(href)),
                  as: asHref ? (0, _router2.addBasePath)(formatUrl(asHref)) : asHref,
                };
              });

              _this.linkClicked = function (e) {
                var _e$currentTarget = e.currentTarget,
                  nodeName = _e$currentTarget.nodeName,
                  target = _e$currentTarget.target;

                if (
                  nodeName === 'A' &&
                  ((target && target !== '_self') ||
                    e.metaKey ||
                    e.ctrlKey ||
                    e.shiftKey ||
                    (e.nativeEvent && e.nativeEvent.which === 2))
                ) {
                  // ignore click for new tab / new window behavior
                  return;
                }

                var _this$formatUrls = _this.formatUrls(_this.props.href, _this.props.as),
                  href = _this$formatUrls.href,
                  as = _this$formatUrls.as;

                if (!isLocal(href)) {
                  // ignore click if it's outside our scope (e.g. https://google.com)
                  return;
                }

                var pathname = window.location.pathname;
                href = (0, _url.resolve)(pathname, href);
                as = as ? (0, _url.resolve)(pathname, as) : href;
                e.preventDefault(); //  avoid scroll for urls with anchor refs

                var scroll = _this.props.scroll;

                if (scroll == null) {
                  scroll = as.indexOf('#') < 0;
                } // replace state instead of push if prop is present

                _router['default']
                  [_this.props.replace ? 'replace' : 'push'](href, as, {
                    shallow: _this.props.shallow,
                  })
                  .then(function (success) {
                    if (!success) return;

                    if (scroll) {
                      window.scrollTo(0, 0);
                      document.body.focus();
                    }
                  });
              };

              if (true) {
                if (props.prefetch) {
                  console.warn(
                    'Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated'
                  );
                }
              }

              _this.p = props.prefetch !== false;
              return _this;
            }

            _createClass(Link, [
              {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                  this.cleanUpListeners();
                },
              },
              {
                key: 'getPaths',
                value: function getPaths() {
                  var pathname = window.location.pathname;

                  var _this$formatUrls2 = this.formatUrls(this.props.href, this.props.as),
                    parsedHref = _this$formatUrls2.href,
                    parsedAs = _this$formatUrls2.as;

                  var resolvedHref = (0, _url.resolve)(pathname, parsedHref);
                  return [
                    resolvedHref,
                    parsedAs ? (0, _url.resolve)(pathname, parsedAs) : resolvedHref,
                  ];
                },
              },
              {
                key: 'handleRef',
                value: function handleRef(ref) {
                  var _this2 = this;

                  if (this.p && IntersectionObserver && ref && ref.tagName) {
                    this.cleanUpListeners();
                    var isPrefetched =
                      prefetched[
                        this.getPaths().join(
                          // Join on an invalid URI character
                          '%'
                        )
                      ];

                    if (!isPrefetched) {
                      this.cleanUpListeners = listenToIntersections(ref, function () {
                        _this2.prefetch();
                      });
                    }
                  }
                }, // The function is memoized so that no extra lifecycles are needed
                // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html
              },
              {
                key: 'prefetch',
                value: function prefetch(options) {
                  if (!this.p || false) return; // Prefetch the JSON page if asked (only in the client)

                  var paths = this.getPaths(); // We need to handle a prefetch error here since we may be
                  // loading with priority which can reject but we don't
                  // want to force navigation since this is only a prefetch

                  _router['default']
                    .prefetch(
                      paths[/* href */
                      0],
                      paths[/* asPath */
                      1],
                      options
                    )
                    ['catch'](function (err) {
                      if (true) {
                        // rethrow to show invalid URL errors
                        throw err;
                      }
                    });

                  prefetched[
                    paths.join(
                      // Join on an invalid URI character
                      '%'
                    )
                  ] = true;
                },
              },
              {
                key: 'render',
                value: function render() {
                  var _this3 = this;

                  var children = this.props.children;

                  var _this$formatUrls3 = this.formatUrls(this.props.href, this.props.as),
                    href = _this$formatUrls3.href,
                    as = _this$formatUrls3.as; // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag

                  if (typeof children === 'string') {
                    children = /*#__PURE__*/ _react['default'].createElement('a', null, children);
                  } // This will return the first child, if multiple are provided it will throw an error

                  var child = _react.Children.only(children);

                  var props = {
                    ref: function ref(el) {
                      _this3.handleRef(el);

                      if (child && typeof child === 'object' && child.ref) {
                        if (typeof child.ref === 'function') child.ref(el);
                        else if (typeof child.ref === 'object') {
                          child.ref.current = el;
                        }
                      }
                    },
                    onMouseEnter: function onMouseEnter(e) {
                      if (child.props && typeof child.props.onMouseEnter === 'function') {
                        child.props.onMouseEnter(e);
                      }

                      _this3.prefetch({
                        priority: true,
                      });
                    },
                    onClick: function onClick(e) {
                      if (child.props && typeof child.props.onClick === 'function') {
                        child.props.onClick(e);
                      }

                      if (!e.defaultPrevented) {
                        _this3.linkClicked(e);
                      }
                    },
                  }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
                  // defined, we specify the current 'href', so that repetition is not needed by the user

                  if (this.props.passHref || (child.type === 'a' && !('href' in child.props))) {
                    props.href = as || href;
                  } // Add the ending slash to the paths. So, we can serve the
                  // "<page>/index.html" directly.

                  if (false) {
                    var rewriteUrlForNextExport;
                  }

                  return _react['default'].cloneElement(child, props);
                },
              },
            ]);

            return Link;
          })(_react.Component);

          if (true) {
            var warn = (0, _utils.execOnce)(console.error); // This module gets removed by webpack.IgnorePlugin

            var PropTypes = __webpack_require__(
              /*! prop-types */ './node_modules/prop-types/index.js'
            );

            var exact = __webpack_require__(
              /*! prop-types-exact */ './node_modules/prop-types-exact/build/index.js'
            ); // @ts-ignore the property is supported, when declaring it on the class it outputs an extra bit of code which is not needed.

            Link.propTypes = exact({
              href: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,
              as: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
              prefetch: PropTypes.bool,
              replace: PropTypes.bool,
              shallow: PropTypes.bool,
              passHref: PropTypes.bool,
              scroll: PropTypes.bool,
              children: PropTypes.oneOfType([
                PropTypes.element,
                function (props, propName) {
                  var value = props[propName];

                  if (typeof value === 'string') {
                    warn(
                      "Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>"
                    );
                  }

                  return null;
                },
              ]).isRequired,
            });
          }

          var _default = Link;
          exports['default'] = _default;

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/client/router.js':
      /*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          var _construct = __webpack_require__(
            /*! @babel/runtime/helpers/construct */ './node_modules/next/node_modules/@babel/runtime/helpers/construct.js'
          );

          var _s = $RefreshSig$();

          function _createForOfIteratorHelper(o, allowArrayLike) {
            var it;
            if (typeof Symbol === 'undefined' || o[Symbol.iterator] == null) {
              if (
                Array.isArray(o) ||
                (it = _unsupportedIterableToArray(o)) ||
                (allowArrayLike && o && typeof o.length === 'number')
              ) {
                if (it) o = it;
                var i = 0;
                var F = function F() {};
                return {
                  s: F,
                  n: function n() {
                    if (i >= o.length) return { done: true };
                    return { done: false, value: o[i++] };
                  },
                  e: function e(_e) {
                    throw _e;
                  },
                  f: F,
                };
              }
              throw new TypeError(
                'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
              );
            }
            var normalCompletion = true,
              didErr = false,
              err;
            return {
              s: function s() {
                it = o[Symbol.iterator]();
              },
              n: function n() {
                var step = it.next();
                normalCompletion = step.done;
                return step;
              },
              e: function e(_e2) {
                didErr = true;
                err = _e2;
              },
              f: function f() {
                try {
                  if (!normalCompletion && it['return'] != null) it['return']();
                } finally {
                  if (didErr) throw err;
                }
              },
            };
          }

          function _unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if (typeof o === 'string') return _arrayLikeToArray(o, minLen);
            var n = Object.prototype.toString.call(o).slice(8, -1);
            if (n === 'Object' && o.constructor) n = o.constructor.name;
            if (n === 'Map' || n === 'Set') return Array.from(o);
            if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
              return _arrayLikeToArray(o, minLen);
          }

          function _arrayLikeToArray(arr, len) {
            if (len == null || len > arr.length) len = arr.length;
            for (var i = 0, arr2 = new Array(len); i < len; i++) {
              arr2[i] = arr[i];
            }
            return arr2;
          }

          var _interopRequireWildcard = __webpack_require__(
            /*! @babel/runtime/helpers/interopRequireWildcard */ './node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js'
          );

          var _interopRequireDefault = __webpack_require__(
            /*! @babel/runtime/helpers/interopRequireDefault */ './node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js'
          );

          exports.__esModule = true;
          exports.useRouter = useRouter;
          exports.makePublicRouterInstance = makePublicRouterInstance;
          exports.createRouter = exports.withRouter = exports['default'] = void 0;

          var _react = _interopRequireDefault(
            __webpack_require__(/*! react */ './node_modules/react/index.js')
          );

          var _router2 = _interopRequireWildcard(
            __webpack_require__(
              /*! ../next-server/lib/router/router */ './node_modules/next/dist/next-server/lib/router/router.js'
            )
          );

          exports.Router = _router2['default'];
          exports.NextRouter = _router2.NextRouter;

          var _routerContext = __webpack_require__(
            /*! ../next-server/lib/router-context */ './node_modules/next/dist/next-server/lib/router-context.js'
          );

          var _withRouter = _interopRequireDefault(
            __webpack_require__(
              /*! ./with-router */ './node_modules/next/dist/client/with-router.js'
            )
          );

          exports.withRouter = _withRouter['default'];
          /* global window */

          var singletonRouter = {
            router: null,
            // holds the actual router instance
            readyCallbacks: [],
            ready: function ready(cb) {
              if (this.router) return cb();

              if (true) {
                this.readyCallbacks.push(cb);
              }
            },
          }; // Create public properties and methods of the router in the singletonRouter

          var urlPropertyFields = [
            'pathname',
            'route',
            'query',
            'asPath',
            'components',
            'isFallback',
            'basePath',
          ];
          var routerEvents = [
            'routeChangeStart',
            'beforeHistoryChange',
            'routeChangeComplete',
            'routeChangeError',
            'hashChangeStart',
            'hashChangeComplete',
          ];
          var coreMethodFields = [
            'push',
            'replace',
            'reload',
            'back',
            'prefetch',
            'beforePopState',
          ]; // Events is a static property on the router, the router doesn't have to be initialized to use it

          Object.defineProperty(singletonRouter, 'events', {
            get: function get() {
              return _router2['default'].events;
            },
          });
          urlPropertyFields.forEach(function (field) {
            // Here we need to use Object.defineProperty because, we need to return
            // the property assigned to the actual router
            // The value might get changed as we change routes and this is the
            // proper way to access it
            Object.defineProperty(singletonRouter, field, {
              get: function get() {
                var router = getRouter();
                return router[field];
              },
            });
          });
          coreMethodFields.forEach(function (field) {
            // We don't really know the types here, so we add them later instead
            singletonRouter[field] = function () {
              var router = getRouter();
              return router[field].apply(router, arguments);
            };
          });
          routerEvents.forEach(function (event) {
            singletonRouter.ready(function () {
              _router2['default'].events.on(event, function () {
                var eventField = 'on'
                  .concat(event.charAt(0).toUpperCase())
                  .concat(event.substring(1));
                var _singletonRouter = singletonRouter;

                if (_singletonRouter[eventField]) {
                  try {
                    _singletonRouter[eventField].apply(_singletonRouter, arguments);
                  } catch (err) {
                    // tslint:disable-next-line:no-console
                    console.error('Error when running the Router event: '.concat(eventField)); // tslint:disable-next-line:no-console

                    console.error(''.concat(err.message, '\n').concat(err.stack));
                  }
                }
              });
            });
          });

          function getRouter() {
            if (!singletonRouter.router) {
              var message =
                'No router instance found.\n' +
                'You should only use "next/router" inside the client side of your app.\n';
              throw new Error(message);
            }

            return singletonRouter.router;
          } // Export the singletonRouter and this is the public API.

          var _default = singletonRouter; // Reexport the withRoute HOC

          exports['default'] = _default;

          function useRouter() {
            _s();

            return _react['default'].useContext(_routerContext.RouterContext);
          } // INTERNAL APIS
          // -------------
          // (do not use following exports inside the app)
          // Create a router and assign it as the singleton instance.
          // This is used in client side when we are initilizing the app.
          // This should **not** use inside the server.

          _s(useRouter, 'gDsCjeeItUuvgOWf1v4qoK9RF6k=');

          var createRouter = function createRouter() {
            for (
              var _len = arguments.length, args = new Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            singletonRouter.router = _construct(_router2['default'], args);
            singletonRouter.readyCallbacks.forEach(function (cb) {
              return cb();
            });
            singletonRouter.readyCallbacks = [];
            return singletonRouter.router;
          }; // This function is used to create the `withRouter` router instance

          exports.createRouter = createRouter;

          function makePublicRouterInstance(router) {
            var _router = router;
            var instance = {};

            var _iterator = _createForOfIteratorHelper(urlPropertyFields),
              _step;

            try {
              for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                var property = _step.value;

                if (typeof _router[property] === 'object') {
                  instance[property] = Object.assign({}, _router[property]); // makes sure query is not stateful

                  continue;
                }

                instance[property] = _router[property];
              } // Events is a static property on the router, the router doesn't have to be initialized to use it
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }

            instance.events = _router2['default'].events;
            coreMethodFields.forEach(function (field) {
              instance[field] = function () {
                return _router[field].apply(_router, arguments);
              };
            });
            return instance;
          }

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/client/with-router.js':
      /*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          var _interopRequireDefault = __webpack_require__(
            /*! @babel/runtime/helpers/interopRequireDefault */ './node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js'
          );

          exports.__esModule = true;
          exports['default'] = withRouter;

          var _react = _interopRequireDefault(
            __webpack_require__(/*! react */ './node_modules/react/index.js')
          );

          var _router = __webpack_require__(
            /*! ./router */ './node_modules/next/dist/client/router.js'
          );

          function withRouter(ComposedComponent) {
            function WithRouterWrapper(props) {
              return /*#__PURE__*/ _react['default'].createElement(
                ComposedComponent,
                Object.assign(
                  {
                    router: (0, _router.useRouter)(),
                  },
                  props
                )
              );
            }

            WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps; // This is needed to allow checking for custom getInitialProps in _app
            WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;

            if (true) {
              var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
              WithRouterWrapper.displayName = 'withRouter('.concat(name, ')');
            }

            return WithRouterWrapper;
          }

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/amp-context.js':
      /*!***************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/amp-context.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          exports.__esModule = true;
          exports.AmpStateContext = void 0;

          var _react = _interopRequireDefault(
            __webpack_require__(/*! react */ './node_modules/react/index.js')
          );

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule
              ? obj
              : {
                  default: obj,
                };
          }

          var AmpStateContext = _react['default'].createContext({});

          exports.AmpStateContext = AmpStateContext;

          if (true) {
            AmpStateContext.displayName = 'AmpStateContext';
          }

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/amp.js':
      /*!*******************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/amp.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          var _s = $RefreshSig$();

          exports.__esModule = true;
          exports.isInAmpMode = isInAmpMode;
          exports.useAmp = useAmp;

          var _react = _interopRequireDefault(
            __webpack_require__(/*! react */ './node_modules/react/index.js')
          );

          var _ampContext = __webpack_require__(
            /*! ./amp-context */ './node_modules/next/dist/next-server/lib/amp-context.js'
          );

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule
              ? obj
              : {
                  default: obj,
                };
          }

          function isInAmpMode() {
            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
              _ref$ampFirst = _ref.ampFirst,
              ampFirst = _ref$ampFirst === void 0 ? false : _ref$ampFirst,
              _ref$hybrid = _ref.hybrid,
              hybrid = _ref$hybrid === void 0 ? false : _ref$hybrid,
              _ref$hasQuery = _ref.hasQuery,
              hasQuery = _ref$hasQuery === void 0 ? false : _ref$hasQuery;

            return ampFirst || (hybrid && hasQuery);
          }

          function useAmp() {
            _s();

            // Don't assign the context value to a variable to save bytes
            return isInAmpMode(_react['default'].useContext(_ampContext.AmpStateContext));
          }

          _s(useAmp, 'gDsCjeeItUuvgOWf1v4qoK9RF6k=');

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/head-manager-context.js':
      /*!************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/head-manager-context.js ***!
  \************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          exports.__esModule = true;
          exports.HeadManagerContext = void 0;

          var _react = _interopRequireDefault(
            __webpack_require__(/*! react */ './node_modules/react/index.js')
          );

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule
              ? obj
              : {
                  default: obj,
                };
          }

          var HeadManagerContext = _react['default'].createContext(null);

          exports.HeadManagerContext = HeadManagerContext;

          if (true) {
            HeadManagerContext.displayName = 'HeadManagerContext';
          }

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/head.js':
      /*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/head.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          exports.__esModule = true;
          exports.defaultHead = defaultHead;
          exports['default'] = void 0;

          var _react = _interopRequireDefault(
            __webpack_require__(/*! react */ './node_modules/react/index.js')
          );

          var _sideEffect = _interopRequireDefault(
            __webpack_require__(
              /*! ./side-effect */ './node_modules/next/dist/next-server/lib/side-effect.js'
            )
          );

          var _ampContext = __webpack_require__(
            /*! ./amp-context */ './node_modules/next/dist/next-server/lib/amp-context.js'
          );

          var _headManagerContext = __webpack_require__(
            /*! ./head-manager-context */ './node_modules/next/dist/next-server/lib/head-manager-context.js'
          );

          var _amp = __webpack_require__(
            /*! ./amp */ './node_modules/next/dist/next-server/lib/amp.js'
          );

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule
              ? obj
              : {
                  default: obj,
                };
          }

          function defaultHead() {
            var inAmpMode =
              arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
            var head = [
              /*#__PURE__*/ _react['default'].createElement('meta', {
                charSet: 'utf-8',
              }),
            ];

            if (!inAmpMode) {
              head.push(
                /*#__PURE__*/ _react['default'].createElement('meta', {
                  name: 'viewport',
                  content: 'width=device-width',
                })
              );
            }

            return head;
          }

          function onlyReactElement(list, child) {
            // React children can be "string" or "number" in this case we ignore them for backwards compat
            if (typeof child === 'string' || typeof child === 'number') {
              return list;
            } // Adds support for React.Fragment

            if (child.type === _react['default'].Fragment) {
              return list.concat(
                _react['default'].Children.toArray(child.props.children).reduce(function (
                  fragmentList,
                  fragmentChild
                ) {
                  if (typeof fragmentChild === 'string' || typeof fragmentChild === 'number') {
                    return fragmentList;
                  }

                  return fragmentList.concat(fragmentChild);
                },
                [])
              );
            }

            return list.concat(child);
          }

          var METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp'];
          /*
returns a function for filtering head child elements
which shouldn't be duplicated, like <title/>
Also adds support for deduplicated `key` properties
*/

          function unique() {
            var keys = new Set();
            var tags = new Set();
            var metaTypes = new Set();
            var metaCategories = {};
            return function (h) {
              var unique = true;

              if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {
                var key = h.key.slice(h.key.indexOf('$') + 1);

                if (keys.has(key)) {
                  unique = false;
                } else {
                  keys.add(key);
                }
              } // eslint-disable-next-line default-case

              switch (h.type) {
                case 'title':
                case 'base':
                  if (tags.has(h.type)) {
                    unique = false;
                  } else {
                    tags.add(h.type);
                  }

                  break;

                case 'meta':
                  for (var i = 0, len = METATYPES.length; i < len; i++) {
                    var metatype = METATYPES[i];
                    if (!h.props.hasOwnProperty(metatype)) continue;

                    if (metatype === 'charSet') {
                      if (metaTypes.has(metatype)) {
                        unique = false;
                      } else {
                        metaTypes.add(metatype);
                      }
                    } else {
                      var category = h.props[metatype];
                      var categories = metaCategories[metatype] || new Set();

                      if (categories.has(category)) {
                        unique = false;
                      } else {
                        categories.add(category);
                        metaCategories[metatype] = categories;
                      }
                    }
                  }

                  break;
              }

              return unique;
            };
          }
          /**
           *
           * @param headElements List of multiple <Head> instances
           */

          function reduceComponents(headElements, props) {
            return headElements
              .reduce(function (list, headElement) {
                var headElementChildren = _react['default'].Children.toArray(
                  headElement.props.children
                );

                return list.concat(headElementChildren);
              }, [])
              .reduce(onlyReactElement, [])
              .reverse()
              .concat(defaultHead(props.inAmpMode))
              .filter(unique())
              .reverse()
              .map(function (c, i) {
                var key = c.key || i;
                return _react['default'].cloneElement(c, {
                  key: key,
                });
              });
          }

          var Effect = (0, _sideEffect['default'])();
          /**
           * This component injects elements to `<head>` of your page.
           * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.
           */

          function Head(_ref) {
            var children = _ref.children;
            return /*#__PURE__*/ _react['default'].createElement(
              _ampContext.AmpStateContext.Consumer,
              null,
              function (ampState) {
                return /*#__PURE__*/ _react['default'].createElement(
                  _headManagerContext.HeadManagerContext.Consumer,
                  null,
                  function (updateHead) {
                    return /*#__PURE__*/ _react['default'].createElement(
                      Effect,
                      {
                        reduceComponentsToState: reduceComponents,
                        handleStateChange: updateHead,
                        inAmpMode: (0, _amp.isInAmpMode)(ampState),
                      },
                      children
                    );
                  }
                );
              }
            );
          }

          _c = Head;
          Head.rewind = Effect.rewind;
          var _default = Head;
          exports['default'] = _default;

          var _c;

          $RefreshReg$(_c, 'Head');

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/mitt.js':
      /*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          exports.__esModule = true;
          exports['default'] = mitt;
          /*
MIT License
Copyright (c) Jason Miller (https://jasonformat.com/)
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
          // This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
          // It's been edited for the needs of this script
          // See the LICENSE at the top of the file

          function mitt() {
            var all = Object.create(null);
            return {
              on: function on(type, handler) {
                (all[type] || (all[type] = [])).push(handler);
              },
              off: function off(type, handler) {
                if (all[type]) {
                  // tslint:disable-next-line:no-bitwise
                  all[type].splice(all[type].indexOf(handler) >>> 0, 1);
                }
              },
              emit: function emit(type) {
                for (
                  var _len = arguments.length, evts = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
                  _key < _len;
                  _key++
                ) {
                  evts[_key - 1] = arguments[_key];
                }

                // eslint-disable-next-line array-callback-return
                (all[type] || []).slice().map(function (handler) {
                  handler.apply(void 0, evts);
                });
              },
            };
          }

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/router-context.js':
      /*!******************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router-context.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          exports.__esModule = true;
          exports.RouterContext = void 0;

          var _react = _interopRequireDefault(
            __webpack_require__(/*! react */ './node_modules/react/index.js')
          );

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule
              ? obj
              : {
                  default: obj,
                };
          }

          var RouterContext = _react['default'].createContext(null);

          exports.RouterContext = RouterContext;

          if (true) {
            RouterContext.displayName = 'RouterContext';
          }

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/router/router.js':
      /*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          var _regeneratorRuntime = __webpack_require__(
            /*! @babel/runtime/regenerator */ './node_modules/next/node_modules/@babel/runtime/regenerator/index.js'
          );

          var _asyncToGenerator = __webpack_require__(
            /*! @babel/runtime/helpers/asyncToGenerator */ './node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
          );

          var _slicedToArray = __webpack_require__(
            /*! @babel/runtime/helpers/slicedToArray */ './node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js'
          );

          var _classCallCheck = __webpack_require__(
            /*! @babel/runtime/helpers/classCallCheck */ './node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js'
          );

          var _createClass = __webpack_require__(
            /*! @babel/runtime/helpers/createClass */ './node_modules/next/node_modules/@babel/runtime/helpers/createClass.js'
          );

          exports.__esModule = true;
          exports.addBasePath = addBasePath;
          exports.delBasePath = delBasePath;
          exports['default'] = void 0;

          var _url2 = __webpack_require__(/*! url */ './node_modules/native-url/dist/index.js');

          var _mitt = _interopRequireDefault(
            __webpack_require__(/*! ../mitt */ './node_modules/next/dist/next-server/lib/mitt.js')
          );

          var _utils = __webpack_require__(
            /*! ../utils */ './node_modules/next/dist/next-server/lib/utils.js'
          );

          var _isDynamic = __webpack_require__(
            /*! ./utils/is-dynamic */ './node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js'
          );

          var _routeMatcher = __webpack_require__(
            /*! ./utils/route-matcher */ './node_modules/next/dist/next-server/lib/router/utils/route-matcher.js'
          );

          var _routeRegex = __webpack_require__(
            /*! ./utils/route-regex */ './node_modules/next/dist/next-server/lib/router/utils/route-regex.js'
          );

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule
              ? obj
              : {
                  default: obj,
                };
          }
          /* global __NEXT_DATA__ */
          // tslint:disable:no-console

          var basePath = false || '';

          function addBasePath(path) {
            return path.indexOf(basePath) !== 0 ? basePath + path : path;
          }

          function delBasePath(path) {
            return path.indexOf(basePath) === 0 ? path.substr(basePath.length) || '/' : path;
          }

          function toRoute(path) {
            return path.replace(/\/$/, '') || '/';
          }

          var prepareRoute = function prepareRoute(path) {
            return toRoute(!path || path === '/' ? '/index' : path);
          };

          function fetchNextData(pathname, query, isServerRender, cb) {
            var attempts = isServerRender ? 3 : 1;

            function getResponse() {
              return fetch(
                (0, _utils.formatWithValidation)({
                  pathname: addBasePath(
                    // @ts-ignore __NEXT_DATA__
                    '/_next/data/'
                      .concat(__NEXT_DATA__.buildId)
                      .concat(delBasePath(pathname), '.json')
                  ),
                  query: query,
                }),
                {
                  // Cookies are required to be present for Next.js' SSG "Preview Mode".
                  // Cookies may also be required for `getServerSideProps`.
                  //
                  // > `fetch` won’t send cookies, unless you set the credentials init
                  // > option.
                  // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
                  //
                  // > For maximum browser compatibility when it comes to sending &
                  // > receiving cookies, always supply the `credentials: 'same-origin'`
                  // > option instead of relying on the default.
                  // https://github.com/github/fetch#caveats
                  credentials: 'same-origin',
                }
              ).then(function (res) {
                if (!res.ok) {
                  if (--attempts > 0 && res.status >= 500) {
                    return getResponse();
                  }

                  throw new Error('Failed to load static props');
                }

                return res.json();
              });
            }

            return getResponse()
              .then(function (data) {
                return cb ? cb(data) : data;
              })
              ['catch'](function (err) {
                // We should only trigger a server-side transition if this was caused
                // on a client-side transition. Otherwise, we'd get into an infinite
                // loop.
                if (!isServerRender) {
                  err.code = 'PAGE_LOAD_ERROR';
                }

                throw err;
              });
          }

          var Router = /*#__PURE__*/ (function () {
            /**
             * Map of all components loaded in `Router`
             */
            // Static Data Cache
            function Router(_pathname, _query, _as2, _ref) {
              var _this = this;

              var initialProps = _ref.initialProps,
                pageLoader = _ref.pageLoader,
                App = _ref.App,
                wrapApp = _ref.wrapApp,
                Component = _ref.Component,
                err = _ref.err,
                subscription = _ref.subscription,
                isFallback = _ref.isFallback;

              _classCallCheck(this, Router);

              this.route = void 0;
              this.pathname = void 0;
              this.query = void 0;
              this.asPath = void 0;
              this.basePath = void 0;
              this.components = void 0;
              this.sdc = {};
              this.sub = void 0;
              this.clc = void 0;
              this.pageLoader = void 0;
              this._bps = void 0;
              this.events = void 0;
              this._wrapApp = void 0;
              this.isSsr = void 0;
              this.isFallback = void 0;

              this.onPopState = function (e) {
                if (!e.state) {
                  // We get state as undefined for two reasons.
                  //  1. With older safari (< 8) and older chrome (< 34)
                  //  2. When the URL changed with #
                  //
                  // In the both cases, we don't need to proceed and change the route.
                  // (as it's already changed)
                  // But we can simply replace the state with the new changes.
                  // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
                  // So, doing the following for (1) does no harm.
                  var pathname = _this.pathname,
                    query = _this.query;

                  _this.changeState(
                    'replaceState',
                    (0, _utils.formatWithValidation)({
                      pathname: pathname,
                      query: query,
                    }),
                    (0, _utils.getURL)()
                  );

                  return;
                } // Make sure we don't re-render on initial load,
                // can be caused by navigating back from an external site

                if (
                  e.state &&
                  _this.isSsr &&
                  e.state.as === _this.asPath &&
                  (0, _url2.parse)(e.state.url).pathname === _this.pathname
                ) {
                  return;
                } // If the downstream application returns falsy, return.
                // They will then be responsible for handling the event.

                if (_this._bps && !_this._bps(e.state)) {
                  return;
                }

                var _e$state = e.state,
                  url = _e$state.url,
                  as = _e$state.as,
                  options = _e$state.options;

                if (true) {
                  if (typeof url === 'undefined' || typeof as === 'undefined') {
                    console.warn(
                      '`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/vercel/next.js/popstate-state-empty'
                    );
                  }
                }

                _this.replace(url, as, options);
              };

              this._getStaticData = function (asPath) {
                var pathname = prepareRoute((0, _url2.parse)(asPath).pathname);
                return false
                  ? undefined
                  : fetchNextData(pathname, null, _this.isSsr, function (data) {
                      return (_this.sdc[pathname] = data);
                    });
              };

              this._getServerData = function (asPath) {
                var _ref2 = (0, _url2.parse)(asPath, true),
                  pathname = _ref2.pathname,
                  query = _ref2.query;

                pathname = prepareRoute(pathname);
                return fetchNextData(pathname, query, _this.isSsr);
              }; // represents the current component key

              this.route = toRoute(_pathname); // set up the component cache (by route keys)

              this.components = {}; // We should not keep the cache, if there's an error
              // Otherwise, this cause issues when when going back and
              // come again to the errored page.

              if (_pathname !== '/_error') {
                this.components[this.route] = {
                  Component: Component,
                  props: initialProps,
                  err: err,
                  __N_SSG: initialProps && initialProps.__N_SSG,
                  __N_SSP: initialProps && initialProps.__N_SSP,
                };
              }

              this.components['/_app'] = {
                Component: App,
              }; // Backwards compat for Router.router.events
              // TODO: Should be remove the following major version as it was never documented

              this.events = Router.events;
              this.pageLoader = pageLoader;
              this.pathname = _pathname;
              this.query = _query; // if auto prerendered and dynamic route wait to update asPath
              // until after mount to prevent hydration mismatch

              this.asPath = // @ts-ignore this is temporarily global (attached to window)
                (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport
                  ? _pathname
                  : _as2;
              this.basePath = basePath;
              this.sub = subscription;
              this.clc = null;
              this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
              // back from external site

              this.isSsr = true;
              this.isFallback = isFallback;

              if (true) {
                // make sure "as" doesn't start with double slashes or else it can
                // throw an error as it's considered invalid
                if (_as2.substr(0, 2) !== '//') {
                  // in order for `e.state` to work on the `onpopstate` event
                  // we have to register the initial route upon initialization
                  this.changeState(
                    'replaceState',
                    (0, _utils.formatWithValidation)({
                      pathname: _pathname,
                      query: _query,
                    }),
                    _as2
                  );
                }

                window.addEventListener('popstate', this.onPopState);
              }
            } // @deprecated backwards compatibility even though it's a private method.

            _createClass(
              Router,
              [
                {
                  key: 'update',
                  value: function update(route, mod) {
                    var Component = mod['default'] || mod;
                    var data = this.components[route];

                    if (!data) {
                      throw new Error('Cannot update unavailable route: '.concat(route));
                    }

                    var newData = Object.assign({}, data, {
                      Component: Component,
                      __N_SSG: mod.__N_SSG,
                      __N_SSP: mod.__N_SSP,
                    });
                    this.components[route] = newData; // pages/_app.js updated

                    if (route === '/_app') {
                      this.notify(this.components[this.route]);
                      return;
                    }

                    if (route === this.route) {
                      this.notify(newData);
                    }
                  },
                },
                {
                  key: 'reload',
                  value: function reload() {
                    window.location.reload();
                  },
                  /**
                   * Go back in history
                   */
                },
                {
                  key: 'back',
                  value: function back() {
                    window.history.back();
                  },
                  /**
                   * Performs a `pushState` with arguments
                   * @param url of the route
                   * @param as masks `url` for the browser
                   * @param options object you can define `shallow` and other options
                   */
                },
                {
                  key: 'push',
                  value: function push(url) {
                    var as =
                      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
                    var options =
                      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                    return this.change('pushState', url, as, options);
                  },
                  /**
                   * Performs a `replaceState` with arguments
                   * @param url of the route
                   * @param as masks `url` for the browser
                   * @param options object you can define `shallow` and other options
                   */
                },
                {
                  key: 'replace',
                  value: function replace(url) {
                    var as =
                      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
                    var options =
                      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                    return this.change('replaceState', url, as, options);
                  },
                },
                {
                  key: 'change',
                  value: function change(method, _url, _as, options) {
                    var _this2 = this;

                    return new Promise(function (resolve, reject) {
                      if (!options._h) {
                        _this2.isSsr = false;
                      } // marking route changes as a navigation start entry

                      if (_utils.ST) {
                        performance.mark('routeChange');
                      } // If url and as provided as an object representation,
                      // we'll format them into the string version here.

                      var url =
                        typeof _url === 'object' ? (0, _utils.formatWithValidation)(_url) : _url;
                      var as =
                        typeof _as === 'object' ? (0, _utils.formatWithValidation)(_as) : _as;
                      url = addBasePath(url);
                      as = addBasePath(as); // Add the ending slash to the paths. So, we can serve the
                      // "<page>/index.html" directly for the SSR page.

                      if (false) {
                        var rewriteUrlForNextExport;
                      }

                      _this2.abortComponentLoad(as); // If the url change is only related to a hash change
                      // We should not proceed. We should only change the state.
                      // WARNING: `_h` is an internal option for handing Next.js client-side
                      // hydration. Your app should _never_ use this property. It may change at
                      // any time without notice.

                      if (!options._h && _this2.onlyAHashChange(as)) {
                        _this2.asPath = as;
                        Router.events.emit('hashChangeStart', as);

                        _this2.changeState(method, url, as, options);

                        _this2.scrollToHash(as);

                        Router.events.emit('hashChangeComplete', as);
                        return resolve(true);
                      }

                      var _ref3 = (0, _url2.parse)(url, true),
                        pathname = _ref3.pathname,
                        query = _ref3.query,
                        protocol = _ref3.protocol;

                      if (!pathname || protocol) {
                        if (true) {
                          throw new Error(
                            'Invalid href passed to router: '.concat(
                              url,
                              ' https://err.sh/vercel/next.js/invalid-href-passed'
                            )
                          );
                        }

                        return resolve(false);
                      } // If asked to change the current URL we should reload the current page
                      // (not location.reload() but reload getInitialProps and other Next.js stuffs)
                      // We also need to set the method = replaceState always
                      // as this should not go into the history (That's how browsers work)
                      // We should compare the new asPath to the current asPath, not the url

                      if (!_this2.urlIsNew(as)) {
                        method = 'replaceState';
                      }

                      var route = toRoute(pathname);
                      var _options$shallow = options.shallow,
                        shallow = _options$shallow === void 0 ? false : _options$shallow;

                      if ((0, _isDynamic.isDynamicRoute)(route)) {
                        var _ref4 = (0, _url2.parse)(as),
                          asPathname = _ref4.pathname;

                        var routeRegex = (0, _routeRegex.getRouteRegex)(route);
                        var routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);

                        if (!routeMatch) {
                          var missingParams = Object.keys(routeRegex.groups).filter(function (
                            param
                          ) {
                            return !query[param];
                          });

                          if (missingParams.length > 0) {
                            if (true) {
                              console.warn(
                                'Mismatching `as` and `href` failed to manually provide ' +
                                  'the params: '.concat(
                                    missingParams.join(', '),
                                    " in the `href`'s `query`"
                                  )
                              );
                            }

                            return reject(
                              new Error(
                                'The provided `as` value ('
                                  .concat(asPathname, ') is incompatible with the `href` value (')
                                  .concat(route, '). ') +
                                  'Read more: https://err.sh/vercel/next.js/incompatible-href-as'
                              )
                            );
                          }
                        } else {
                          // Merge params into `query`, overwriting any specified in search
                          Object.assign(query, routeMatch);
                        }
                      }

                      Router.events.emit('routeChangeStart', as); // If shallow is true and the route exists in the router cache we reuse the previous result

                      _this2
                        .getRouteInfo(route, pathname, query, as, shallow)
                        .then(function (routeInfo) {
                          var error = routeInfo.error;

                          if (error && error.cancelled) {
                            return resolve(false);
                          }

                          Router.events.emit('beforeHistoryChange', as);

                          _this2.changeState(method, url, as, options);

                          if (true) {
                            var appComp = _this2.components['/_app'].Component;
                            window.next.isPrerendered =
                              appComp.getInitialProps === appComp.origGetInitialProps &&
                              !routeInfo.Component.getInitialProps;
                          }

                          _this2.set(route, pathname, query, as, routeInfo).then(function () {
                            if (error) {
                              Router.events.emit('routeChangeError', error, as);
                              throw error;
                            }

                            Router.events.emit('routeChangeComplete', as);
                            return resolve(true);
                          });
                        }, reject);
                    });
                  },
                },
                {
                  key: 'changeState',
                  value: function changeState(method, url, as) {
                    var options =
                      arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

                    if (true) {
                      if (typeof window.history === 'undefined') {
                        console.error('Warning: window.history is not available.');
                        return;
                      }

                      if (typeof window.history[method] === 'undefined') {
                        console.error(
                          'Warning: window.history.'.concat(method, ' is not available')
                        );
                        return;
                      }
                    }

                    if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
                      window.history[method](
                        {
                          url: url,
                          as: as,
                          options: options,
                        }, // Most browsers currently ignores this parameter, although they may use it in the future.
                        // Passing the empty string here should be safe against future changes to the method.
                        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
                        '',
                        as
                      );
                    }
                  },
                },
                {
                  key: 'getRouteInfo',
                  value: function getRouteInfo(route, pathname, query, as) {
                    var _this3 = this;

                    var shallow =
                      arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
                    var cachedRouteInfo = this.components[route]; // If there is a shallow route transition possible
                    // If the route is already rendered on the screen.

                    if (shallow && cachedRouteInfo && this.route === route) {
                      return Promise.resolve(cachedRouteInfo);
                    }

                    var handleError = function handleError(err, loadErrorFail) {
                      return new Promise(function (resolve) {
                        if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {
                          // If we can't load the page it could be one of following reasons
                          //  1. Page doesn't exists
                          //  2. Page does exist in a different zone
                          //  3. Internal error while loading the page
                          // So, doing a hard reload is the proper way to deal with this.
                          window.location.href = as; // Changing the URL doesn't block executing the current code path.
                          // So, we need to mark it as a cancelled error and stop the routing logic.

                          err.cancelled = true; // @ts-ignore TODO: fix the control flow here

                          return resolve({
                            error: err,
                          });
                        }

                        if (err.cancelled) {
                          // @ts-ignore TODO: fix the control flow here
                          return resolve({
                            error: err,
                          });
                        }

                        resolve(
                          _this3
                            .fetchComponent('/_error')
                            .then(function (res) {
                              var Component = res.page;
                              var routeInfo = {
                                Component: Component,
                                err: err,
                              };
                              return new Promise(function (resolve) {
                                _this3
                                  .getInitialProps(Component, {
                                    err: err,
                                    pathname: pathname,
                                    query: query,
                                  })
                                  .then(
                                    function (props) {
                                      routeInfo.props = props;
                                      routeInfo.error = err;
                                      resolve(routeInfo);
                                    },
                                    function (gipErr) {
                                      console.error(
                                        'Error in error page `getInitialProps`: ',
                                        gipErr
                                      );
                                      routeInfo.error = err;
                                      routeInfo.props = {};
                                      resolve(routeInfo);
                                    }
                                  );
                              });
                            })
                            ['catch'](function (err) {
                              return handleError(err, true);
                            })
                        );
                      });
                    };

                    return new Promise(function (resolve, reject) {
                      if (cachedRouteInfo) {
                        return resolve(cachedRouteInfo);
                      }

                      _this3.fetchComponent(route).then(function (res) {
                        return resolve({
                          Component: res.page,
                          __N_SSG: res.mod.__N_SSG,
                          __N_SSP: res.mod.__N_SSP,
                        });
                      }, reject);
                    })
                      .then(function (routeInfo) {
                        var Component = routeInfo.Component,
                          __N_SSG = routeInfo.__N_SSG,
                          __N_SSP = routeInfo.__N_SSP;

                        if (true) {
                          var _require = __webpack_require__(
                              /*! react-is */ './node_modules/react-is/index.js'
                            ),
                            isValidElementType = _require.isValidElementType;

                          if (!isValidElementType(Component)) {
                            throw new Error(
                              'The default export is not a React Component in page: "'.concat(
                                pathname,
                                '"'
                              )
                            );
                          }
                        }

                        return _this3
                          ._getData(function () {
                            return __N_SSG
                              ? _this3._getStaticData(as)
                              : __N_SSP
                              ? _this3._getServerData(as)
                              : _this3.getInitialProps(
                                  Component, // we provide AppTree later so this needs to be `any`
                                  {
                                    pathname: pathname,
                                    query: query,
                                    asPath: as,
                                  }
                                );
                          })
                          .then(function (props) {
                            routeInfo.props = props;
                            _this3.components[route] = routeInfo;
                            return routeInfo;
                          });
                      })
                      ['catch'](handleError);
                  },
                },
                {
                  key: 'set',
                  value: function set(route, pathname, query, as, data) {
                    this.isFallback = false;
                    this.route = route;
                    this.pathname = pathname;
                    this.query = query;
                    this.asPath = as;
                    return this.notify(data);
                  },
                  /**
                   * Callback to execute before replacing router state
                   * @param cb callback to be executed
                   */
                },
                {
                  key: 'beforePopState',
                  value: function beforePopState(cb) {
                    this._bps = cb;
                  },
                },
                {
                  key: 'onlyAHashChange',
                  value: function onlyAHashChange(as) {
                    if (!this.asPath) return false;

                    var _this$asPath$split = this.asPath.split('#'),
                      _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),
                      oldUrlNoHash = _this$asPath$split2[0],
                      oldHash = _this$asPath$split2[1];

                    var _as$split = as.split('#'),
                      _as$split2 = _slicedToArray(_as$split, 2),
                      newUrlNoHash = _as$split2[0],
                      newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same

                    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
                      return true;
                    } // If the urls are change, there's more than a hash change

                    if (oldUrlNoHash !== newUrlNoHash) {
                      return false;
                    } // If the hash has changed, then it's a hash only change.
                    // This check is necessary to handle both the enter and
                    // leave hash === '' cases. The identity case falls through
                    // and is treated as a next reload.

                    return oldHash !== newHash;
                  },
                },
                {
                  key: 'scrollToHash',
                  value: function scrollToHash(as) {
                    var _as$split3 = as.split('#'),
                      _as$split4 = _slicedToArray(_as$split3, 2),
                      hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value

                    if (hash === '') {
                      window.scrollTo(0, 0);
                      return;
                    } // First we check if the element by id is found

                    var idEl = document.getElementById(hash);

                    if (idEl) {
                      idEl.scrollIntoView();
                      return;
                    } // If there's no element with the id, we check the `name` property
                    // To mirror browsers

                    var nameEl = document.getElementsByName(hash)[0];

                    if (nameEl) {
                      nameEl.scrollIntoView();
                    }
                  },
                },
                {
                  key: 'urlIsNew',
                  value: function urlIsNew(asPath) {
                    return this.asPath !== asPath;
                  },
                  /**
                   * Prefetch page code, you may wait for the data during page rendering.
                   * This feature only works in production!
                   * @param url the href of prefetched page
                   * @param asPath the as path of the prefetched page
                   */
                },
                {
                  key: 'prefetch',
                  value: function prefetch(url) {
                    var _this4 = this;

                    var asPath =
                      arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;
                    var options =
                      arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                    return new Promise(function (resolve, reject) {
                      var _ref5 = (0, _url2.parse)(url),
                        pathname = _ref5.pathname,
                        protocol = _ref5.protocol;

                      if (!pathname || protocol) {
                        if (true) {
                          throw new Error(
                            'Invalid href passed to router: '.concat(
                              url,
                              ' https://err.sh/vercel/next.js/invalid-href-passed'
                            )
                          );
                        }

                        return;
                      } // Prefetch is not supported in development mode because it would trigger on-demand-entries

                      if (true) {
                        return;
                      }

                      var route = delBasePath(toRoute(pathname));
                      Promise.all([
                        _this4.pageLoader.prefetchData(url, delBasePath(asPath)),
                        _this4.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route),
                      ]).then(function () {
                        return resolve();
                      }, reject);
                    });
                  },
                },
                {
                  key: 'fetchComponent',
                  value: (function () {
                    var _fetchComponent = _asyncToGenerator(
                      /*#__PURE__*/ _regeneratorRuntime.mark(function _callee(route) {
                        var cancelled, cancel, componentResult, error;
                        return _regeneratorRuntime.wrap(
                          function _callee$(_context) {
                            while (1) {
                              switch ((_context.prev = _context.next)) {
                                case 0:
                                  cancelled = false;

                                  cancel = this.clc = function () {
                                    cancelled = true;
                                  };

                                  route = delBasePath(route);
                                  _context.next = 5;
                                  return this.pageLoader.loadPage(route);

                                case 5:
                                  componentResult = _context.sent;

                                  if (!cancelled) {
                                    _context.next = 10;
                                    break;
                                  }

                                  error = new Error(
                                    'Abort fetching component for route: "'.concat(route, '"')
                                  );
                                  error.cancelled = true;
                                  throw error;

                                case 10:
                                  if (cancel === this.clc) {
                                    this.clc = null;
                                  }

                                  return _context.abrupt('return', componentResult);

                                case 12:
                                case 'end':
                                  return _context.stop();
                              }
                            }
                          },
                          _callee,
                          this
                        );
                      })
                    );

                    function fetchComponent(_x) {
                      return _fetchComponent.apply(this, arguments);
                    }

                    return fetchComponent;
                  })(),
                },
                {
                  key: '_getData',
                  value: function _getData(fn) {
                    var _this5 = this;

                    var cancelled = false;

                    var cancel = function cancel() {
                      cancelled = true;
                    };

                    this.clc = cancel;
                    return fn().then(function (data) {
                      if (cancel === _this5.clc) {
                        _this5.clc = null;
                      }

                      if (cancelled) {
                        var err = new Error('Loading initial props cancelled');
                        err.cancelled = true;
                        throw err;
                      }

                      return data;
                    });
                  },
                },
                {
                  key: 'getInitialProps',
                  value: function getInitialProps(Component, ctx) {
                    var App = this.components['/_app'].Component;

                    var AppTree = this._wrapApp(App);

                    ctx.AppTree = AppTree;
                    return (0, _utils.loadGetInitialProps)(App, {
                      AppTree: AppTree,
                      Component: Component,
                      router: this,
                      ctx: ctx,
                    });
                  },
                },
                {
                  key: 'abortComponentLoad',
                  value: function abortComponentLoad(as) {
                    if (this.clc) {
                      var e = new Error('Route Cancelled');
                      e.cancelled = true;
                      Router.events.emit('routeChangeError', e, as);
                      this.clc();
                      this.clc = null;
                    }
                  },
                },
                {
                  key: 'notify',
                  value: function notify(data) {
                    return this.sub(data, this.components['/_app'].Component);
                  },
                },
              ],
              [
                {
                  key: '_rewriteUrlForNextExport',
                  value: function _rewriteUrlForNextExport(url) {
                    if (false) {
                      var rewriteUrlForNextExport;
                    } else {
                      return url;
                    }
                  },
                },
              ]
            );

            return Router;
          })();

          exports['default'] = Router;
          Router.events = (0, _mitt['default'])();

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js':
      /*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          exports.__esModule = true;
          exports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string

          var TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;

          function isDynamicRoute(route) {
            return TEST_ROUTE.test(route);
          }

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/router/utils/route-matcher.js':
      /*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          exports.__esModule = true;
          exports.getRouteMatcher = getRouteMatcher;

          function getRouteMatcher(routeRegex) {
            var re = routeRegex.re,
              groups = routeRegex.groups;
            return function (pathname) {
              var routeMatch = re.exec(pathname);

              if (!routeMatch) {
                return false;
              }

              var decode = function decode(param) {
                try {
                  return decodeURIComponent(param);
                } catch (_) {
                  var err = new Error('failed to decode param');
                  err.code = 'DECODE_FAILED';
                  throw err;
                }
              };

              var params = {};
              Object.keys(groups).forEach(function (slugName) {
                var g = groups[slugName];
                var m = routeMatch[g.pos];

                if (m !== undefined) {
                  params[slugName] = ~m.indexOf('/')
                    ? m.split('/').map(function (entry) {
                        return decode(entry);
                      })
                    : g.repeat
                    ? [decode(m)]
                    : decode(m);
                }
              });
              return params;
            };
          }

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/router/utils/route-regex.js':
      /*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          exports.__esModule = true;
          exports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module
          // to reduce bytes

          function escapeRegex(str) {
            return str.replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
          }

          function getRouteRegex(normalizedRoute) {
            // Escape all characters that could be considered RegEx
            var escapedRoute = escapeRegex(normalizedRoute.replace(/\/$/, '') || '/');
            var groups = {};
            var groupIndex = 1;
            var parameterizedRoute = escapedRoute.replace(/\/\\\[([^/]+?)\\\](?=\/|$)/g, function (
              _,
              $1
            ) {
              var isOptional = /^\\\[.*\\\]$/.test($1);

              if (isOptional) {
                $1 = $1.slice(2, -2);
              }

              var isCatchAll = /^(\\\.){3}/.test($1);

              if (isCatchAll) {
                $1 = $1.slice(6);
              }

              groups[
                $1 // Un-escape key
                  .replace(/\\([|\\{}()[\]^$+*?.-])/g, '$1') // eslint-disable-next-line no-sequences
              ] = {
                pos: groupIndex++,
                repeat: isCatchAll,
              };
              return isCatchAll ? (isOptional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)';
            });
            var namedParameterizedRoute; // dead code eliminate for browser since it's only needed
            // while generating routes-manifest

            if (false) {
            }

            return {
              re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),
              groups: groups,
              namedRegex: namedParameterizedRoute
                ? '^'.concat(namedParameterizedRoute, '(?:/)?$')
                : undefined,
            };
          }

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/side-effect.js':
      /*!***************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/side-effect.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          var _classCallCheck = __webpack_require__(
            /*! @babel/runtime/helpers/classCallCheck */ './node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js'
          );

          var _assertThisInitialized = __webpack_require__(
            /*! @babel/runtime/helpers/assertThisInitialized */ './node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js'
          );

          var _createClass = __webpack_require__(
            /*! @babel/runtime/helpers/createClass */ './node_modules/next/node_modules/@babel/runtime/helpers/createClass.js'
          );

          var _inherits = __webpack_require__(
            /*! @babel/runtime/helpers/inherits */ './node_modules/next/node_modules/@babel/runtime/helpers/inherits.js'
          );

          var _possibleConstructorReturn = __webpack_require__(
            /*! @babel/runtime/helpers/possibleConstructorReturn */ './node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js'
          );

          var _getPrototypeOf = __webpack_require__(
            /*! @babel/runtime/helpers/getPrototypeOf */ './node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf.js'
          );

          var _toConsumableArray = __webpack_require__(
            /*! @babel/runtime/helpers/toConsumableArray */ './node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js'
          );

          function _createSuper(Derived) {
            var hasNativeReflectConstruct = _isNativeReflectConstruct();
            return function _createSuperInternal() {
              var Super = _getPrototypeOf(Derived),
                result;
              if (hasNativeReflectConstruct) {
                var NewTarget = _getPrototypeOf(this).constructor;
                result = Reflect.construct(Super, arguments, NewTarget);
              } else {
                result = Super.apply(this, arguments);
              }
              return _possibleConstructorReturn(this, result);
            };
          }

          function _isNativeReflectConstruct() {
            if (typeof Reflect === 'undefined' || !Reflect.construct) return false;
            if (Reflect.construct.sham) return false;
            if (typeof Proxy === 'function') return true;
            try {
              Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
              return true;
            } catch (e) {
              return false;
            }
          }

          exports.__esModule = true;
          exports['default'] = void 0;

          var _react = __webpack_require__(/*! react */ './node_modules/react/index.js');

          var isServer = false;

          var _default = function _default() {
            var mountedInstances = new Set();
            var state;

            function emitChange(component) {
              state = component.props.reduceComponentsToState(
                _toConsumableArray(mountedInstances),
                component.props
              );

              if (component.props.handleStateChange) {
                component.props.handleStateChange(state);
              }
            }

            return /*#__PURE__*/ (function (_react$Component) {
              _inherits(_class, _react$Component);

              var _super = _createSuper(_class);

              _createClass(_class, null, [
                {
                  key: 'rewind',
                  // Used when server rendering
                  value: function rewind() {
                    var recordedState = state;
                    state = undefined;
                    mountedInstances.clear();
                    return recordedState;
                  },
                },
              ]);

              function _class(props) {
                var _this;

                _classCallCheck(this, _class);

                _this = _super.call(this, props);

                if (isServer) {
                  mountedInstances.add(_assertThisInitialized(_this));
                  emitChange(_assertThisInitialized(_this));
                }

                return _this;
              }

              _createClass(_class, [
                {
                  key: 'componentDidMount',
                  value: function componentDidMount() {
                    mountedInstances.add(this);
                    emitChange(this);
                  },
                },
                {
                  key: 'componentDidUpdate',
                  value: function componentDidUpdate() {
                    emitChange(this);
                  },
                },
                {
                  key: 'componentWillUnmount',
                  value: function componentWillUnmount() {
                    mountedInstances['delete'](this);
                    emitChange(this);
                  },
                },
                {
                  key: 'render',
                  value: function render() {
                    return null;
                  },
                },
              ]);

              return _class;
            })(_react.Component);
          };

          exports['default'] = _default;

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/dist/next-server/lib/utils.js':
      /*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (module) {
          var _regeneratorRuntime = __webpack_require__(
            /*! @babel/runtime/regenerator */ './node_modules/next/node_modules/@babel/runtime/regenerator/index.js'
          );

          var _asyncToGenerator = __webpack_require__(
            /*! @babel/runtime/helpers/asyncToGenerator */ './node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js'
          );

          exports.__esModule = true;
          exports.execOnce = execOnce;
          exports.getLocationOrigin = getLocationOrigin;
          exports.getURL = getURL;
          exports.getDisplayName = getDisplayName;
          exports.isResSent = isResSent;
          exports.loadGetInitialProps = loadGetInitialProps;
          exports.formatWithValidation = formatWithValidation;
          exports.ST = exports.SP = exports.urlObjectKeys = void 0;

          var _url = __webpack_require__(/*! url */ './node_modules/native-url/dist/index.js');
          /**
           * Utils
           */

          function execOnce(fn) {
            var used = false;
            var result;
            return function () {
              if (!used) {
                used = true;
                result = fn.apply(void 0, arguments);
              }

              return result;
            };
          }

          function getLocationOrigin() {
            var _window$location = window.location,
              protocol = _window$location.protocol,
              hostname = _window$location.hostname,
              port = _window$location.port;
            return ''
              .concat(protocol, '//')
              .concat(hostname)
              .concat(port ? ':' + port : '');
          }

          function getURL() {
            var href = window.location.href;
            var origin = getLocationOrigin();
            return href.substring(origin.length);
          }

          function getDisplayName(Component) {
            return typeof Component === 'string'
              ? Component
              : Component.displayName || Component.name || 'Unknown';
          }

          function isResSent(res) {
            return res.finished || res.headersSent;
          }

          function loadGetInitialProps(_x, _x2) {
            return _loadGetInitialProps.apply(this, arguments);
          }

          function _loadGetInitialProps() {
            _loadGetInitialProps = _asyncToGenerator(
              /*#__PURE__*/ _regeneratorRuntime.mark(function _callee(App, ctx) {
                var _App$prototype, message, res, props, _message;

                return _regeneratorRuntime.wrap(function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        if (false) {
                        }

                        if (
                          !((_App$prototype = App.prototype) === null || _App$prototype === void 0
                            ? void 0
                            : _App$prototype.getInitialProps)
                        ) {
                          _context.next = 4;
                          break;
                        }

                        message = '"'.concat(
                          getDisplayName(App),
                          '.getInitialProps()" is defined as an instance method - visit https://err.sh/vercel/next.js/get-initial-props-as-an-instance-method for more information.'
                        );
                        throw new Error(message);

                      case 4:
                        // when called from _app `ctx` is nested in `ctx`
                        res = ctx.res || (ctx.ctx && ctx.ctx.res);

                        if (App.getInitialProps) {
                          _context.next = 12;
                          break;
                        }

                        if (!(ctx.ctx && ctx.Component)) {
                          _context.next = 11;
                          break;
                        }

                        _context.next = 9;
                        return loadGetInitialProps(ctx.Component, ctx.ctx);

                      case 9:
                        _context.t0 = _context.sent;
                        return _context.abrupt('return', {
                          pageProps: _context.t0,
                        });

                      case 11:
                        return _context.abrupt('return', {});

                      case 12:
                        _context.next = 14;
                        return App.getInitialProps(ctx);

                      case 14:
                        props = _context.sent;

                        if (!(res && isResSent(res))) {
                          _context.next = 17;
                          break;
                        }

                        return _context.abrupt('return', props);

                      case 17:
                        if (props) {
                          _context.next = 20;
                          break;
                        }

                        _message = '"'
                          .concat(
                            getDisplayName(App),
                            '.getInitialProps()" should resolve to an object. But found "'
                          )
                          .concat(props, '" instead.');
                        throw new Error(_message);

                      case 20:
                        if (true) {
                          if (Object.keys(props).length === 0 && !ctx.ctx) {
                            console.warn(
                              ''.concat(
                                getDisplayName(App),
                                ' returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://err.sh/vercel/next.js/empty-object-getInitialProps'
                              )
                            );
                          }
                        }

                        return _context.abrupt('return', props);

                      case 22:
                      case 'end':
                        return _context.stop();
                    }
                  }
                }, _callee);
              })
            );
            return _loadGetInitialProps.apply(this, arguments);
          }

          var urlObjectKeys = [
            'auth',
            'hash',
            'host',
            'hostname',
            'href',
            'path',
            'pathname',
            'port',
            'protocol',
            'query',
            'search',
            'slashes',
          ];
          exports.urlObjectKeys = urlObjectKeys;

          function formatWithValidation(url, options) {
            if (true) {
              if (url !== null && typeof url === 'object') {
                Object.keys(url).forEach(function (key) {
                  if (urlObjectKeys.indexOf(key) === -1) {
                    console.warn('Unknown key passed via urlObject into url.format: '.concat(key));
                  }
                });
              }
            }

            return (0, _url.format)(url, options);
          }

          var SP = typeof performance !== 'undefined';
          exports.SP = SP;
          var ST =
            SP &&
            typeof performance.mark === 'function' &&
            typeof performance.measure === 'function';
          exports.ST = ST;

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../../webpack/buildin/module.js */ './node_modules/webpack/buildin/module.js'
          )(module)
        ));

        /***/
      },

    /***/ './node_modules/next/link.js':
      /*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./dist/client/link */ './node_modules/next/dist/client/link.js'
        );

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js':
      /*!***********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \***********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _arrayLikeToArray(arr, len) {
          if (len == null || len > arr.length) len = arr.length;

          for (var i = 0, arr2 = new Array(len); i < len; i++) {
            arr2[i] = arr[i];
          }

          return arr2;
        }

        module.exports = _arrayLikeToArray;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js':
      /*!*********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \*********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _arrayWithHoles(arr) {
          if (Array.isArray(arr)) return arr;
        }

        module.exports = _arrayWithHoles;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js':
      /*!************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var arrayLikeToArray = __webpack_require__(
          /*! ./arrayLikeToArray */ './node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js'
        );

        function _arrayWithoutHoles(arr) {
          if (Array.isArray(arr)) return arrayLikeToArray(arr);
        }

        module.exports = _arrayWithoutHoles;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js':
      /*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \****************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }

          return self;
        }

        module.exports = _assertThisInitialized;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js':
      /*!***********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \***********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function () {
            var self = this,
              args = arguments;
            return new Promise(function (resolve, reject) {
              var gen = fn.apply(self, args);

              function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'next', value);
              }

              function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, 'throw', err);
              }

              _next(undefined);
            });
          };
        }

        module.exports = _asyncToGenerator;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js':
      /*!*********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \*********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        module.exports = _classCallCheck;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/construct.js':
      /*!****************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/construct.js ***!
  \****************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var setPrototypeOf = __webpack_require__(
          /*! ./setPrototypeOf */ './node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js'
        );

        var isNativeReflectConstruct = __webpack_require__(
          /*! ./isNativeReflectConstruct */ './node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js'
        );

        function _construct(Parent, args, Class) {
          if (isNativeReflectConstruct()) {
            module.exports = _construct = Reflect.construct;
          } else {
            module.exports = _construct = function _construct(Parent, args, Class) {
              var a = [null];
              a.push.apply(a, args);
              var Constructor = Function.bind.apply(Parent, a);
              var instance = new Constructor();
              if (Class) setPrototypeOf(instance, Class.prototype);
              return instance;
            };
          }

          return _construct.apply(null, arguments);
        }

        module.exports = _construct;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/createClass.js':
      /*!******************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js ***!
  \******************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        module.exports = _createClass;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf.js':
      /*!*********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \*********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _getPrototypeOf(o) {
          module.exports = _getPrototypeOf = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function _getPrototypeOf(o) {
                return o.__proto__ || Object.getPrototypeOf(o);
              };
          return _getPrototypeOf(o);
        }

        module.exports = _getPrototypeOf;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/inherits.js':
      /*!***************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/inherits.js ***!
  \***************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var setPrototypeOf = __webpack_require__(
          /*! ./setPrototypeOf */ './node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js'
        );

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function');
          }

          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
              value: subClass,
              writable: true,
              configurable: true,
            },
          });
          if (superClass) setPrototypeOf(subClass, superClass);
        }

        module.exports = _inherits;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js':
      /*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \****************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _interopRequireDefault(obj) {
          return obj && obj.__esModule
            ? obj
            : {
                default: obj,
              };
        }

        module.exports = _interopRequireDefault;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js':
      /*!*****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \*****************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var _typeof = __webpack_require__(
          /*! ../helpers/typeof */ './node_modules/next/node_modules/@babel/runtime/helpers/typeof.js'
        );

        function _getRequireWildcardCache() {
          if (typeof WeakMap !== 'function') return null;
          var cache = new WeakMap();

          _getRequireWildcardCache = function _getRequireWildcardCache() {
            return cache;
          };

          return cache;
        }

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          }

          if (obj === null || (_typeof(obj) !== 'object' && typeof obj !== 'function')) {
            return {
              default: obj,
            };
          }

          var cache = _getRequireWildcardCache();

          if (cache && cache.has(obj)) {
            return cache.get(obj);
          }

          var newObj = {};
          var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

              if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }

          newObj['default'] = obj;

          if (cache) {
            cache.set(obj, newObj);
          }

          return newObj;
        }

        module.exports = _interopRequireWildcard;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js':
      /*!*******************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*******************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct) return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;

          try {
            Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
            return true;
          } catch (e) {
            return false;
          }
        }

        module.exports = _isNativeReflectConstruct;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js':
      /*!**********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \**********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _iterableToArray(iter) {
          if (typeof Symbol !== 'undefined' && Symbol.iterator in Object(iter))
            return Array.from(iter);
        }

        module.exports = _iterableToArray;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js':
      /*!***************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \***************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _iterableToArrayLimit(arr, i) {
          if (typeof Symbol === 'undefined' || !(Symbol.iterator in Object(arr))) return;
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;

          try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);

              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i['return'] != null) _i['return']();
            } finally {
              if (_d) throw _e;
            }
          }

          return _arr;
        }

        module.exports = _iterableToArrayLimit;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js':
      /*!**********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \**********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _nonIterableRest() {
          throw new TypeError(
            'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
          );
        }

        module.exports = _nonIterableRest;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js':
      /*!************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _nonIterableSpread() {
          throw new TypeError(
            'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
          );
        }

        module.exports = _nonIterableSpread;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js':
      /*!********************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \********************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var _typeof = __webpack_require__(
          /*! ../helpers/typeof */ './node_modules/next/node_modules/@babel/runtime/helpers/typeof.js'
        );

        var assertThisInitialized = __webpack_require__(
          /*! ./assertThisInitialized */ './node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js'
        );

        function _possibleConstructorReturn(self, call) {
          if (call && (_typeof(call) === 'object' || typeof call === 'function')) {
            return call;
          }

          return assertThisInitialized(self);
        }

        module.exports = _possibleConstructorReturn;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js':
      /*!*********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \*********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _setPrototypeOf(o, p) {
          module.exports = _setPrototypeOf =
            Object.setPrototypeOf ||
            function _setPrototypeOf(o, p) {
              o.__proto__ = p;
              return o;
            };

          return _setPrototypeOf(o, p);
        }

        module.exports = _setPrototypeOf;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js':
      /*!********************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \********************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var arrayWithHoles = __webpack_require__(
          /*! ./arrayWithHoles */ './node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js'
        );

        var iterableToArrayLimit = __webpack_require__(
          /*! ./iterableToArrayLimit */ './node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js'
        );

        var unsupportedIterableToArray = __webpack_require__(
          /*! ./unsupportedIterableToArray */ './node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js'
        );

        var nonIterableRest = __webpack_require__(
          /*! ./nonIterableRest */ './node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js'
        );

        function _slicedToArray(arr, i) {
          return (
            arrayWithHoles(arr) ||
            iterableToArrayLimit(arr, i) ||
            unsupportedIterableToArray(arr, i) ||
            nonIterableRest()
          );
        }

        module.exports = _slicedToArray;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js':
      /*!************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var arrayWithoutHoles = __webpack_require__(
          /*! ./arrayWithoutHoles */ './node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js'
        );

        var iterableToArray = __webpack_require__(
          /*! ./iterableToArray */ './node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js'
        );

        var unsupportedIterableToArray = __webpack_require__(
          /*! ./unsupportedIterableToArray */ './node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js'
        );

        var nonIterableSpread = __webpack_require__(
          /*! ./nonIterableSpread */ './node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js'
        );

        function _toConsumableArray(arr) {
          return (
            arrayWithoutHoles(arr) ||
            iterableToArray(arr) ||
            unsupportedIterableToArray(arr) ||
            nonIterableSpread()
          );
        }

        module.exports = _toConsumableArray;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/typeof.js':
      /*!*************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js ***!
  \*************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        function _typeof(obj) {
          '@babel/helpers - typeof';

          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            module.exports = _typeof = function _typeof(obj) {
              return typeof obj;
            };
          } else {
            module.exports = _typeof = function _typeof(obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };
          }

          return _typeof(obj);
        }

        module.exports = _typeof;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js':
      /*!*********************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \*********************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        var arrayLikeToArray = __webpack_require__(
          /*! ./arrayLikeToArray */ './node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js'
        );

        function _unsupportedIterableToArray(o, minLen) {
          if (!o) return;
          if (typeof o === 'string') return arrayLikeToArray(o, minLen);
          var n = Object.prototype.toString.call(o).slice(8, -1);
          if (n === 'Object' && o.constructor) n = o.constructor.name;
          if (n === 'Map' || n === 'Set') return Array.from(o);
          if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
            return arrayLikeToArray(o, minLen);
        }

        module.exports = _unsupportedIterableToArray;

        /***/
      },

    /***/ './node_modules/next/node_modules/@babel/runtime/regenerator/index.js':
      /*!****************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/regenerator/index.js ***!
  \****************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! regenerator-runtime */ './node_modules/regenerator-runtime/runtime.js'
        );

        /***/
      },

    /***/ './node_modules/polished/dist/polished.esm.js':
      /*!****************************************************!*\
  !*** ./node_modules/polished/dist/polished.esm.js ***!
  \****************************************************/
      /*! exports provided: adjustHue, animation, backgroundImages, backgrounds, between, border, borderColor, borderRadius, borderStyle, borderWidth, buttons, clearFix, complement, cover, cssVar, darken, desaturate, directionalProperty, ellipsis, em, fluidRange, fontFace, getContrast, getLuminance, getValueAndUnit, grayscale, hiDPI, hideText, hideVisually, hsl, hslToColorString, hsla, invert, lighten, linearGradient, margin, math, meetsContrastGuidelines, mix, modularScale, normalize, opacify, padding, parseToHsl, parseToRgb, position, radialGradient, readableColor, rem, retinaImage, rgb, rgbToColorString, rgba, saturate, setHue, setLightness, setSaturation, shade, size, stripUnit, textInputs, timingFunctions, tint, toColorString, transitions, transparentize, triangle, wordWrap */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'adjustHue',
          function () {
            return curriedAdjustHue;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'animation',
          function () {
            return animation;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'backgroundImages',
          function () {
            return backgroundImages;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'backgrounds',
          function () {
            return backgrounds;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'between',
          function () {
            return between;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'border',
          function () {
            return border;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'borderColor',
          function () {
            return borderColor;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'borderRadius',
          function () {
            return borderRadius;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'borderStyle',
          function () {
            return borderStyle;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'borderWidth',
          function () {
            return borderWidth;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'buttons',
          function () {
            return buttons;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'clearFix',
          function () {
            return clearFix;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'complement',
          function () {
            return complement;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'cover',
          function () {
            return cover;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'cssVar',
          function () {
            return cssVar;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'darken',
          function () {
            return curriedDarken;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'desaturate',
          function () {
            return curriedDesaturate;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'directionalProperty',
          function () {
            return directionalProperty;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'ellipsis',
          function () {
            return ellipsis;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'em',
          function () {
            return em;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'fluidRange',
          function () {
            return fluidRange;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'fontFace',
          function () {
            return fontFace;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'getContrast',
          function () {
            return getContrast;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'getLuminance',
          function () {
            return getLuminance;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'getValueAndUnit',
          function () {
            return getValueAndUnit;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'grayscale',
          function () {
            return grayscale;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'hiDPI',
          function () {
            return hiDPI;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'hideText',
          function () {
            return hideText;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'hideVisually',
          function () {
            return hideVisually;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'hsl',
          function () {
            return hsl;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'hslToColorString',
          function () {
            return hslToColorString;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'hsla',
          function () {
            return hsla;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'invert',
          function () {
            return invert;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'lighten',
          function () {
            return curriedLighten;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'linearGradient',
          function () {
            return linearGradient;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'margin',
          function () {
            return margin;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'math',
          function () {
            return math;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'meetsContrastGuidelines',
          function () {
            return meetsContrastGuidelines;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'mix',
          function () {
            return curriedMix;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'modularScale',
          function () {
            return modularScale;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'normalize',
          function () {
            return normalize;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'opacify',
          function () {
            return curriedOpacify;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'padding',
          function () {
            return padding;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'parseToHsl',
          function () {
            return parseToHsl;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'parseToRgb',
          function () {
            return parseToRgb;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'position',
          function () {
            return position;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'radialGradient',
          function () {
            return radialGradient;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'readableColor',
          function () {
            return readableColor;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'rem',
          function () {
            return rem;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'retinaImage',
          function () {
            return retinaImage;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'rgb',
          function () {
            return rgb;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'rgbToColorString',
          function () {
            return rgbToColorString;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'rgba',
          function () {
            return rgba;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'saturate',
          function () {
            return curriedSaturate;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'setHue',
          function () {
            return curriedSetHue;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'setLightness',
          function () {
            return curriedSetLightness;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'setSaturation',
          function () {
            return curriedSetSaturation;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'shade',
          function () {
            return curriedShade;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'size',
          function () {
            return size;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'stripUnit',
          function () {
            return stripUnit;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'textInputs',
          function () {
            return textInputs;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'timingFunctions',
          function () {
            return timingFunctions;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'tint',
          function () {
            return curriedTint;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'toColorString',
          function () {
            return toColorString;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'transitions',
          function () {
            return transitions;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'transparentize',
          function () {
            return curriedTransparentize;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'triangle',
          function () {
            return triangle;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'wordWrap',
          function () {
            return wordWrap;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/esm/extends */ './node_modules/@babel/runtime/helpers/esm/extends.js'
        );
        /* harmony import */ var _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/esm/assertThisInitialized */ './node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js'
        );
        /* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime/helpers/esm/inheritsLoose */ './node_modules/@babel/runtime/helpers/esm/inheritsLoose.js'
        );
        /* harmony import */ var _babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime/helpers/esm/wrapNativeSuper */ './node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js'
        );
        /* harmony import */ var _babel_runtime_helpers_esm_taggedTemplateLiteralLoose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime/helpers/esm/taggedTemplateLiteralLoose */ './node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js'
        );

        function last() {
          var _ref;

          return (
            (_ref = arguments.length - 1),
            _ref < 0 || arguments.length <= _ref ? undefined : arguments[_ref]
          );
        }

        function negation(a) {
          return -a;
        }

        function addition(a, b) {
          return a + b;
        }

        function subtraction(a, b) {
          return a - b;
        }

        function multiplication(a, b) {
          return a * b;
        }

        function division(a, b) {
          return a / b;
        }

        function factorial(a) {
          if (a % 1 || !(+a >= 0)) return NaN;
          if (a > 170) return Infinity;
          else if (a === 0) return 1;
          else {
            return a * factorial(a - 1);
          }
        }

        function power(a, b) {
          return Math.pow(a, b);
        }

        function sqrt(a) {
          return Math.sqrt(a);
        }

        function max() {
          return Math.max.apply(Math, arguments);
        }

        function min() {
          return Math.min.apply(Math, arguments);
        }

        function comma() {
          return Array.of.apply(Array, arguments);
        }

        var defaultMathSymbols = {
          symbols: {
            '!': {
              postfix: {
                symbol: '!',
                f: factorial,
                notation: 'postfix',
                precedence: 6,
                rightToLeft: 0,
                argCount: 1,
              },
              symbol: '!',
              regSymbol: '!',
            },
            '^': {
              infix: {
                symbol: '^',
                f: power,
                notation: 'infix',
                precedence: 5,
                rightToLeft: 1,
                argCount: 2,
              },
              symbol: '^',
              regSymbol: '\\^',
            },
            '*': {
              infix: {
                symbol: '*',
                f: multiplication,
                notation: 'infix',
                precedence: 4,
                rightToLeft: 0,
                argCount: 2,
              },
              symbol: '*',
              regSymbol: '\\*',
            },
            '/': {
              infix: {
                symbol: '/',
                f: division,
                notation: 'infix',
                precedence: 4,
                rightToLeft: 0,
                argCount: 2,
              },
              symbol: '/',
              regSymbol: '/',
            },
            '+': {
              infix: {
                symbol: '+',
                f: addition,
                notation: 'infix',
                precedence: 2,
                rightToLeft: 0,
                argCount: 2,
              },
              prefix: {
                symbol: '+',
                f: last,
                notation: 'prefix',
                precedence: 3,
                rightToLeft: 0,
                argCount: 1,
              },
              symbol: '+',
              regSymbol: '\\+',
            },
            '-': {
              infix: {
                symbol: '-',
                f: subtraction,
                notation: 'infix',
                precedence: 2,
                rightToLeft: 0,
                argCount: 2,
              },
              prefix: {
                symbol: '-',
                f: negation,
                notation: 'prefix',
                precedence: 3,
                rightToLeft: 0,
                argCount: 1,
              },
              symbol: '-',
              regSymbol: '-',
            },
            ',': {
              infix: {
                symbol: ',',
                f: comma,
                notation: 'infix',
                precedence: 1,
                rightToLeft: 0,
                argCount: 2,
              },
              symbol: ',',
              regSymbol: ',',
            },
            '(': {
              prefix: {
                symbol: '(',
                f: last,
                notation: 'prefix',
                precedence: 0,
                rightToLeft: 0,
                argCount: 1,
              },
              symbol: '(',
              regSymbol: '\\(',
            },
            ')': {
              postfix: {
                symbol: ')',
                f: undefined,
                notation: 'postfix',
                precedence: 0,
                rightToLeft: 0,
                argCount: 1,
              },
              symbol: ')',
              regSymbol: '\\)',
            },
            min: {
              func: {
                symbol: 'min',
                f: min,
                notation: 'func',
                precedence: 0,
                rightToLeft: 0,
                argCount: 1,
              },
              symbol: 'min',
              regSymbol: 'min\\b',
            },
            max: {
              func: {
                symbol: 'max',
                f: max,
                notation: 'func',
                precedence: 0,
                rightToLeft: 0,
                argCount: 1,
              },
              symbol: 'max',
              regSymbol: 'max\\b',
            },
            sqrt: {
              func: {
                symbol: 'sqrt',
                f: sqrt,
                notation: 'func',
                precedence: 0,
                rightToLeft: 0,
                argCount: 1,
              },
              symbol: 'sqrt',
              regSymbol: 'sqrt\\b',
            },
          },
        };

        // based on https://github.com/styled-components/styled-components/blob/fcf6f3804c57a14dd7984dfab7bc06ee2edca044/src/utils/error.js

        /**
         * Parse errors.md and turn it into a simple hash of code: message
         * @private
         */
        var ERRORS = {
          '1':
            'Passed invalid arguments to hsl, please pass multiple numbers e.g. hsl(360, 0.75, 0.4) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75 }).\n\n',
          '2':
            'Passed invalid arguments to hsla, please pass multiple numbers e.g. hsla(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).\n\n',
          '3':
            'Passed an incorrect argument to a color function, please pass a string representation of a color.\n\n',
          '4': "Couldn't generate valid rgb string from %s, it returned %s.\n\n",
          '5':
            "Couldn't parse the color string. Please provide the color as a string in hex, rgb, rgba, hsl or hsla notation.\n\n",
          '6':
            'Passed invalid arguments to rgb, please pass multiple numbers e.g. rgb(255, 205, 100) or an object e.g. rgb({ red: 255, green: 205, blue: 100 }).\n\n',
          '7':
            'Passed invalid arguments to rgba, please pass multiple numbers e.g. rgb(255, 205, 100, 0.75) or an object e.g. rgb({ red: 255, green: 205, blue: 100, alpha: 0.75 }).\n\n',
          '8':
            'Passed invalid argument to toColorString, please pass a RgbColor, RgbaColor, HslColor or HslaColor object.\n\n',
          '9': 'Please provide a number of steps to the modularScale helper.\n\n',
          '10':
            'Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n',
          '11':
            'Invalid value passed as base to modularScale, expected number or em string but got "%s"\n\n',
          '12':
            'Expected a string ending in "px" or a number passed as the first argument to %s(), got "%s" instead.\n\n',
          '13':
            'Expected a string ending in "px" or a number passed as the second argument to %s(), got "%s" instead.\n\n',
          '14':
            'Passed invalid pixel value ("%s") to %s(), please pass a value like "12px" or 12.\n\n',
          '15':
            'Passed invalid base value ("%s") to %s(), please pass a value like "12px" or 12.\n\n',
          '16': 'You must provide a template to this method.\n\n',
          '17': 'You passed an unsupported selector state to this method.\n\n',
          '18':
            'minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n',
          '19':
            'fromSize and toSize must be provided as stringified numbers with the same units.\n\n',
          '20':
            'expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n',
          '21':
            'expects the objects in the first argument array to have the properties `prop`, `fromSize`, and `toSize`.\n\n',
          '22':
            'expects the first argument object to have the properties `prop`, `fromSize`, and `toSize`.\n\n',
          '23': 'fontFace expects a name of a font-family.\n\n',
          '24':
            'fontFace expects either the path to the font file(s) or a name of a local copy.\n\n',
          '25': 'fontFace expects localFonts to be an array.\n\n',
          '26': 'fontFace expects fileFormats to be an array.\n\n',
          '27': 'radialGradient requries at least 2 color-stops to properly render.\n\n',
          '28': 'Please supply a filename to retinaImage() as the first argument.\n\n',
          '29':
            "Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",
          '30':
            'Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n',
          '31':
            'The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation\n\n',
          '32':
            "To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\n\n",
          '33':
            'The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation\n\n',
          '34':
            'borderRadius expects a radius value as a string or number as the second argument.\n\n',
          '35':
            'borderRadius expects one of "top", "bottom", "left" or "right" as the first argument.\n\n',
          '36': 'Property must be a string value.\n\n',
          '37': 'Syntax Error at %s.\n\n',
          '38': 'Formula contains a function that needs parentheses at %s.\n\n',
          '39': 'Formula is missing closing parenthesis at %s.\n\n',
          '40': 'Formula has too many closing parentheses at %s.\n\n',
          '41': 'All values in a formula must have the same unit or be unitless.\n\n',
          '42': 'Please provide a number of steps to the modularScale helper.\n\n',
          '43':
            'Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n',
          '44':
            'Invalid value passed as base to modularScale, expected number or em/rem string but got %s.\n\n',
          '45':
            'Passed invalid argument to hslToColorString, please pass a HslColor or HslaColor object.\n\n',
          '46':
            'Passed invalid argument to rgbToColorString, please pass a RgbColor or RgbaColor object.\n\n',
          '47':
            'minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n',
          '48':
            'fromSize and toSize must be provided as stringified numbers with the same units.\n\n',
          '49':
            'Expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n',
          '50':
            'Expects the objects in the first argument array to have the properties prop, fromSize, and toSize.\n\n',
          '51':
            'Expects the first argument object to have the properties prop, fromSize, and toSize.\n\n',
          '52':
            'fontFace expects either the path to the font file(s) or a name of a local copy.\n\n',
          '53': 'fontFace expects localFonts to be an array.\n\n',
          '54': 'fontFace expects fileFormats to be an array.\n\n',
          '55': 'fontFace expects a name of a font-family.\n\n',
          '56': 'linearGradient requries at least 2 color-stops to properly render.\n\n',
          '57': 'radialGradient requries at least 2 color-stops to properly render.\n\n',
          '58': 'Please supply a filename to retinaImage() as the first argument.\n\n',
          '59':
            "Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",
          '60':
            'Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n',
          '61': 'Property must be a string value.\n\n',
          '62':
            'borderRadius expects a radius value as a string or number as the second argument.\n\n',
          '63':
            'borderRadius expects one of "top", "bottom", "left" or "right" as the first argument.\n\n',
          '64':
            'The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation.\n\n',
          '65':
            "To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s').\n\n",
          '66':
            'The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation.\n\n',
          '67': 'You must provide a template to this method.\n\n',
          '68': 'You passed an unsupported selector state to this method.\n\n',
          '69':
            'Expected a string ending in "px" or a number passed as the first argument to %s(), got %s instead.\n\n',
          '70':
            'Expected a string ending in "px" or a number passed as the second argument to %s(), got %s instead.\n\n',
          '71': 'Passed invalid pixel value %s to %s(), please pass a value like "12px" or 12.\n\n',
          '72': 'Passed invalid base value %s to %s(), please pass a value like "12px" or 12.\n\n',
          '73': 'Please provide a valid CSS variable.\n\n',
          '74': 'CSS variable not found.\n',
        };
        /**
         * super basic version of sprintf
         * @private
         */

        function format() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          var a = args[0];
          var b = [];
          var c;

          for (c = 1; c < args.length; c += 1) {
            b.push(args[c]);
          }

          b.forEach(function (d) {
            a = a.replace(/%[a-z]/, d);
          });
          return a;
        }
        /**
         * Create an error file out of errors.md for development and a simple web link to the full errors
         * in production mode.
         * @private
         */

        var PolishedError = /*#__PURE__*/ (function (_Error) {
          Object(_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__['default'])(
            PolishedError,
            _Error
          );

          function PolishedError(code) {
            var _this;

            if (false) {
            } else {
              for (
                var _len2 = arguments.length,
                  args = new Array(_len2 > 1 ? _len2 - 1 : 0),
                  _key2 = 1;
                _key2 < _len2;
                _key2++
              ) {
                args[_key2 - 1] = arguments[_key2];
              }

              _this = _Error.call(this, format.apply(void 0, [ERRORS[code]].concat(args))) || this;
            }

            return Object(
              _babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__[
                'default'
              ]
            )(_this);
          }

          return PolishedError;
        })(
          /*#__PURE__*/ Object(
            _babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__['default']
          )(Error)
        );

        var unitRegExp = /((?!\w)a|na|hc|mc|dg|me[r]?|xe|ni(?![a-zA-Z])|mm|cp|tp|xp|q(?!s)|hv|xamv|nimv|wv|sm|s(?!\D|$)|ged|darg?|nrut)/g; // Merges additional math functionality into the defaults.

        function mergeSymbolMaps(additionalSymbols) {
          var symbolMap = {};
          symbolMap.symbols = additionalSymbols
            ? Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
                {},
                defaultMathSymbols.symbols,
                {},
                additionalSymbols.symbols
              )
            : Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
                {},
                defaultMathSymbols.symbols
              );
          return symbolMap;
        }

        function exec(operators, values) {
          var _ref;

          var op = operators.pop();
          values.push(op.f.apply(op, (_ref = []).concat.apply(_ref, values.splice(-op.argCount))));
          return op.precedence;
        }

        function calculate(expression, additionalSymbols) {
          var symbolMap = mergeSymbolMaps(additionalSymbols);
          var match;
          var operators = [symbolMap.symbols['('].prefix];
          var values = [];
          var pattern = new RegExp( // Pattern for numbers
            '\\d+(?:\\.\\d+)?|' + // ...and patterns for individual operators/function names
              Object.keys(symbolMap.symbols)
                .map(function (key) {
                  return symbolMap.symbols[key];
                }) // longer symbols should be listed first
                // $FlowFixMe
                .sort(function (a, b) {
                  return b.symbol.length - a.symbol.length;
                }) // $FlowFixMe
                .map(function (val) {
                  return val.regSymbol;
                })
                .join('|') +
              '|(\\S)',
            'g'
          );
          pattern.lastIndex = 0; // Reset regular expression object

          var afterValue = false;

          do {
            match = pattern.exec(expression);

            var _ref2 = match || [')', undefined],
              token = _ref2[0],
              bad = _ref2[1];

            var notNumber = symbolMap.symbols[token];
            var notNewValue = notNumber && !notNumber.prefix && !notNumber.func;
            var notAfterValue = !notNumber || (!notNumber.postfix && !notNumber.infix); // Check for syntax errors:

            if (bad || (afterValue ? notAfterValue : notNewValue)) {
              throw new PolishedError(37, match ? match.index : expression.length, expression);
            }

            if (afterValue) {
              // We either have an infix or postfix operator (they should be mutually exclusive)
              var curr = notNumber.postfix || notNumber.infix;

              do {
                var prev = operators[operators.length - 1];
                if ((curr.precedence - prev.precedence || prev.rightToLeft) > 0) break; // Apply previous operator, since it has precedence over current one
              } while (exec(operators, values)); // Exit loop after executing an opening parenthesis or function

              afterValue = curr.notation === 'postfix';

              if (curr.symbol !== ')') {
                operators.push(curr); // Postfix always has precedence over any operator that follows after it

                if (afterValue) exec(operators, values);
              }
            } else if (notNumber) {
              // prefix operator or function
              operators.push(notNumber.prefix || notNumber.func);

              if (notNumber.func) {
                // Require an opening parenthesis
                match = pattern.exec(expression);

                if (!match || match[0] !== '(') {
                  throw new PolishedError(38, match ? match.index : expression.length, expression);
                }
              }
            } else {
              // number
              values.push(+token);
              afterValue = true;
            }
          } while (match && operators.length);

          if (operators.length) {
            throw new PolishedError(39, match ? match.index : expression.length, expression);
          } else if (match) {
            throw new PolishedError(40, match ? match.index : expression.length, expression);
          } else {
            return values.pop();
          }
        }

        function reverseString(str) {
          return str.split('').reverse().join('');
        }
        /**
         * Helper for doing math with CSS Units. Accepts a formula as a string. All values in the formula must have the same unit (or be unitless). Supports complex formulas utliziing addition, subtraction, multiplication, division, square root, powers, factorial, min, max, as well as parentheses for order of operation.
         *
         *In cases where you need to do calculations with mixed units where one unit is a [relative length unit](https://developer.mozilla.org/en-US/docs/Web/CSS/length#Relative_length_units), you will want to use [CSS Calc](https://developer.mozilla.org/en-US/docs/Web/CSS/calc).
         *
         * *warning* While we've done everything possible to ensure math safely evalutes formulas expressed as strings, you should always use extreme caution when passing `math` user provided values.
         * @example
         * // Styles as object usage
         * const styles = {
         *   fontSize: math('12rem + 8rem'),
         *   fontSize: math('(12px + 2px) * 3'),
         *   fontSize: math('3px^2 + sqrt(4)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   fontSize: ${math('12rem + 8rem')};
         *   fontSize: ${math('(12px + 2px) * 3')};
         *   fontSize: ${math('3px^2 + sqrt(4)')};
         * `
         *
         * // CSS as JS Output
         *
         * div: {
         *   fontSize: '20rem',
         *   fontSize: '42px',
         *   fontSize: '11px',
         * }
         */

        function math(formula, additionalSymbols) {
          var reversedFormula = reverseString(formula);
          var formulaMatch = reversedFormula.match(unitRegExp); // Check that all units are the same

          if (
            formulaMatch &&
            !formulaMatch.every(function (unit) {
              return unit === formulaMatch[0];
            })
          ) {
            throw new PolishedError(41);
          }

          var cleanFormula = reverseString(reversedFormula.replace(unitRegExp, ''));
          return (
            '' +
            calculate(cleanFormula, additionalSymbols) +
            (formulaMatch ? reverseString(formulaMatch[0]) : '')
          );
        }

        var cssVariableRegex = /--[\S]*/g;
        /**
         * Fetches the value of a passed CSS Variable.
         *
         * Passthrough can be enabled (off by default) for when you are unsure of the input and want non-variable values to be returned instead of an error.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   'background': cssVar('--background-color'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${cssVar('--background-color')};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   'background': 'red'
         * }
         */

        function cssVar(cssVariable, passThrough) {
          if (!cssVariable || !cssVariable.match(cssVariableRegex)) {
            if (passThrough) return cssVariable;
            throw new PolishedError(73);
          }

          var variableValue;
          /* eslint-disable */

          /* istanbul ignore next */

          if (typeof document !== 'undefined' && document.documentElement !== null) {
            variableValue = getComputedStyle(document.documentElement).getPropertyValue(
              cssVariable
            );
          }
          /* eslint-enable */

          if (variableValue) {
            return variableValue.trim();
          } else {
            throw new PolishedError(74);
          }
        }

        // @private
        function capitalizeString(string) {
          return string.charAt(0).toUpperCase() + string.slice(1);
        }

        var positionMap = ['Top', 'Right', 'Bottom', 'Left'];

        function generateProperty(property, position) {
          if (!property) return position.toLowerCase();
          var splitProperty = property.split('-');

          if (splitProperty.length > 1) {
            splitProperty.splice(1, 0, position);
            return splitProperty.reduce(function (acc, val) {
              return '' + acc + capitalizeString(val);
            });
          }

          var joinedProperty = property.replace(/([a-z])([A-Z])/g, '$1' + position + '$2');
          return property === joinedProperty ? '' + property + position : joinedProperty;
        }

        function generateStyles(property, valuesWithDefaults) {
          var styles = {};

          for (var i = 0; i < valuesWithDefaults.length; i += 1) {
            if (valuesWithDefaults[i] || valuesWithDefaults[i] === 0) {
              styles[generateProperty(property, positionMap[i])] = valuesWithDefaults[i];
            }
          }

          return styles;
        }
        /**
         * Enables shorthand for direction-based properties. It accepts a property (hyphenated or camelCased) and up to four values that map to top, right, bottom, and left, respectively. You can optionally pass an empty string to get only the directional values as properties. You can also optionally pass a null argument for a directional value to ignore it.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...directionalProperty('padding', '12px', '24px', '36px', '48px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${directionalProperty('padding', '12px', '24px', '36px', '48px')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'paddingTop': '12px',
         *   'paddingRight': '24px',
         *   'paddingBottom': '36px',
         *   'paddingLeft': '48px'
         * }
         */

        function directionalProperty(property) {
          for (
            var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
            _key < _len;
            _key++
          ) {
            values[_key - 1] = arguments[_key];
          }

          //  prettier-ignore
          var firstValue = values[0],
      _values$ = values[1],
      secondValue = _values$ === void 0 ? firstValue : _values$,
      _values$2 = values[2],
      thirdValue = _values$2 === void 0 ? firstValue : _values$2,
      _values$3 = values[3],
      fourthValue = _values$3 === void 0 ? secondValue : _values$3;
          var valuesWithDefaults = [firstValue, secondValue, thirdValue, fourthValue];
          return generateStyles(property, valuesWithDefaults);
        }

        /**
         * Check if a string ends with something
         * @private
         */
        function endsWith(string, suffix) {
          return string.substr(-suffix.length) === suffix;
        }

        var cssRegex = /^([+-]?(?:\d+|\d*\.\d+))([a-z]*|%)$/;
        /**
         * Returns a given CSS value minus its unit of measure.
         *
         * @deprecated - stripUnit's unitReturn functionality has been marked for deprecation in polished 4.0. It's functionality has been been moved to getValueAndUnit.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   '--dimension': stripUnit('100px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   --dimension: ${stripUnit('100px')};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   '--dimension': 100
         * }
         */

        function stripUnit(value, unitReturn) {
          if (typeof value !== 'string') return unitReturn ? [value, undefined] : value;
          var matchedValue = value.match(cssRegex);

          if (unitReturn) {
            // eslint-disable-next-line no-console
            console.warn(
              "stripUnit's unitReturn functionality has been marked for deprecation in polished 4.0. It's functionality has been been moved to getValueAndUnit."
            );
            if (matchedValue) return [parseFloat(value), matchedValue[2]];
            return [value, undefined];
          }

          if (matchedValue) return parseFloat(value);
          return value;
        }

        /**
         * Factory function that creates pixel-to-x converters
         * @private
         */

        var pxtoFactory = function pxtoFactory(to) {
          return function (pxval, base) {
            if (base === void 0) {
              base = '16px';
            }

            var newPxval = pxval;
            var newBase = base;

            if (typeof pxval === 'string') {
              if (!endsWith(pxval, 'px')) {
                throw new PolishedError(69, to, pxval);
              }

              newPxval = stripUnit(pxval);
            }

            if (typeof base === 'string') {
              if (!endsWith(base, 'px')) {
                throw new PolishedError(70, to, base);
              }

              newBase = stripUnit(base);
            }

            if (typeof newPxval === 'string') {
              throw new PolishedError(71, pxval, to);
            }

            if (typeof newBase === 'string') {
              throw new PolishedError(72, base, to);
            }

            return '' + newPxval / newBase + to;
          };
        };

        /**
         * Convert pixel value to ems. The default base value is 16px, but can be changed by passing a
         * second argument to the function.
         * @function
         * @param {string|number} pxval
         * @param {string|number} [base='16px']
         * @example
         * // Styles as object usage
         * const styles = {
         *   'height': em('16px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   height: ${em('16px')}
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   'height': '1em'
         * }
         */

        var em = /*#__PURE__*/ pxtoFactory('em');

        var cssRegex$1 = /^([+-]?(?:\d+|\d*\.\d+))([a-z]*|%)$/;
        /**
         * Returns a given CSS value and its unit as elements of an array.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   '--dimension': getValueAndUnit('100px')[0],
         *   '--unit': getValueAndUnit('100px')[1],
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   --dimension: ${getValueAndUnit('100px')[0]};
         *   --unit: ${getValueAndUnit('100px')[1]};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   '--dimension': 100,
         *   '--unit': 'px',
         * }
         */

        function getValueAndUnit(value) {
          if (typeof value !== 'string') return [value, ''];
          var matchedValue = value.match(cssRegex$1);
          if (matchedValue) return [parseFloat(value), matchedValue[2]];
          return [value, undefined];
        }

        var ratioNames = {
          minorSecond: 1.067,
          majorSecond: 1.125,
          minorThird: 1.2,
          majorThird: 1.25,
          perfectFourth: 1.333,
          augFourth: 1.414,
          perfectFifth: 1.5,
          minorSixth: 1.6,
          goldenSection: 1.618,
          majorSixth: 1.667,
          minorSeventh: 1.778,
          majorSeventh: 1.875,
          octave: 2,
          majorTenth: 2.5,
          majorEleventh: 2.667,
          majorTwelfth: 3,
          doubleOctave: 4,
        };

        function getRatio(ratioName) {
          return ratioNames[ratioName];
        }
        /**
         * Establish consistent measurements and spacial relationships throughout your projects by incrementing an em or rem value up or down a defined scale. We provide a list of commonly used scales as pre-defined variables.
         * @example
         * // Styles as object usage
         * const styles = {
         *    // Increment two steps up the default scale
         *   'fontSize': modularScale(2)
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *    // Increment two steps up the default scale
         *   fontSize: ${modularScale(2)}
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   'fontSize': '1.77689em'
         * }
         */

        function modularScale(steps, base, ratio) {
          if (base === void 0) {
            base = '1em';
          }

          if (ratio === void 0) {
            ratio = 1.333;
          }

          if (typeof steps !== 'number') {
            throw new PolishedError(42);
          }

          if (typeof ratio === 'string' && !ratioNames[ratio]) {
            throw new PolishedError(43);
          }

          var _ref = typeof base === 'string' ? getValueAndUnit(base) : [base, ''],
            realBase = _ref[0],
            unit = _ref[1];

          var realRatio = typeof ratio === 'string' ? getRatio(ratio) : ratio;

          if (typeof realBase === 'string') {
            throw new PolishedError(44, base);
          }

          return '' + realBase * Math.pow(realRatio, steps) + (unit || '');
        }

        /**
         * Convert pixel value to rems. The default base value is 16px, but can be changed by passing a
         * second argument to the function.
         * @function
         * @param {string|number} pxval
         * @param {string|number} [base='16px']
         * @example
         * // Styles as object usage
         * const styles = {
         *   'height': rem('16px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   height: ${rem('16px')}
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   'height': '1rem'
         * }
         */

        var rem = /*#__PURE__*/ pxtoFactory('rem');

        /**
         * Returns a CSS calc formula for linear interpolation of a property between two values. Accepts optional minScreen (defaults to '320px') and maxScreen (defaults to '1200px').
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   fontSize: between('20px', '100px', '400px', '1000px'),
         *   fontSize: between('20px', '100px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   fontSize: ${between('20px', '100px', '400px', '1000px')};
         *   fontSize: ${between('20px', '100px')}
         * `
         *
         * // CSS as JS Output
         *
         * h1: {
         *   'fontSize': 'calc(-33.33333333333334px + 13.333333333333334vw)',
         *   'fontSize': 'calc(-9.090909090909093px + 9.090909090909092vw)'
         * }
         */

        function between(fromSize, toSize, minScreen, maxScreen) {
          if (minScreen === void 0) {
            minScreen = '320px';
          }

          if (maxScreen === void 0) {
            maxScreen = '1200px';
          }

          var _getValueAndUnit = getValueAndUnit(fromSize),
            unitlessFromSize = _getValueAndUnit[0],
            fromSizeUnit = _getValueAndUnit[1];

          var _getValueAndUnit2 = getValueAndUnit(toSize),
            unitlessToSize = _getValueAndUnit2[0],
            toSizeUnit = _getValueAndUnit2[1];

          var _getValueAndUnit3 = getValueAndUnit(minScreen),
            unitlessMinScreen = _getValueAndUnit3[0],
            minScreenUnit = _getValueAndUnit3[1];

          var _getValueAndUnit4 = getValueAndUnit(maxScreen),
            unitlessMaxScreen = _getValueAndUnit4[0],
            maxScreenUnit = _getValueAndUnit4[1];

          if (
            typeof unitlessMinScreen !== 'number' ||
            typeof unitlessMaxScreen !== 'number' ||
            !minScreenUnit ||
            !maxScreenUnit ||
            minScreenUnit !== maxScreenUnit
          ) {
            throw new PolishedError(47);
          }

          if (
            typeof unitlessFromSize !== 'number' ||
            typeof unitlessToSize !== 'number' ||
            fromSizeUnit !== toSizeUnit
          ) {
            throw new PolishedError(48);
          }

          var slope = (unitlessFromSize - unitlessToSize) / (unitlessMinScreen - unitlessMaxScreen);
          var base = unitlessToSize - slope * unitlessMaxScreen;
          return (
            'calc(' +
            base.toFixed(2) +
            (fromSizeUnit || '') +
            ' + ' +
            (100 * slope).toFixed(2) +
            'vw)'
          );
        }

        /**
         * CSS to contain a float (credit to CSSMojo).
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *    ...clearFix(),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${clearFix()}
         * `
         *
         * // CSS as JS Output
         *
         * '&::after': {
         *   'clear': 'both',
         *   'content': '""',
         *   'display': 'table'
         * }
         */
        function clearFix(parent) {
          var _ref;

          if (parent === void 0) {
            parent = '&';
          }

          var pseudoSelector = parent + '::after';
          return (
            (_ref = {}),
            (_ref[pseudoSelector] = {
              clear: 'both',
              content: '""',
              display: 'table',
            }),
            _ref
          );
        }

        /**
         * CSS to fully cover an area. Can optionally be passed an offset to act as a "padding".
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...cover()
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${cover()}
         * `
         *
         * // CSS as JS Output
         *
         * div: {
         *   'position': 'absolute',
         *   'top': '0',
         *   'right: '0',
         *   'bottom': '0',
         *   'left: '0'
         * }
         */
        function cover(offset) {
          if (offset === void 0) {
            offset = 0;
          }

          return {
            position: 'absolute',
            top: offset,
            right: offset,
            bottom: offset,
            left: offset,
          };
        }

        /**
         * CSS to represent truncated text with an ellipsis.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...ellipsis('250px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${ellipsis('250px')}
         * `
         *
         * // CSS as JS Output
         *
         * div: {
         *   'display': 'inline-block',
         *   'maxWidth': '250px',
         *   'overflow': 'hidden',
         *   'textOverflow': 'ellipsis',
         *   'whiteSpace': 'nowrap',
         *   'wordWrap': 'normal'
         * }
         */
        function ellipsis(width) {
          if (width === void 0) {
            width = '100%';
          }

          return {
            display: 'inline-block',
            maxWidth: width,
            overflow: 'hidden',
            textOverflow: 'ellipsis',
            whiteSpace: 'nowrap',
            wordWrap: 'normal',
          };
        }

        function _createForOfIteratorHelperLoose(o) {
          var i = 0;
          if (typeof Symbol === 'undefined' || o[Symbol.iterator] == null) {
            if (Array.isArray(o) || (o = _unsupportedIterableToArray(o)))
              return function () {
                if (i >= o.length) return { done: true };
                return { done: false, value: o[i++] };
              };
            throw new TypeError(
              'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
            );
          }
          i = o[Symbol.iterator]();
          return i.next.bind(i);
        }

        function _unsupportedIterableToArray(o, minLen) {
          if (!o) return;
          if (typeof o === 'string') return _arrayLikeToArray(o, minLen);
          var n = Object.prototype.toString.call(o).slice(8, -1);
          if (n === 'Object' && o.constructor) n = o.constructor.name;
          if (n === 'Map' || n === 'Set') return Array.from(n);
          if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
            return _arrayLikeToArray(o, minLen);
        }

        function _arrayLikeToArray(arr, len) {
          if (len == null || len > arr.length) len = arr.length;
          for (var i = 0, arr2 = new Array(len); i < len; i++) {
            arr2[i] = arr[i];
          }
          return arr2;
        }

        /**
         * Returns a set of media queries that resizes a property (or set of properties) between a provided fromSize and toSize. Accepts optional minScreen (defaults to '320px') and maxScreen (defaults to '1200px') to constrain the interpolation.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...fluidRange(
         *    {
         *        prop: 'padding',
         *        fromSize: '20px',
         *        toSize: '100px',
         *      },
         *      '400px',
         *      '1000px',
         *    )
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${fluidRange(
         *      {
         *        prop: 'padding',
         *        fromSize: '20px',
         *        toSize: '100px',
         *      },
         *      '400px',
         *      '1000px',
         *    )}
         * `
         *
         * // CSS as JS Output
         *
         * div: {
         *   "@media (min-width: 1000px)": Object {
         *     "padding": "100px",
         *   },
         *   "@media (min-width: 400px)": Object {
         *     "padding": "calc(-33.33333333333334px + 13.333333333333334vw)",
         *   },
         *   "padding": "20px",
         * }
         */
        function fluidRange(cssProp, minScreen, maxScreen) {
          if (minScreen === void 0) {
            minScreen = '320px';
          }

          if (maxScreen === void 0) {
            maxScreen = '1200px';
          }

          if ((!Array.isArray(cssProp) && typeof cssProp !== 'object') || cssProp === null) {
            throw new PolishedError(49);
          }

          if (Array.isArray(cssProp)) {
            var mediaQueries = {};
            var fallbacks = {};

            for (
              var _iterator = _createForOfIteratorHelperLoose(cssProp), _step;
              !(_step = _iterator()).done;

            ) {
              var _extends2, _extends3;

              var obj = _step.value;

              if (!obj.prop || !obj.fromSize || !obj.toSize) {
                throw new PolishedError(50);
              }

              fallbacks[obj.prop] = obj.fromSize;
              mediaQueries['@media (min-width: ' + minScreen + ')'] = Object(
                _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
              )(
                {},
                mediaQueries['@media (min-width: ' + minScreen + ')'],
                ((_extends2 = {}),
                (_extends2[obj.prop] = between(obj.fromSize, obj.toSize, minScreen, maxScreen)),
                _extends2)
              );
              mediaQueries['@media (min-width: ' + maxScreen + ')'] = Object(
                _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
              )(
                {},
                mediaQueries['@media (min-width: ' + maxScreen + ')'],
                ((_extends3 = {}), (_extends3[obj.prop] = obj.toSize), _extends3)
              );
            }

            return Object(
              _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
            )({}, fallbacks, {}, mediaQueries);
          } else {
            var _ref, _ref2, _ref3;

            if (!cssProp.prop || !cssProp.fromSize || !cssProp.toSize) {
              throw new PolishedError(51);
            }

            return (
              (_ref3 = {}),
              (_ref3[cssProp.prop] = cssProp.fromSize),
              (_ref3['@media (min-width: ' + minScreen + ')'] =
                ((_ref = {}),
                (_ref[cssProp.prop] = between(
                  cssProp.fromSize,
                  cssProp.toSize,
                  minScreen,
                  maxScreen
                )),
                _ref)),
              (_ref3['@media (min-width: ' + maxScreen + ')'] =
                ((_ref2 = {}), (_ref2[cssProp.prop] = cssProp.toSize), _ref2)),
              _ref3
            );
          }
        }

        var dataURIRegex = /^\s*data:([a-z]+\/[a-z-]+(;[a-z-]+=[a-z-]+)?)?(;charset=[a-z0-9-]+)?(;base64)?,[a-z0-9!$&',()*+,;=\-._~:@/?%\s]*\s*$/i;
        var formatHintMap = {
          woff: 'woff',
          woff2: 'woff2',
          ttf: 'truetype',
          otf: 'opentype',
          eot: 'embedded-opentype',
          svg: 'svg',
          svgz: 'svg',
        };

        function generateFormatHint(format, formatHint) {
          if (!formatHint) return '';
          return ' format("' + formatHintMap[format] + '")';
        }

        function isDataURI(fontFilePath) {
          return !!fontFilePath.match(dataURIRegex);
        }

        function generateFileReferences(fontFilePath, fileFormats, formatHint) {
          if (isDataURI(fontFilePath)) {
            return 'url("' + fontFilePath + '")' + generateFormatHint(fileFormats[0], formatHint);
          }

          var fileFontReferences = fileFormats.map(function (format) {
            return (
              'url("' + fontFilePath + '.' + format + '")' + generateFormatHint(format, formatHint)
            );
          });
          return fileFontReferences.join(', ');
        }

        function generateLocalReferences(localFonts) {
          var localFontReferences = localFonts.map(function (font) {
            return 'local("' + font + '")';
          });
          return localFontReferences.join(', ');
        }

        function generateSources(fontFilePath, localFonts, fileFormats, formatHint) {
          var fontReferences = [];
          if (localFonts) fontReferences.push(generateLocalReferences(localFonts));

          if (fontFilePath) {
            fontReferences.push(generateFileReferences(fontFilePath, fileFormats, formatHint));
          }

          return fontReferences.join(', ');
        }
        /**
         * CSS for a @font-face declaration.
         *
         * @example
         * // Styles as object basic usage
         * const styles = {
         *    ...fontFace({
         *      'fontFamily': 'Sans-Pro',
         *      'fontFilePath': 'path/to/file'
         *    })
         * }
         *
         * // styled-components basic usage
         * const GlobalStyle = createGlobalStyle`${
         *   fontFace({
         *     'fontFamily': 'Sans-Pro',
         *     'fontFilePath': 'path/to/file'
         *   }
         * )}`
         *
         * // CSS as JS Output
         *
         * '@font-face': {
         *   'fontFamily': 'Sans-Pro',
         *   'src': 'url("path/to/file.eot"), url("path/to/file.woff2"), url("path/to/file.woff"), url("path/to/file.ttf"), url("path/to/file.svg")',
         * }
         */

        function fontFace(_ref) {
          var fontFamily = _ref.fontFamily,
            fontFilePath = _ref.fontFilePath,
            fontStretch = _ref.fontStretch,
            fontStyle = _ref.fontStyle,
            fontVariant = _ref.fontVariant,
            fontWeight = _ref.fontWeight,
            _ref$fileFormats = _ref.fileFormats,
            fileFormats =
              _ref$fileFormats === void 0
                ? ['eot', 'woff2', 'woff', 'ttf', 'svg']
                : _ref$fileFormats,
            _ref$formatHint = _ref.formatHint,
            formatHint = _ref$formatHint === void 0 ? false : _ref$formatHint,
            localFonts = _ref.localFonts,
            unicodeRange = _ref.unicodeRange,
            fontDisplay = _ref.fontDisplay,
            fontVariationSettings = _ref.fontVariationSettings,
            fontFeatureSettings = _ref.fontFeatureSettings;
          // Error Handling
          if (!fontFamily) throw new PolishedError(55);

          if (!fontFilePath && !localFonts) {
            throw new PolishedError(52);
          }

          if (localFonts && !Array.isArray(localFonts)) {
            throw new PolishedError(53);
          }

          if (!Array.isArray(fileFormats)) {
            throw new PolishedError(54);
          }

          var fontFaceDeclaration = {
            '@font-face': {
              fontFamily: fontFamily,
              src: generateSources(fontFilePath, localFonts, fileFormats, formatHint),
              unicodeRange: unicodeRange,
              fontStretch: fontStretch,
              fontStyle: fontStyle,
              fontVariant: fontVariant,
              fontWeight: fontWeight,
              fontDisplay: fontDisplay,
              fontVariationSettings: fontVariationSettings,
              fontFeatureSettings: fontFeatureSettings,
            },
          }; // Removes undefined fields for cleaner css object.

          return JSON.parse(JSON.stringify(fontFaceDeclaration));
        }

        /**
         * CSS to hide text to show a background image in a SEO-friendly way.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   'backgroundImage': 'url(logo.png)',
         *   ...hideText(),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   backgroundImage: url(logo.png);
         *   ${hideText()};
         * `
         *
         * // CSS as JS Output
         *
         * 'div': {
         *   'backgroundImage': 'url(logo.png)',
         *   'textIndent': '101%',
         *   'overflow': 'hidden',
         *   'whiteSpace': 'nowrap',
         * }
         */
        function hideText() {
          return {
            textIndent: '101%',
            overflow: 'hidden',
            whiteSpace: 'nowrap',
          };
        }

        /**
         * CSS to hide content visually but remain accessible to screen readers.
         * from [HTML5 Boilerplate](https://github.com/h5bp/html5-boilerplate/blob/9a176f57af1cfe8ec70300da4621fb9b07e5fa31/src/css/main.css#L121)
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...hideVisually(),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${hideVisually()};
         * `
         *
         * // CSS as JS Output
         *
         * 'div': {
         *   'border': '0',
         *   'clip': 'rect(0 0 0 0)',
         *   'height': '1px',
         *   'margin': '-1px',
         *   'overflow': 'hidden',
         *   'padding': '0',
         *   'position': 'absolute',
         *   'whiteSpace': 'nowrap',
         *   'width': '1px',
         * }
         */
        function hideVisually() {
          return {
            border: '0',
            clip: 'rect(0 0 0 0)',
            height: '1px',
            margin: '-1px',
            overflow: 'hidden',
            padding: '0',
            position: 'absolute',
            whiteSpace: 'nowrap',
            width: '1px',
          };
        }

        /**
         * Generates a media query to target HiDPI devices.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *  [hiDPI(1.5)]: {
         *    width: 200px;
         *  }
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${hiDPI(1.5)} {
         *     width: 200px;
         *   }
         * `
         *
         * // CSS as JS Output
         *
         * '@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
         *  only screen and (min--moz-device-pixel-ratio: 1.5),
         *  only screen and (-o-min-device-pixel-ratio: 1.5/1),
         *  only screen and (min-resolution: 144dpi),
         *  only screen and (min-resolution: 1.5dppx)': {
         *   'width': '200px',
         * }
         */
        function hiDPI(ratio) {
          if (ratio === void 0) {
            ratio = 1.3;
          }

          return (
            '\n    @media only screen and (-webkit-min-device-pixel-ratio: ' +
            ratio +
            '),\n    only screen and (min--moz-device-pixel-ratio: ' +
            ratio +
            '),\n    only screen and (-o-min-device-pixel-ratio: ' +
            ratio +
            '/1),\n    only screen and (min-resolution: ' +
            Math.round(ratio * 96) +
            'dpi),\n    only screen and (min-resolution: ' +
            ratio +
            'dppx)\n  '
          );
        }

        function constructGradientValue(literals) {
          var template = '';

          for (
            var _len = arguments.length,
              substitutions = new Array(_len > 1 ? _len - 1 : 0),
              _key = 1;
            _key < _len;
            _key++
          ) {
            substitutions[_key - 1] = arguments[_key];
          }

          for (var i = 0; i < literals.length; i += 1) {
            template += literals[i];

            if (i === substitutions.length - 1 && substitutions[i]) {
              var definedValues = substitutions.filter(function (substitute) {
                return !!substitute;
              }); // Adds leading coma if properties preceed color-stops

              if (definedValues.length > 1) {
                template = template.slice(0, -1);
                template += ', ' + substitutions[i]; // No trailing space if color-stops is the only param provided
              } else if (definedValues.length === 1) {
                template += '' + substitutions[i];
              }
            } else if (substitutions[i]) {
              template += substitutions[i] + ' ';
            }
          }

          return template.trim();
        }

        function _templateObject() {
          var data = Object(
            _babel_runtime_helpers_esm_taggedTemplateLiteralLoose__WEBPACK_IMPORTED_MODULE_4__[
              'default'
            ]
          )(['linear-gradient(', '', ')']);

          _templateObject = function _templateObject() {
            return data;
          };

          return data;
        }

        /**
 * CSS for declaring a linear gradient, including a fallback background-color. The fallback is either the first color-stop or an explicitly passed fallback color.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   ...linearGradient({
        colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],
        toDirection: 'to top right',
        fallback: '#FFF',
      })
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   ${linearGradient({
        colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],
        toDirection: 'to top right',
        fallback: '#FFF',
      })}
 *`
 *
 * // CSS as JS Output
 *
 * div: {
 *   'backgroundColor': '#FFF',
 *   'backgroundImage': 'linear-gradient(to top right, #00FFFF 0%, rgba(0, 0, 255, 0) 50%, #0000FF 95%)',
 * }
 */
        function linearGradient(_ref) {
          var colorStops = _ref.colorStops,
            fallback = _ref.fallback,
            _ref$toDirection = _ref.toDirection,
            toDirection = _ref$toDirection === void 0 ? '' : _ref$toDirection;

          if (!colorStops || colorStops.length < 2) {
            throw new PolishedError(56);
          }

          return {
            backgroundColor: fallback || colorStops[0].split(' ')[0],
            backgroundImage: constructGradientValue(
              _templateObject(),
              toDirection,
              colorStops.join(', ')
            ),
          };
        }

        /**
         * CSS to normalize abnormalities across browsers (normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css)
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *    ...normalize(),
         * }
         *
         * // styled-components usage
         * const GlobalStyle = createGlobalStyle`${normalize()}`
         *
         * // CSS as JS Output
         *
         * html {
         *   lineHeight: 1.15,
         *   textSizeAdjust: 100%,
         * } ...
         */
        function normalize() {
          var _ref;

          return [
            ((_ref = {
              html: {
                lineHeight: '1.15',
                textSizeAdjust: '100%',
              },
              body: {
                margin: '0',
              },
              main: {
                display: 'block',
              },
              h1: {
                fontSize: '2em',
                margin: '0.67em 0',
              },
              hr: {
                boxSizing: 'content-box',
                height: '0',
                overflow: 'visible',
              },
              pre: {
                fontFamily: 'monospace, monospace',
                fontSize: '1em',
              },
              a: {
                backgroundColor: 'transparent',
              },
              'abbr[title]': {
                borderBottom: 'none',
                textDecoration: 'underline',
              },
            }),
            (_ref['b,\n    strong'] = {
              fontWeight: 'bolder',
            }),
            (_ref['code,\n    kbd,\n    samp'] = {
              fontFamily: 'monospace, monospace',
              fontSize: '1em',
            }),
            (_ref.small = {
              fontSize: '80%',
            }),
            (_ref['sub,\n    sup'] = {
              fontSize: '75%',
              lineHeight: '0',
              position: 'relative',
              verticalAlign: 'baseline',
            }),
            (_ref.sub = {
              bottom: '-0.25em',
            }),
            (_ref.sup = {
              top: '-0.5em',
            }),
            (_ref.img = {
              borderStyle: 'none',
            }),
            (_ref['button,\n    input,\n    optgroup,\n    select,\n    textarea'] = {
              fontFamily: 'inherit',
              fontSize: '100%',
              lineHeight: '1.15',
              margin: '0',
            }),
            (_ref['button,\n    input'] = {
              overflow: 'visible',
            }),
            (_ref['button,\n    select'] = {
              textTransform: 'none',
            }),
            (_ref[
              'button,\n    html [type="button"],\n    [type="reset"],\n    [type="submit"]'
            ] = {
              WebkitAppearance: 'button',
            }),
            (_ref[
              'button::-moz-focus-inner,\n    [type="button"]::-moz-focus-inner,\n    [type="reset"]::-moz-focus-inner,\n    [type="submit"]::-moz-focus-inner'
            ] = {
              borderStyle: 'none',
              padding: '0',
            }),
            (_ref[
              'button:-moz-focusring,\n    [type="button"]:-moz-focusring,\n    [type="reset"]:-moz-focusring,\n    [type="submit"]:-moz-focusring'
            ] = {
              outline: '1px dotted ButtonText',
            }),
            (_ref.fieldset = {
              padding: '0.35em 0.625em 0.75em',
            }),
            (_ref.legend = {
              boxSizing: 'border-box',
              color: 'inherit',
              display: 'table',
              maxWidth: '100%',
              padding: '0',
              whiteSpace: 'normal',
            }),
            (_ref.progress = {
              verticalAlign: 'baseline',
            }),
            (_ref.textarea = {
              overflow: 'auto',
            }),
            (_ref['[type="checkbox"],\n    [type="radio"]'] = {
              boxSizing: 'border-box',
              padding: '0',
            }),
            (_ref[
              '[type="number"]::-webkit-inner-spin-button,\n    [type="number"]::-webkit-outer-spin-button'
            ] = {
              height: 'auto',
            }),
            (_ref['[type="search"]'] = {
              WebkitAppearance: 'textfield',
              outlineOffset: '-2px',
            }),
            (_ref['[type="search"]::-webkit-search-decoration'] = {
              WebkitAppearance: 'none',
            }),
            (_ref['::-webkit-file-upload-button'] = {
              WebkitAppearance: 'button',
              font: 'inherit',
            }),
            (_ref.details = {
              display: 'block',
            }),
            (_ref.summary = {
              display: 'list-item',
            }),
            (_ref.template = {
              display: 'none',
            }),
            (_ref['[hidden]'] = {
              display: 'none',
            }),
            _ref),
            {
              'abbr[title]': {
                textDecoration: 'underline dotted',
              },
            },
          ];
        }

        function _templateObject$1() {
          var data = Object(
            _babel_runtime_helpers_esm_taggedTemplateLiteralLoose__WEBPACK_IMPORTED_MODULE_4__[
              'default'
            ]
          )(['radial-gradient(', '', '', '', ')']);

          _templateObject$1 = function _templateObject() {
            return data;
          };

          return data;
        }

        /**
         * CSS for declaring a radial gradient, including a fallback background-color. The fallback is either the first color-stop or an explicitly passed fallback color.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...radialGradient({
         *     colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],
         *     extent: 'farthest-corner at 45px 45px',
         *     position: 'center',
         *     shape: 'ellipse',
         *   })
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${radialGradient({
         *     colorStops: ['#00FFFF 0%', 'rgba(0, 0, 255, 0) 50%', '#0000FF 95%'],
         *     extent: 'farthest-corner at 45px 45px',
         *     position: 'center',
         *     shape: 'ellipse',
         *   })}
         *`
         *
         * // CSS as JS Output
         *
         * div: {
         *   'backgroundColor': '#00FFFF',
         *   'backgroundImage': 'radial-gradient(center ellipse farthest-corner at 45px 45px, #00FFFF 0%, rgba(0, 0, 255, 0) 50%, #0000FF 95%)',
         * }
         */
        function radialGradient(_ref) {
          var colorStops = _ref.colorStops,
            _ref$extent = _ref.extent,
            extent = _ref$extent === void 0 ? '' : _ref$extent,
            fallback = _ref.fallback,
            _ref$position = _ref.position,
            position = _ref$position === void 0 ? '' : _ref$position,
            _ref$shape = _ref.shape,
            shape = _ref$shape === void 0 ? '' : _ref$shape;

          if (!colorStops || colorStops.length < 2) {
            throw new PolishedError(57);
          }

          return {
            backgroundColor: fallback || colorStops[0].split(' ')[0],
            backgroundImage: constructGradientValue(
              _templateObject$1(),
              position,
              shape,
              extent,
              colorStops.join(', ')
            ),
          };
        }

        /**
         * A helper to generate a retina background image and non-retina
         * background image. The retina background image will output to a HiDPI media query. The mixin uses
         * a _2x.png filename suffix by default.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *  ...retinaImage('my-img')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${retinaImage('my-img')}
         * `
         *
         * // CSS as JS Output
         * div {
         *   backgroundImage: 'url(my-img.png)',
         *   '@media only screen and (-webkit-min-device-pixel-ratio: 1.3),
         *    only screen and (min--moz-device-pixel-ratio: 1.3),
         *    only screen and (-o-min-device-pixel-ratio: 1.3/1),
         *    only screen and (min-resolution: 144dpi),
         *    only screen and (min-resolution: 1.5dppx)': {
         *     backgroundImage: 'url(my-img_2x.png)',
         *   }
         * }
         */
        function retinaImage(filename, backgroundSize, extension, retinaFilename, retinaSuffix) {
          var _ref;

          if (extension === void 0) {
            extension = 'png';
          }

          if (retinaSuffix === void 0) {
            retinaSuffix = '_2x';
          }

          if (!filename) {
            throw new PolishedError(58);
          } // Replace the dot at the beginning of the passed extension if one exists

          var ext = extension.replace(/^\./, '');
          var rFilename = retinaFilename
            ? retinaFilename + '.' + ext
            : '' + filename + retinaSuffix + '.' + ext;
          return (
            (_ref = {
              backgroundImage: 'url(' + filename + '.' + ext + ')',
            }),
            (_ref[hiDPI()] = Object(
              _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
            )(
              {
                backgroundImage: 'url(' + rFilename + ')',
              },
              backgroundSize
                ? {
                    backgroundSize: backgroundSize,
                  }
                : {}
            )),
            _ref
          );
        }

        /* eslint-disable key-spacing */
        var functionsMap = {
          easeInBack: 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',
          easeInCirc: 'cubic-bezier(0.600,  0.040, 0.980, 0.335)',
          easeInCubic: 'cubic-bezier(0.550,  0.055, 0.675, 0.190)',
          easeInExpo: 'cubic-bezier(0.950,  0.050, 0.795, 0.035)',
          easeInQuad: 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',
          easeInQuart: 'cubic-bezier(0.895,  0.030, 0.685, 0.220)',
          easeInQuint: 'cubic-bezier(0.755,  0.050, 0.855, 0.060)',
          easeInSine: 'cubic-bezier(0.470,  0.000, 0.745, 0.715)',
          easeOutBack: 'cubic-bezier(0.175,  0.885, 0.320, 1.275)',
          easeOutCubic: 'cubic-bezier(0.215,  0.610, 0.355, 1.000)',
          easeOutCirc: 'cubic-bezier(0.075,  0.820, 0.165, 1.000)',
          easeOutExpo: 'cubic-bezier(0.190,  1.000, 0.220, 1.000)',
          easeOutQuad: 'cubic-bezier(0.250,  0.460, 0.450, 0.940)',
          easeOutQuart: 'cubic-bezier(0.165,  0.840, 0.440, 1.000)',
          easeOutQuint: 'cubic-bezier(0.230,  1.000, 0.320, 1.000)',
          easeOutSine: 'cubic-bezier(0.390,  0.575, 0.565, 1.000)',
          easeInOutBack: 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',
          easeInOutCirc: 'cubic-bezier(0.785,  0.135, 0.150, 0.860)',
          easeInOutCubic: 'cubic-bezier(0.645,  0.045, 0.355, 1.000)',
          easeInOutExpo: 'cubic-bezier(1.000,  0.000, 0.000, 1.000)',
          easeInOutQuad: 'cubic-bezier(0.455,  0.030, 0.515, 0.955)',
          easeInOutQuart: 'cubic-bezier(0.770,  0.000, 0.175, 1.000)',
          easeInOutQuint: 'cubic-bezier(0.860,  0.000, 0.070, 1.000)',
          easeInOutSine: 'cubic-bezier(0.445,  0.050, 0.550, 0.950)',
        };
        /* eslint-enable key-spacing */

        function getTimingFunction(functionName) {
          return functionsMap[functionName];
        }
        /**
         * String to represent common easing functions as demonstrated here: (github.com/jaukia/easie).
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   'transitionTimingFunction': timingFunctions('easeInQuad')
         * }
         *
         * // styled-components usage
         *  const div = styled.div`
         *   transitionTimingFunction: ${timingFunctions('easeInQuad')};
         * `
         *
         * // CSS as JS Output
         *
         * 'div': {
         *   'transitionTimingFunction': 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',
         * }
         */

        function timingFunctions(timingFunction) {
          return getTimingFunction(timingFunction);
        }

        var getBorderWidth = function getBorderWidth(pointingDirection, height, width) {
          var fullWidth = '' + width[0] + (width[1] || '');
          var halfWidth = '' + width[0] / 2 + (width[1] || '');
          var fullHeight = '' + height[0] + (height[1] || '');
          var halfHeight = '' + height[0] / 2 + (height[1] || '');

          switch (pointingDirection) {
            case 'top':
              return '0 ' + halfWidth + ' ' + fullHeight + ' ' + halfWidth;

            case 'topLeft':
              return fullWidth + ' ' + fullHeight + ' 0 0';

            case 'left':
              return halfHeight + ' ' + fullWidth + ' ' + halfHeight + ' 0';

            case 'bottomLeft':
              return fullWidth + ' 0 0 ' + fullHeight;

            case 'bottom':
              return fullHeight + ' ' + halfWidth + ' 0 ' + halfWidth;

            case 'bottomRight':
              return '0 0 ' + fullWidth + ' ' + fullHeight;

            case 'right':
              return halfHeight + ' 0 ' + halfHeight + ' ' + fullWidth;

            case 'topRight':
            default:
              return '0 ' + fullWidth + ' ' + fullHeight + ' 0';
          }
        };

        var getBorderColor = function getBorderColor(
          pointingDirection,
          foregroundColor,
          backgroundColor
        ) {
          switch (pointingDirection) {
            case 'top':
            case 'bottomRight':
              return (
                backgroundColor +
                ' ' +
                backgroundColor +
                ' ' +
                foregroundColor +
                ' ' +
                backgroundColor
              );

            case 'right':
            case 'bottomLeft':
              return (
                backgroundColor +
                ' ' +
                backgroundColor +
                ' ' +
                backgroundColor +
                ' ' +
                foregroundColor
              );

            case 'bottom':
            case 'topLeft':
              return (
                foregroundColor +
                ' ' +
                backgroundColor +
                ' ' +
                backgroundColor +
                ' ' +
                backgroundColor
              );

            case 'left':
            case 'topRight':
              return (
                backgroundColor +
                ' ' +
                foregroundColor +
                ' ' +
                backgroundColor +
                ' ' +
                backgroundColor
              );

            default:
              throw new PolishedError(59);
          }
        };
        /**
         * CSS to represent triangle with any pointing direction with an optional background color.
         *
         * @example
         * // Styles as object usage
         *
         * const styles = {
         *   ...triangle({ pointingDirection: 'right', width: '100px', height: '100px', foregroundColor: 'red' })
         * }
         *
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${triangle({ pointingDirection: 'right', width: '100px', height: '100px', foregroundColor: 'red' })}
         *
         *
         * // CSS as JS Output
         *
         * div: {
         *  'borderColor': 'transparent transparent transparent red',
         *  'borderStyle': 'solid',
         *  'borderWidth': '50px 0 50px 100px',
         *  'height': '0',
         *  'width': '0',
         * }
         */

        function triangle(_ref) {
          var pointingDirection = _ref.pointingDirection,
            height = _ref.height,
            width = _ref.width,
            foregroundColor = _ref.foregroundColor,
            _ref$backgroundColor = _ref.backgroundColor,
            backgroundColor =
              _ref$backgroundColor === void 0 ? 'transparent' : _ref$backgroundColor;
          var widthAndUnit = getValueAndUnit(width);
          var heightAndUnit = getValueAndUnit(height);

          if (isNaN(heightAndUnit[0]) || isNaN(widthAndUnit[0])) {
            throw new PolishedError(60);
          }

          return {
            width: '0',
            height: '0',
            borderColor: getBorderColor(pointingDirection, foregroundColor, backgroundColor),
            borderStyle: 'solid',
            borderWidth: getBorderWidth(pointingDirection, heightAndUnit, widthAndUnit),
          };
        }

        /**
         * Provides an easy way to change the `wordWrap` property.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...wordWrap('break-word')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${wordWrap('break-word')}
         * `
         *
         * // CSS as JS Output
         *
         * const styles = {
         *   overflowWrap: 'break-word',
         *   wordWrap: 'break-word',
         *   wordBreak: 'break-all',
         * }
         */
        function wordWrap(wrap) {
          if (wrap === void 0) {
            wrap = 'break-word';
          }

          var wordBreak = wrap === 'break-word' ? 'break-all' : wrap;
          return {
            overflowWrap: wrap,
            wordWrap: wrap,
            wordBreak: wordBreak,
          };
        }

        function colorToInt(color) {
          return Math.round(color * 255);
        }

        function convertToInt(red, green, blue) {
          return colorToInt(red) + ',' + colorToInt(green) + ',' + colorToInt(blue);
        }

        function hslToRgb(hue, saturation, lightness, convert) {
          if (convert === void 0) {
            convert = convertToInt;
          }

          if (saturation === 0) {
            // achromatic
            return convert(lightness, lightness, lightness);
          } // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV

          var huePrime = (((hue % 360) + 360) % 360) / 60;
          var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;
          var secondComponent = chroma * (1 - Math.abs((huePrime % 2) - 1));
          var red = 0;
          var green = 0;
          var blue = 0;

          if (huePrime >= 0 && huePrime < 1) {
            red = chroma;
            green = secondComponent;
          } else if (huePrime >= 1 && huePrime < 2) {
            red = secondComponent;
            green = chroma;
          } else if (huePrime >= 2 && huePrime < 3) {
            green = chroma;
            blue = secondComponent;
          } else if (huePrime >= 3 && huePrime < 4) {
            green = secondComponent;
            blue = chroma;
          } else if (huePrime >= 4 && huePrime < 5) {
            red = secondComponent;
            blue = chroma;
          } else if (huePrime >= 5 && huePrime < 6) {
            red = chroma;
            blue = secondComponent;
          }

          var lightnessModification = lightness - chroma / 2;
          var finalRed = red + lightnessModification;
          var finalGreen = green + lightnessModification;
          var finalBlue = blue + lightnessModification;
          return convert(finalRed, finalGreen, finalBlue);
        }

        var namedColorMap = {
          aliceblue: 'f0f8ff',
          antiquewhite: 'faebd7',
          aqua: '00ffff',
          aquamarine: '7fffd4',
          azure: 'f0ffff',
          beige: 'f5f5dc',
          bisque: 'ffe4c4',
          black: '000',
          blanchedalmond: 'ffebcd',
          blue: '0000ff',
          blueviolet: '8a2be2',
          brown: 'a52a2a',
          burlywood: 'deb887',
          cadetblue: '5f9ea0',
          chartreuse: '7fff00',
          chocolate: 'd2691e',
          coral: 'ff7f50',
          cornflowerblue: '6495ed',
          cornsilk: 'fff8dc',
          crimson: 'dc143c',
          cyan: '00ffff',
          darkblue: '00008b',
          darkcyan: '008b8b',
          darkgoldenrod: 'b8860b',
          darkgray: 'a9a9a9',
          darkgreen: '006400',
          darkgrey: 'a9a9a9',
          darkkhaki: 'bdb76b',
          darkmagenta: '8b008b',
          darkolivegreen: '556b2f',
          darkorange: 'ff8c00',
          darkorchid: '9932cc',
          darkred: '8b0000',
          darksalmon: 'e9967a',
          darkseagreen: '8fbc8f',
          darkslateblue: '483d8b',
          darkslategray: '2f4f4f',
          darkslategrey: '2f4f4f',
          darkturquoise: '00ced1',
          darkviolet: '9400d3',
          deeppink: 'ff1493',
          deepskyblue: '00bfff',
          dimgray: '696969',
          dimgrey: '696969',
          dodgerblue: '1e90ff',
          firebrick: 'b22222',
          floralwhite: 'fffaf0',
          forestgreen: '228b22',
          fuchsia: 'ff00ff',
          gainsboro: 'dcdcdc',
          ghostwhite: 'f8f8ff',
          gold: 'ffd700',
          goldenrod: 'daa520',
          gray: '808080',
          green: '008000',
          greenyellow: 'adff2f',
          grey: '808080',
          honeydew: 'f0fff0',
          hotpink: 'ff69b4',
          indianred: 'cd5c5c',
          indigo: '4b0082',
          ivory: 'fffff0',
          khaki: 'f0e68c',
          lavender: 'e6e6fa',
          lavenderblush: 'fff0f5',
          lawngreen: '7cfc00',
          lemonchiffon: 'fffacd',
          lightblue: 'add8e6',
          lightcoral: 'f08080',
          lightcyan: 'e0ffff',
          lightgoldenrodyellow: 'fafad2',
          lightgray: 'd3d3d3',
          lightgreen: '90ee90',
          lightgrey: 'd3d3d3',
          lightpink: 'ffb6c1',
          lightsalmon: 'ffa07a',
          lightseagreen: '20b2aa',
          lightskyblue: '87cefa',
          lightslategray: '789',
          lightslategrey: '789',
          lightsteelblue: 'b0c4de',
          lightyellow: 'ffffe0',
          lime: '0f0',
          limegreen: '32cd32',
          linen: 'faf0e6',
          magenta: 'f0f',
          maroon: '800000',
          mediumaquamarine: '66cdaa',
          mediumblue: '0000cd',
          mediumorchid: 'ba55d3',
          mediumpurple: '9370db',
          mediumseagreen: '3cb371',
          mediumslateblue: '7b68ee',
          mediumspringgreen: '00fa9a',
          mediumturquoise: '48d1cc',
          mediumvioletred: 'c71585',
          midnightblue: '191970',
          mintcream: 'f5fffa',
          mistyrose: 'ffe4e1',
          moccasin: 'ffe4b5',
          navajowhite: 'ffdead',
          navy: '000080',
          oldlace: 'fdf5e6',
          olive: '808000',
          olivedrab: '6b8e23',
          orange: 'ffa500',
          orangered: 'ff4500',
          orchid: 'da70d6',
          palegoldenrod: 'eee8aa',
          palegreen: '98fb98',
          paleturquoise: 'afeeee',
          palevioletred: 'db7093',
          papayawhip: 'ffefd5',
          peachpuff: 'ffdab9',
          peru: 'cd853f',
          pink: 'ffc0cb',
          plum: 'dda0dd',
          powderblue: 'b0e0e6',
          purple: '800080',
          rebeccapurple: '639',
          red: 'f00',
          rosybrown: 'bc8f8f',
          royalblue: '4169e1',
          saddlebrown: '8b4513',
          salmon: 'fa8072',
          sandybrown: 'f4a460',
          seagreen: '2e8b57',
          seashell: 'fff5ee',
          sienna: 'a0522d',
          silver: 'c0c0c0',
          skyblue: '87ceeb',
          slateblue: '6a5acd',
          slategray: '708090',
          slategrey: '708090',
          snow: 'fffafa',
          springgreen: '00ff7f',
          steelblue: '4682b4',
          tan: 'd2b48c',
          teal: '008080',
          thistle: 'd8bfd8',
          tomato: 'ff6347',
          turquoise: '40e0d0',
          violet: 'ee82ee',
          wheat: 'f5deb3',
          white: 'fff',
          whitesmoke: 'f5f5f5',
          yellow: 'ff0',
          yellowgreen: '9acd32',
        };
        /**
         * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.
         * @private
         */

        function nameToHex(color) {
          if (typeof color !== 'string') return color;
          var normalizedColorName = color.toLowerCase();
          return namedColorMap[normalizedColorName]
            ? '#' + namedColorMap[normalizedColorName]
            : color;
        }

        var hexRegex = /^#[a-fA-F0-9]{6}$/;
        var hexRgbaRegex = /^#[a-fA-F0-9]{8}$/;
        var reducedHexRegex = /^#[a-fA-F0-9]{3}$/;
        var reducedRgbaHexRegex = /^#[a-fA-F0-9]{4}$/;
        var rgbRegex = /^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/i;
        var rgbaRegex = /^rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/i;
        var hslRegex = /^hsl\(\s*(\d{0,3}[.]?[0-9]+)\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i;
        var hslaRegex = /^hsla\(\s*(\d{0,3}[.]?[0-9]+)\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/i;
        /**
         * Returns an RgbColor or RgbaColor object. This utility function is only useful
         * if want to extract a color component. With the color util `toColorString` you
         * can convert a RgbColor or RgbaColor object back to a string.
         *
         * @example
         * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1
         * const color1 = parseToRgb('rgb(255, 0, 0)');
         * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2
         * const color2 = parseToRgb('hsla(210, 10%, 40%, 0.75)');
         */

        function parseToRgb(color) {
          if (typeof color !== 'string') {
            throw new PolishedError(3);
          }

          var normalizedColor = nameToHex(color);

          if (normalizedColor.match(hexRegex)) {
            return {
              red: parseInt('' + normalizedColor[1] + normalizedColor[2], 16),
              green: parseInt('' + normalizedColor[3] + normalizedColor[4], 16),
              blue: parseInt('' + normalizedColor[5] + normalizedColor[6], 16),
            };
          }

          if (normalizedColor.match(hexRgbaRegex)) {
            var alpha = parseFloat(
              (parseInt('' + normalizedColor[7] + normalizedColor[8], 16) / 255).toFixed(2)
            );
            return {
              red: parseInt('' + normalizedColor[1] + normalizedColor[2], 16),
              green: parseInt('' + normalizedColor[3] + normalizedColor[4], 16),
              blue: parseInt('' + normalizedColor[5] + normalizedColor[6], 16),
              alpha: alpha,
            };
          }

          if (normalizedColor.match(reducedHexRegex)) {
            return {
              red: parseInt('' + normalizedColor[1] + normalizedColor[1], 16),
              green: parseInt('' + normalizedColor[2] + normalizedColor[2], 16),
              blue: parseInt('' + normalizedColor[3] + normalizedColor[3], 16),
            };
          }

          if (normalizedColor.match(reducedRgbaHexRegex)) {
            var _alpha = parseFloat(
              (parseInt('' + normalizedColor[4] + normalizedColor[4], 16) / 255).toFixed(2)
            );

            return {
              red: parseInt('' + normalizedColor[1] + normalizedColor[1], 16),
              green: parseInt('' + normalizedColor[2] + normalizedColor[2], 16),
              blue: parseInt('' + normalizedColor[3] + normalizedColor[3], 16),
              alpha: _alpha,
            };
          }

          var rgbMatched = rgbRegex.exec(normalizedColor);

          if (rgbMatched) {
            return {
              red: parseInt('' + rgbMatched[1], 10),
              green: parseInt('' + rgbMatched[2], 10),
              blue: parseInt('' + rgbMatched[3], 10),
            };
          }

          var rgbaMatched = rgbaRegex.exec(normalizedColor);

          if (rgbaMatched) {
            return {
              red: parseInt('' + rgbaMatched[1], 10),
              green: parseInt('' + rgbaMatched[2], 10),
              blue: parseInt('' + rgbaMatched[3], 10),
              alpha: parseFloat('' + rgbaMatched[4]),
            };
          }

          var hslMatched = hslRegex.exec(normalizedColor);

          if (hslMatched) {
            var hue = parseInt('' + hslMatched[1], 10);
            var saturation = parseInt('' + hslMatched[2], 10) / 100;
            var lightness = parseInt('' + hslMatched[3], 10) / 100;
            var rgbColorString = 'rgb(' + hslToRgb(hue, saturation, lightness) + ')';
            var hslRgbMatched = rgbRegex.exec(rgbColorString);

            if (!hslRgbMatched) {
              throw new PolishedError(4, normalizedColor, rgbColorString);
            }

            return {
              red: parseInt('' + hslRgbMatched[1], 10),
              green: parseInt('' + hslRgbMatched[2], 10),
              blue: parseInt('' + hslRgbMatched[3], 10),
            };
          }

          var hslaMatched = hslaRegex.exec(normalizedColor);

          if (hslaMatched) {
            var _hue = parseInt('' + hslaMatched[1], 10);

            var _saturation = parseInt('' + hslaMatched[2], 10) / 100;

            var _lightness = parseInt('' + hslaMatched[3], 10) / 100;

            var _rgbColorString = 'rgb(' + hslToRgb(_hue, _saturation, _lightness) + ')';

            var _hslRgbMatched = rgbRegex.exec(_rgbColorString);

            if (!_hslRgbMatched) {
              throw new PolishedError(4, normalizedColor, _rgbColorString);
            }

            return {
              red: parseInt('' + _hslRgbMatched[1], 10),
              green: parseInt('' + _hslRgbMatched[2], 10),
              blue: parseInt('' + _hslRgbMatched[3], 10),
              alpha: parseFloat('' + hslaMatched[4]),
            };
          }

          throw new PolishedError(5);
        }

        function rgbToHsl(color) {
          // make sure rgb are contained in a set of [0, 255]
          var red = color.red / 255;
          var green = color.green / 255;
          var blue = color.blue / 255;
          var max = Math.max(red, green, blue);
          var min = Math.min(red, green, blue);
          var lightness = (max + min) / 2;

          if (max === min) {
            // achromatic
            if (color.alpha !== undefined) {
              return {
                hue: 0,
                saturation: 0,
                lightness: lightness,
                alpha: color.alpha,
              };
            } else {
              return {
                hue: 0,
                saturation: 0,
                lightness: lightness,
              };
            }
          }

          var hue;
          var delta = max - min;
          var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);

          switch (max) {
            case red:
              hue = (green - blue) / delta + (green < blue ? 6 : 0);
              break;

            case green:
              hue = (blue - red) / delta + 2;
              break;

            default:
              // blue case
              hue = (red - green) / delta + 4;
              break;
          }

          hue *= 60;

          if (color.alpha !== undefined) {
            return {
              hue: hue,
              saturation: saturation,
              lightness: lightness,
              alpha: color.alpha,
            };
          }

          return {
            hue: hue,
            saturation: saturation,
            lightness: lightness,
          };
        }

        /**
         * Returns an HslColor or HslaColor object. This utility function is only useful
         * if want to extract a color component. With the color util `toColorString` you
         * can convert a HslColor or HslaColor object back to a string.
         *
         * @example
         * // Assigns `{ hue: 0, saturation: 1, lightness: 0.5 }` to color1
         * const color1 = parseToHsl('rgb(255, 0, 0)');
         * // Assigns `{ hue: 128, saturation: 1, lightness: 0.5, alpha: 0.75 }` to color2
         * const color2 = parseToHsl('hsla(128, 100%, 50%, 0.75)');
         */
        function parseToHsl(color) {
          // Note: At a later stage we can optimize this function as right now a hsl
          // color would be parsed converted to rgb values and converted back to hsl.
          return rgbToHsl(parseToRgb(color));
        }

        /**
         * Reduces hex values if possible e.g. #ff8866 to #f86
         * @private
         */
        var reduceHexValue = function reduceHexValue(value) {
          if (
            value.length === 7 &&
            value[1] === value[2] &&
            value[3] === value[4] &&
            value[5] === value[6]
          ) {
            return '#' + value[1] + value[3] + value[5];
          }

          return value;
        };

        function numberToHex(value) {
          var hex = value.toString(16);
          return hex.length === 1 ? '0' + hex : hex;
        }

        function colorToHex(color) {
          return numberToHex(Math.round(color * 255));
        }

        function convertToHex(red, green, blue) {
          return reduceHexValue('#' + colorToHex(red) + colorToHex(green) + colorToHex(blue));
        }

        function hslToHex(hue, saturation, lightness) {
          return hslToRgb(hue, saturation, lightness, convertToHex);
        }

        /**
         * Returns a string value for the color. The returned result is the smallest possible hex notation.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: hsl(359, 0.75, 0.4),
         *   background: hsl({ hue: 360, saturation: 0.75, lightness: 0.4 }),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${hsl(359, 0.75, 0.4)};
         *   background: ${hsl({ hue: 360, saturation: 0.75, lightness: 0.4 })};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "#b3191c";
         *   background: "#b3191c";
         * }
         */
        function hsl(value, saturation, lightness) {
          if (
            typeof value === 'number' &&
            typeof saturation === 'number' &&
            typeof lightness === 'number'
          ) {
            return hslToHex(value, saturation, lightness);
          } else if (
            typeof value === 'object' &&
            saturation === undefined &&
            lightness === undefined
          ) {
            return hslToHex(value.hue, value.saturation, value.lightness);
          }

          throw new PolishedError(1);
        }

        /**
         * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: hsla(359, 0.75, 0.4, 0.7),
         *   background: hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 }),
         *   background: hsla(359, 0.75, 0.4, 1),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${hsla(359, 0.75, 0.4, 0.7)};
         *   background: ${hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 })};
         *   background: ${hsla(359, 0.75, 0.4, 1)};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "rgba(179,25,28,0.7)";
         *   background: "rgba(179,25,28,0.7)";
         *   background: "#b3191c";
         * }
         */
        function hsla(value, saturation, lightness, alpha) {
          if (
            typeof value === 'number' &&
            typeof saturation === 'number' &&
            typeof lightness === 'number' &&
            typeof alpha === 'number'
          ) {
            return alpha >= 1
              ? hslToHex(value, saturation, lightness)
              : 'rgba(' + hslToRgb(value, saturation, lightness) + ',' + alpha + ')';
          } else if (
            typeof value === 'object' &&
            saturation === undefined &&
            lightness === undefined &&
            alpha === undefined
          ) {
            return value.alpha >= 1
              ? hslToHex(value.hue, value.saturation, value.lightness)
              : 'rgba(' +
                  hslToRgb(value.hue, value.saturation, value.lightness) +
                  ',' +
                  value.alpha +
                  ')';
          }

          throw new PolishedError(2);
        }

        /**
         * Returns a string value for the color. The returned result is the smallest possible hex notation.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: rgb(255, 205, 100),
         *   background: rgb({ red: 255, green: 205, blue: 100 }),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${rgb(255, 205, 100)};
         *   background: ${rgb({ red: 255, green: 205, blue: 100 })};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "#ffcd64";
         *   background: "#ffcd64";
         * }
         */
        function rgb(value, green, blue) {
          if (typeof value === 'number' && typeof green === 'number' && typeof blue === 'number') {
            return reduceHexValue(
              '#' + numberToHex(value) + numberToHex(green) + numberToHex(blue)
            );
          } else if (typeof value === 'object' && green === undefined && blue === undefined) {
            return reduceHexValue(
              '#' + numberToHex(value.red) + numberToHex(value.green) + numberToHex(value.blue)
            );
          }

          throw new PolishedError(6);
        }

        /**
         * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.
         *
         * Can also be used to fade a color by passing a hex value or named CSS color along with an alpha value.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: rgba(255, 205, 100, 0.7),
         *   background: rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 }),
         *   background: rgba(255, 205, 100, 1),
         *   background: rgba('#ffffff', 0.4),
         *   background: rgba('black', 0.7),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${rgba(255, 205, 100, 0.7)};
         *   background: ${rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 })};
         *   background: ${rgba(255, 205, 100, 1)};
         *   background: ${rgba('#ffffff', 0.4)};
         *   background: ${rgba('black', 0.7)};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "rgba(255,205,100,0.7)";
         *   background: "rgba(255,205,100,0.7)";
         *   background: "#ffcd64";
         *   background: "rgba(255,255,255,0.4)";
         *   background: "rgba(0,0,0,0.7)";
         * }
         */
        function rgba(firstValue, secondValue, thirdValue, fourthValue) {
          if (typeof firstValue === 'string' && typeof secondValue === 'number') {
            var rgbValue = parseToRgb(firstValue);
            return (
              'rgba(' +
              rgbValue.red +
              ',' +
              rgbValue.green +
              ',' +
              rgbValue.blue +
              ',' +
              secondValue +
              ')'
            );
          } else if (
            typeof firstValue === 'number' &&
            typeof secondValue === 'number' &&
            typeof thirdValue === 'number' &&
            typeof fourthValue === 'number'
          ) {
            return fourthValue >= 1
              ? rgb(firstValue, secondValue, thirdValue)
              : 'rgba(' +
                  firstValue +
                  ',' +
                  secondValue +
                  ',' +
                  thirdValue +
                  ',' +
                  fourthValue +
                  ')';
          } else if (
            typeof firstValue === 'object' &&
            secondValue === undefined &&
            thirdValue === undefined &&
            fourthValue === undefined
          ) {
            return firstValue.alpha >= 1
              ? rgb(firstValue.red, firstValue.green, firstValue.blue)
              : 'rgba(' +
                  firstValue.red +
                  ',' +
                  firstValue.green +
                  ',' +
                  firstValue.blue +
                  ',' +
                  firstValue.alpha +
                  ')';
          }

          throw new PolishedError(7);
        }

        var isRgb = function isRgb(color) {
          return (
            typeof color.red === 'number' &&
            typeof color.green === 'number' &&
            typeof color.blue === 'number' &&
            (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined')
          );
        };

        var isRgba = function isRgba(color) {
          return (
            typeof color.red === 'number' &&
            typeof color.green === 'number' &&
            typeof color.blue === 'number' &&
            typeof color.alpha === 'number'
          );
        };

        var isHsl = function isHsl(color) {
          return (
            typeof color.hue === 'number' &&
            typeof color.saturation === 'number' &&
            typeof color.lightness === 'number' &&
            (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined')
          );
        };

        var isHsla = function isHsla(color) {
          return (
            typeof color.hue === 'number' &&
            typeof color.saturation === 'number' &&
            typeof color.lightness === 'number' &&
            typeof color.alpha === 'number'
          );
        };
        /**
         * Converts a RgbColor, RgbaColor, HslColor or HslaColor object to a color string.
         * This util is useful in case you only know on runtime which color object is
         * used. Otherwise we recommend to rely on `rgb`, `rgba`, `hsl` or `hsla`.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: toColorString({ red: 255, green: 205, blue: 100 }),
         *   background: toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 }),
         *   background: toColorString({ hue: 240, saturation: 1, lightness: 0.5 }),
         *   background: toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 }),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${toColorString({ red: 255, green: 205, blue: 100 })};
         *   background: ${toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 })};
         *   background: ${toColorString({ hue: 240, saturation: 1, lightness: 0.5 })};
         *   background: ${toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 })};
         * `
         *
         * // CSS in JS Output
         * element {
         *   background: "#ffcd64";
         *   background: "rgba(255,205,100,0.72)";
         *   background: "#00f";
         *   background: "rgba(179,25,25,0.72)";
         * }
         */

        function toColorString(color) {
          if (typeof color !== 'object') throw new PolishedError(8);
          if (isRgba(color)) return rgba(color);
          if (isRgb(color)) return rgb(color);
          if (isHsla(color)) return hsla(color);
          if (isHsl(color)) return hsl(color);
          throw new PolishedError(8);
        }

        // Type definitions taken from https://github.com/gcanti/flow-static-land/blob/master/src/Fun.js
        // eslint-disable-next-line no-unused-vars
        // eslint-disable-next-line no-unused-vars
        // eslint-disable-next-line no-redeclare
        function curried(f, length, acc) {
          return function fn() {
            // eslint-disable-next-line prefer-rest-params
            var combined = acc.concat(Array.prototype.slice.call(arguments));
            return combined.length >= length
              ? f.apply(this, combined)
              : curried(f, length, combined);
          };
        } // eslint-disable-next-line no-redeclare

        function curry(f) {
          // eslint-disable-line no-redeclare
          return curried(f, f.length, []);
        }

        /**
         * Changes the hue of the color. Hue is a number between 0 to 360. The first
         * argument for adjustHue is the amount of degrees the color is rotated around
         * the color wheel, always producing a positive hue value.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: adjustHue(180, '#448'),
         *   background: adjustHue('180', 'rgba(101,100,205,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${adjustHue(180, '#448')};
         *   background: ${adjustHue('180', 'rgba(101,100,205,0.7)')};
         * `
         *
         * // CSS in JS Output
         * element {
         *   background: "#888844";
         *   background: "rgba(136,136,68,0.7)";
         * }
         */

        function adjustHue(degree, color) {
  if (color === 'transparent') return color;
  var hslColor = parseToHsl(color);
  return toColorString(Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, hslColor, {
    hue: hslColor.hue + parseFloat(degree)
  }));
} // prettier-ignore

        var curriedAdjustHue = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(
          adjustHue
        );

        /**
         * Returns the complement of the provided color. This is identical to adjustHue(180, <color>).
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: complement('#448'),
         *   background: complement('rgba(204,205,100,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${complement('#448')};
         *   background: ${complement('rgba(204,205,100,0.7)')};
         * `
         *
         * // CSS in JS Output
         * element {
         *   background: "#884";
         *   background: "rgba(153,153,153,0.7)";
         * }
         */

        function complement(color) {
          if (color === 'transparent') return color;
          var hslColor = parseToHsl(color);
          return toColorString(
            Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
              {},
              hslColor,
              {
                hue: (hslColor.hue + 180) % 360,
              }
            )
          );
        }

        function guard(lowerBoundary, upperBoundary, value) {
          return Math.max(lowerBoundary, Math.min(upperBoundary, value));
        }

        /**
         * Returns a string value for the darkened color.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: darken(0.2, '#FFCD64'),
         *   background: darken('0.2', 'rgba(255,205,100,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${darken(0.2, '#FFCD64')};
         *   background: ${darken('0.2', 'rgba(255,205,100,0.7)')};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "#ffbd31";
         *   background: "rgba(255,189,49,0.7)";
         * }
         */

        function darken(amount, color) {
  if (color === 'transparent') return color;
  var hslColor = parseToHsl(color);
  return toColorString(Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, hslColor, {
    lightness: guard(0, 1, hslColor.lightness - parseFloat(amount))
  }));
} // prettier-ignore

        var curriedDarken = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(darken);

        /**
         * Decreases the intensity of a color. Its range is between 0 to 1. The first
         * argument of the desaturate function is the amount by how much the color
         * intensity should be decreased.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: desaturate(0.2, '#CCCD64'),
         *   background: desaturate('0.2', 'rgba(204,205,100,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${desaturate(0.2, '#CCCD64')};
         *   background: ${desaturate('0.2', 'rgba(204,205,100,0.7)')};
         * `
         *
         * // CSS in JS Output
         * element {
         *   background: "#b8b979";
         *   background: "rgba(184,185,121,0.7)";
         * }
         */

        function desaturate(amount, color) {
  if (color === 'transparent') return color;
  var hslColor = parseToHsl(color);
  return toColorString(Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, hslColor, {
    saturation: guard(0, 1, hslColor.saturation - parseFloat(amount))
  }));
} // prettier-ignore

        var curriedDesaturate = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(
          desaturate
        );

        /**
         * Returns a number (float) representing the luminance of a color.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff',
         *   background: getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?
         *                             'rgba(58, 133, 255, 1)' :
         *                             'rgba(255, 57, 149, 1)',
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff'};
         *   background: ${getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?
         *                             'rgba(58, 133, 255, 1)' :
         *                             'rgba(255, 57, 149, 1)'};
         *
         * // CSS in JS Output
         *
         * div {
         *   background: "#CCCD64";
         *   background: "rgba(58, 133, 255, 1)";
         * }
         */

        function getLuminance(color) {
          if (color === 'transparent') return 0;
          var rgbColor = parseToRgb(color);

          var _Object$keys$map = Object.keys(rgbColor).map(function (key) {
              var channel = rgbColor[key] / 255;
              return channel <= 0.03928
                ? channel / 12.92
                : Math.pow((channel + 0.055) / 1.055, 2.4);
            }),
            r = _Object$keys$map[0],
            g = _Object$keys$map[1],
            b = _Object$keys$map[2];

          return parseFloat((0.2126 * r + 0.7152 * g + 0.0722 * b).toFixed(3));
        }

        /**
         * Returns the contrast ratio between two colors based on
         * [W3's recommended equation for calculating contrast](http://www.w3.org/TR/WCAG20/#contrast-ratiodef).
         *
         * @example
         * const contrastRatio = getContrast('#444', '#fff');
         */

        function getContrast(color1, color2) {
          var luminance1 = getLuminance(color1);
          var luminance2 = getLuminance(color2);
          return parseFloat(
            (luminance1 > luminance2
              ? (luminance1 + 0.05) / (luminance2 + 0.05)
              : (luminance2 + 0.05) / (luminance1 + 0.05)
            ).toFixed(2)
          );
        }

        /**
         * Converts the color to a grayscale, by reducing its saturation to 0.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: grayscale('#CCCD64'),
         *   background: grayscale('rgba(204,205,100,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${grayscale('#CCCD64')};
         *   background: ${grayscale('rgba(204,205,100,0.7)')};
         * `
         *
         * // CSS in JS Output
         * element {
         *   background: "#999";
         *   background: "rgba(153,153,153,0.7)";
         * }
         */

        function grayscale(color) {
          if (color === 'transparent') return color;
          return toColorString(
            Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
              {},
              parseToHsl(color),
              {
                saturation: 0,
              }
            )
          );
        }

        /**
         * Converts a HslColor or HslaColor object to a color string.
         * This util is useful in case you only know on runtime which color object is
         * used. Otherwise we recommend to rely on `hsl` or `hsla`.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: hslToColorString({ hue: 240, saturation: 1, lightness: 0.5 }),
         *   background: hslToColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 }),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${hslToColorString({ hue: 240, saturation: 1, lightness: 0.5 })};
         *   background: ${hslToColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 })};
         * `
         *
         * // CSS in JS Output
         * element {
         *   background: "#00f";
         *   background: "rgba(179,25,25,0.72)";
         * }
         */
        function hslToColorString(color) {
          if (
            typeof color === 'object' &&
            typeof color.hue === 'number' &&
            typeof color.saturation === 'number' &&
            typeof color.lightness === 'number'
          ) {
            if (color.alpha && typeof color.alpha === 'number') {
              return hsla({
                hue: color.hue,
                saturation: color.saturation,
                lightness: color.lightness,
                alpha: color.alpha,
              });
            }

            return hsl({
              hue: color.hue,
              saturation: color.saturation,
              lightness: color.lightness,
            });
          }

          throw new PolishedError(45);
        }

        /**
         * Inverts the red, green and blue values of a color.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: invert('#CCCD64'),
         *   background: invert('rgba(101,100,205,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${invert('#CCCD64')};
         *   background: ${invert('rgba(101,100,205,0.7)')};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "#33329b";
         *   background: "rgba(154,155,50,0.7)";
         * }
         */

        function invert(color) {
          if (color === 'transparent') return color; // parse color string to rgb

          var value = parseToRgb(color);
          return toColorString(
            Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
              {},
              value,
              {
                red: 255 - value.red,
                green: 255 - value.green,
                blue: 255 - value.blue,
              }
            )
          );
        }

        /**
         * Returns a string value for the lightened color.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: lighten(0.2, '#CCCD64'),
         *   background: lighten('0.2', 'rgba(204,205,100,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${lighten(0.2, '#FFCD64')};
         *   background: ${lighten('0.2', 'rgba(204,205,100,0.7)')};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "#e5e6b1";
         *   background: "rgba(229,230,177,0.7)";
         * }
         */

        function lighten(amount, color) {
  if (color === 'transparent') return color;
  var hslColor = parseToHsl(color);
  return toColorString(Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, hslColor, {
    lightness: guard(0, 1, hslColor.lightness + parseFloat(amount))
  }));
} // prettier-ignore

        var curriedLighten = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(lighten);

        /**
         * Determines which contrast guidelines have been met for two colors.
         * Based on the [contrast calculations recommended by W3](https://www.w3.org/WAI/WCAG21/Understanding/contrast-enhanced.html).
         *
         * @example
         * const scores = meetsContrastGuidelines('#444', '#fff');
         */
        function meetsContrastGuidelines(color1, color2) {
          var contrastRatio = getContrast(color1, color2);
          return {
            AA: contrastRatio >= 4.5,
            AALarge: contrastRatio >= 3,
            AAA: contrastRatio >= 7,
            AAALarge: contrastRatio >= 4.5,
          };
        }

        /**
         * Mixes the two provided colors together by calculating the average of each of the RGB components weighted to the first color by the provided weight.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: mix(0.5, '#f00', '#00f')
         *   background: mix(0.25, '#f00', '#00f')
         *   background: mix('0.5', 'rgba(255, 0, 0, 0.5)', '#00f')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${mix(0.5, '#f00', '#00f')};
         *   background: ${mix(0.25, '#f00', '#00f')};
         *   background: ${mix('0.5', 'rgba(255, 0, 0, 0.5)', '#00f')};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "#7f007f";
         *   background: "#3f00bf";
         *   background: "rgba(63, 0, 191, 0.75)";
         * }
         */

        function mix(weight, color, otherColor) {
  if (color === 'transparent') return otherColor;
  if (otherColor === 'transparent') return color;
  if (weight === 0) return otherColor;
  var parsedColor1 = parseToRgb(color);

  var color1 = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, parsedColor1, {
    alpha: typeof parsedColor1.alpha === 'number' ? parsedColor1.alpha : 1
  });

  var parsedColor2 = parseToRgb(otherColor);

  var color2 = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, parsedColor2, {
    alpha: typeof parsedColor2.alpha === 'number' ? parsedColor2.alpha : 1
  }); // The formula is copied from the original Sass implementation:
  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method


  var alphaDelta = color1.alpha - color2.alpha;
  var x = parseFloat(weight) * 2 - 1;
  var y = x * alphaDelta === -1 ? x : x + alphaDelta;
  var z = 1 + x * alphaDelta;
  var weight1 = (y / z + 1) / 2.0;
  var weight2 = 1 - weight1;
  var mixedColor = {
    red: Math.floor(color1.red * weight1 + color2.red * weight2),
    green: Math.floor(color1.green * weight1 + color2.green * weight2),
    blue: Math.floor(color1.blue * weight1 + color2.blue * weight2),
    alpha: color1.alpha * (parseFloat(weight) / 1.0) + color2.alpha * (1 - parseFloat(weight) / 1.0)
  };
  return rgba(mixedColor);
} // prettier-ignore

        var curriedMix = /*#__PURE__*/ curry/*:: :<number | string, string, string, string> */(mix);

        /**
         * Increases the opacity of a color. Its range for the amount is between 0 to 1.
         *
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: opacify(0.1, 'rgba(255, 255, 255, 0.9)');
         *   background: opacify(0.2, 'hsla(0, 0%, 100%, 0.5)'),
         *   background: opacify('0.5', 'rgba(255, 0, 0, 0.2)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${opacify(0.1, 'rgba(255, 255, 255, 0.9)')};
         *   background: ${opacify(0.2, 'hsla(0, 0%, 100%, 0.5)')},
         *   background: ${opacify('0.5', 'rgba(255, 0, 0, 0.2)')},
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "#fff";
         *   background: "rgba(255,255,255,0.7)";
         *   background: "rgba(255,0,0,0.7)";
         * }
         */

        function opacify(amount, color) {
  if (color === 'transparent') return color;
  var parsedColor = parseToRgb(color);
  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;

  var colorWithAlpha = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, parsedColor, {
    alpha: guard(0, 1, (alpha * 100 + parseFloat(amount) * 100) / 100)
  });

  return rgba(colorWithAlpha);
} // prettier-ignore

        var curriedOpacify = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(opacify);

        var defaultLightReturnColor = '#000';
        var defaultDarkReturnColor = '#fff';
        /**
         * Returns black or white (or optional light and dark return colors) for best
         * contrast depending on the luminosity of the given color.
         * When passing custom return colors, set `strict` to `true` to ensure that the
         * return color always meets or exceeds WCAG level AA or greater. If this test
         * fails, the default return color (black or white) is returned in place of the
         * custom return color.
         *
         * Follows [W3C specs for readability](https://www.w3.org/TR/WCAG20-TECHS/G18.html).
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   color: readableColor('#000'),
         *   color: readableColor('black', '#001', '#ff8'),
         *   color: readableColor('white', '#001', '#ff8'),
         *   color: readableColor('red', '#333', '#ddd', true)
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   color: ${readableColor('#000')};
         *   color: ${readableColor('black', '#001', '#ff8')};
         *   color: ${readableColor('white', '#001', '#ff8')};
         *   color: ${readableColor('red', '#333', '#ddd', true)};
         * `
         *
         * // CSS in JS Output
         * element {
         *   color: "#fff";
         *   color: "#ff8";
         *   color: "#001";
         *   color: "#000";
         * }
         */

        function readableColor(color, lightReturnColor, darkReturnColor, strict) {
          if (lightReturnColor === void 0) {
            lightReturnColor = defaultLightReturnColor;
          }

          if (darkReturnColor === void 0) {
            darkReturnColor = defaultDarkReturnColor;
          }

          if (strict === void 0) {
            strict = false;
          }

          var isLightColor = getLuminance(color) > 0.179;
          var preferredReturnColor = isLightColor ? lightReturnColor : darkReturnColor; // TODO: Make `strict` the default behaviour in the next major release.
          // Without `strict`, this may return a color that does not meet WCAG AA.

          if (!strict || getContrast(color, preferredReturnColor) >= 4.5) {
            return preferredReturnColor;
          }

          return isLightColor ? defaultLightReturnColor : defaultDarkReturnColor;
        }

        /**
         * Converts a RgbColor or RgbaColor object to a color string.
         * This util is useful in case you only know on runtime which color object is
         * used. Otherwise we recommend to rely on `rgb` or `rgba`.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: rgbToColorString({ red: 255, green: 205, blue: 100 }),
         *   background: rgbToColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 }),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${rgbToColorString({ red: 255, green: 205, blue: 100 })};
         *   background: ${rgbToColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 })};
         * `
         *
         * // CSS in JS Output
         * element {
         *   background: "#ffcd64";
         *   background: "rgba(255,205,100,0.72)";
         * }
         */
        function rgbToColorString(color) {
          if (
            typeof color === 'object' &&
            typeof color.red === 'number' &&
            typeof color.green === 'number' &&
            typeof color.blue === 'number'
          ) {
            if (typeof color.alpha === 'number') {
              return rgba({
                red: color.red,
                green: color.green,
                blue: color.blue,
                alpha: color.alpha,
              });
            }

            return rgb({
              red: color.red,
              green: color.green,
              blue: color.blue,
            });
          }

          throw new PolishedError(46);
        }

        /**
         * Increases the intensity of a color. Its range is between 0 to 1. The first
         * argument of the saturate function is the amount by how much the color
         * intensity should be increased.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: saturate(0.2, '#CCCD64'),
         *   background: saturate('0.2', 'rgba(204,205,100,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${saturate(0.2, '#FFCD64')};
         *   background: ${saturate('0.2', 'rgba(204,205,100,0.7)')};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "#e0e250";
         *   background: "rgba(224,226,80,0.7)";
         * }
         */

        function saturate(amount, color) {
  if (color === 'transparent') return color;
  var hslColor = parseToHsl(color);
  return toColorString(Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, hslColor, {
    saturation: guard(0, 1, hslColor.saturation + parseFloat(amount))
  }));
} // prettier-ignore

        var curriedSaturate = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(
          saturate
        );

        /**
         * Sets the hue of a color to the provided value. The hue range can be
         * from 0 and 359.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: setHue(42, '#CCCD64'),
         *   background: setHue('244', 'rgba(204,205,100,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${setHue(42, '#CCCD64')};
         *   background: ${setHue('244', 'rgba(204,205,100,0.7)')};
         * `
         *
         * // CSS in JS Output
         * element {
         *   background: "#cdae64";
         *   background: "rgba(107,100,205,0.7)";
         * }
         */

        function setHue(hue, color) {
  if (color === 'transparent') return color;
  return toColorString(Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, parseToHsl(color), {
    hue: parseFloat(hue)
  }));
} // prettier-ignore

        var curriedSetHue = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(setHue);

        /**
         * Sets the lightness of a color to the provided value. The lightness range can be
         * from 0 and 1.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: setLightness(0.2, '#CCCD64'),
         *   background: setLightness('0.75', 'rgba(204,205,100,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${setLightness(0.2, '#CCCD64')};
         *   background: ${setLightness('0.75', 'rgba(204,205,100,0.7)')};
         * `
         *
         * // CSS in JS Output
         * element {
         *   background: "#4d4d19";
         *   background: "rgba(223,224,159,0.7)";
         * }
         */

        function setLightness(lightness, color) {
  if (color === 'transparent') return color;
  return toColorString(Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, parseToHsl(color), {
    lightness: parseFloat(lightness)
  }));
} // prettier-ignore

        var curriedSetLightness = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(
          setLightness
        );

        /**
         * Sets the saturation of a color to the provided value. The saturation range can be
         * from 0 and 1.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: setSaturation(0.2, '#CCCD64'),
         *   background: setSaturation('0.75', 'rgba(204,205,100,0.7)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${setSaturation(0.2, '#CCCD64')};
         *   background: ${setSaturation('0.75', 'rgba(204,205,100,0.7)')};
         * `
         *
         * // CSS in JS Output
         * element {
         *   background: "#adad84";
         *   background: "rgba(228,229,76,0.7)";
         * }
         */

        function setSaturation(saturation, color) {
  if (color === 'transparent') return color;
  return toColorString(Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, parseToHsl(color), {
    saturation: parseFloat(saturation)
  }));
} // prettier-ignore

        var curriedSetSaturation = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(
          setSaturation
        );

        /**
         * Shades a color by mixing it with black. `shade` can produce
         * hue shifts, where as `darken` manipulates the luminance channel and therefore
         * doesn't produce hue shifts.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: shade(0.25, '#00f')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${shade(0.25, '#00f')};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "#00003f";
         * }
         */

        function shade(percentage, color) {
  if (color === 'transparent') return color;
  return curriedMix(parseFloat(percentage), 'rgb(0, 0, 0)', color);
} // prettier-ignore

        var curriedShade = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(shade);

        /**
         * Tints a color by mixing it with white. `tint` can produce
         * hue shifts, where as `lighten` manipulates the luminance channel and therefore
         * doesn't produce hue shifts.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: tint(0.25, '#00f')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${tint(0.25, '#00f')};
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "#bfbfff";
         * }
         */

        function tint(percentage, color) {
  if (color === 'transparent') return color;
  return curriedMix(parseFloat(percentage), 'rgb(255, 255, 255)', color);
} // prettier-ignore

        var curriedTint = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(tint);

        /**
         * Decreases the opacity of a color. Its range for the amount is between 0 to 1.
         *
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   background: transparentize(0.1, '#fff');
         *   background: transparentize(0.2, 'hsl(0, 0%, 100%)'),
         *   background: transparentize('0.5', 'rgba(255, 0, 0, 0.8)'),
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   background: ${transparentize(0.1, '#fff')};
         *   background: ${transparentize(0.2, 'hsl(0, 0%, 100%)')},
         *   background: ${transparentize('0.5', 'rgba(255, 0, 0, 0.8)')},
         * `
         *
         * // CSS in JS Output
         *
         * element {
         *   background: "rgba(255,255,255,0.9)";
         *   background: "rgba(255,255,255,0.8)";
         *   background: "rgba(255,0,0,0.3)";
         * }
         */

        function transparentize(amount, color) {
  if (color === 'transparent') return color;
  var parsedColor = parseToRgb(color);
  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;

  var colorWithAlpha = Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, parsedColor, {
    alpha: guard(0, 1, (alpha * 100 - parseFloat(amount) * 100) / 100)
  });

  return rgba(colorWithAlpha);
} // prettier-ignore

        var curriedTransparentize = /*#__PURE__*/ curry/*:: :<number | string, string, string> */(
          transparentize
        );

        /**
         * Shorthand for easily setting the animation property. Allows either multiple arrays with animations
         * or a single animation spread over the arguments.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${animation(['rotate', '1s', 'ease-in-out'], ['colorchange', '2s'])}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'animation': 'rotate 1s ease-in-out, colorchange 2s'
         * }
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...animation('rotate', '1s', 'ease-in-out')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${animation('rotate', '1s', 'ease-in-out')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'animation': 'rotate 1s ease-in-out'
         * }
         */
        function animation() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          // Allow single or multiple animations passed
          var multiMode = Array.isArray(args[0]);

          if (!multiMode && args.length > 8) {
            throw new PolishedError(64);
          }

          var code = args
            .map(function (arg) {
              if ((multiMode && !Array.isArray(arg)) || (!multiMode && Array.isArray(arg))) {
                throw new PolishedError(65);
              }

              if (Array.isArray(arg) && arg.length > 8) {
                throw new PolishedError(66);
              }

              return Array.isArray(arg) ? arg.join(' ') : arg;
            })
            .join(', ');
          return {
            animation: code,
          };
        }

        /**
         * Shorthand that accepts any number of backgroundImage values as parameters for creating a single background statement.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...backgroundImages('url("/image/background.jpg")', 'linear-gradient(red, green)')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${backgroundImages('url("/image/background.jpg")', 'linear-gradient(red, green)')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'backgroundImage': 'url("/image/background.jpg"), linear-gradient(red, green)'
         * }
         */
        function backgroundImages() {
          for (
            var _len = arguments.length, properties = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            properties[_key] = arguments[_key];
          }

          return {
            backgroundImage: properties.join(', '),
          };
        }

        /**
         * Shorthand that accepts any number of background values as parameters for creating a single background statement.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...backgrounds('url("/image/background.jpg")', 'linear-gradient(red, green)', 'center no-repeat')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${backgrounds('url("/image/background.jpg")', 'linear-gradient(red, green)', 'center no-repeat')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'background': 'url("/image/background.jpg"), linear-gradient(red, green), center no-repeat'
         * }
         */
        function backgrounds() {
          for (
            var _len = arguments.length, properties = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            properties[_key] = arguments[_key];
          }

          return {
            background: properties.join(', '),
          };
        }

        var sideMap = ['top', 'right', 'bottom', 'left'];
        /**
         * Shorthand for the border property that splits out individual properties for use with tools like Fela and Styletron. A side keyword can optionally be passed to target only one side's border properties.
         *
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...border('1px', 'solid', 'red')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${border('1px', 'solid', 'red')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'borderColor': 'red',
         *   'borderStyle': 'solid',
         *   'borderWidth': `1px`,
         * }
         *
         * // Styles as object usage
         * const styles = {
         *   ...border('top', '1px', 'solid', 'red')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${border('top', '1px', 'solid', 'red')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'borderTopColor': 'red',
         *   'borderTopStyle': 'solid',
         *   'borderTopWidth': `1px`,
         * }
         */

        function border(sideKeyword) {
          for (
            var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
            _key < _len;
            _key++
          ) {
            values[_key - 1] = arguments[_key];
          }

          if (typeof sideKeyword === 'string' && sideMap.indexOf(sideKeyword) >= 0) {
            var _ref;

            return (
              (_ref = {}),
              (_ref['border' + capitalizeString(sideKeyword) + 'Width'] = values[0]),
              (_ref['border' + capitalizeString(sideKeyword) + 'Style'] = values[1]),
              (_ref['border' + capitalizeString(sideKeyword) + 'Color'] = values[2]),
              _ref
            );
          } else {
            values.unshift(sideKeyword);
            return {
              borderWidth: values[0],
              borderStyle: values[1],
              borderColor: values[2],
            };
          }
        }

        /**
         * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...borderColor('red', 'green', 'blue', 'yellow')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${borderColor('red', 'green', 'blue', 'yellow')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'borderTopColor': 'red',
         *   'borderRightColor': 'green',
         *   'borderBottomColor': 'blue',
         *   'borderLeftColor': 'yellow'
         * }
         */
        function borderColor() {
          for (
            var _len = arguments.length, values = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            values[_key] = arguments[_key];
          }

          return directionalProperty.apply(void 0, ['borderColor'].concat(values));
        }

        /**
         * Shorthand that accepts a value for side and a value for radius and applies the radius value to both corners of the side.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...borderRadius('top', '5px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${borderRadius('top', '5px')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'borderTopRightRadius': '5px',
         *   'borderTopLeftRadius': '5px',
         * }
         */
        function borderRadius(side, radius) {
          var uppercaseSide = capitalizeString(side);

          if (!radius && radius !== 0) {
            throw new PolishedError(62);
          }

          if (uppercaseSide === 'Top' || uppercaseSide === 'Bottom') {
            var _ref;

            return (
              (_ref = {}),
              (_ref['border' + uppercaseSide + 'RightRadius'] = radius),
              (_ref['border' + uppercaseSide + 'LeftRadius'] = radius),
              _ref
            );
          }

          if (uppercaseSide === 'Left' || uppercaseSide === 'Right') {
            var _ref2;

            return (
              (_ref2 = {}),
              (_ref2['borderTop' + uppercaseSide + 'Radius'] = radius),
              (_ref2['borderBottom' + uppercaseSide + 'Radius'] = radius),
              _ref2
            );
          }

          throw new PolishedError(63);
        }

        /**
         * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...borderStyle('solid', 'dashed', 'dotted', 'double')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${borderStyle('solid', 'dashed', 'dotted', 'double')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'borderTopStyle': 'solid',
         *   'borderRightStyle': 'dashed',
         *   'borderBottomStyle': 'dotted',
         *   'borderLeftStyle': 'double'
         * }
         */
        function borderStyle() {
          for (
            var _len = arguments.length, values = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            values[_key] = arguments[_key];
          }

          return directionalProperty.apply(void 0, ['borderStyle'].concat(values));
        }

        /**
         * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...borderWidth('12px', '24px', '36px', '48px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${borderWidth('12px', '24px', '36px', '48px')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'borderTopWidth': '12px',
         *   'borderRightWidth': '24px',
         *   'borderBottomWidth': '36px',
         *   'borderLeftWidth': '48px'
         * }
         */
        function borderWidth() {
          for (
            var _len = arguments.length, values = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            values[_key] = arguments[_key];
          }

          return directionalProperty.apply(void 0, ['borderWidth'].concat(values));
        }

        function generateSelectors(template, state) {
          var stateSuffix = state ? ':' + state : '';
          return template(stateSuffix);
        }
        /**
         * Function helper that adds an array of states to a template of selectors. Used in textInputs and buttons.
         * @private
         */

        function statefulSelectors(states, template, stateMap) {
          if (!template) throw new PolishedError(67);
          if (states.length === 0) return generateSelectors(template, null);
          var selectors = [];

          for (var i = 0; i < states.length; i += 1) {
            if (stateMap && stateMap.indexOf(states[i]) < 0) {
              throw new PolishedError(68);
            }

            selectors.push(generateSelectors(template, states[i]));
          }

          selectors = selectors.join(',');
          return selectors;
        }

        var stateMap = [undefined, null, 'active', 'focus', 'hover'];

        function template(state) {
          return (
            'button' +
            state +
            ',\n  input[type="button"]' +
            state +
            ',\n  input[type="reset"]' +
            state +
            ',\n  input[type="submit"]' +
            state
          );
        }
        /**
         * Populates selectors that target all buttons. You can pass optional states to append to the selectors.
         * @example
         * // Styles as object usage
         * const styles = {
         *   [buttons('active')]: {
         *     'border': 'none'
         *   }
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   > ${buttons('active')} {
         *     border: none;
         *   }
         * `
         *
         * // CSS in JS Output
         *
         *  'button:active,
         *  'input[type="button"]:active,
         *  'input[type=\"reset\"]:active,
         *  'input[type=\"submit\"]:active: {
         *   'border': 'none'
         * }
         */

        function buttons() {
          for (
            var _len = arguments.length, states = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            states[_key] = arguments[_key];
          }

          return statefulSelectors(states, template, stateMap);
        }

        /**
         * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...margin('12px', '24px', '36px', '48px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${margin('12px', '24px', '36px', '48px')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'marginTop': '12px',
         *   'marginRight': '24px',
         *   'marginBottom': '36px',
         *   'marginLeft': '48px'
         * }
         */
        function margin() {
          for (
            var _len = arguments.length, values = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            values[_key] = arguments[_key];
          }

          return directionalProperty.apply(void 0, ['margin'].concat(values));
        }

        /**
         * Shorthand that accepts up to four values, including null to skip a value, and maps them to their respective directions.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...padding('12px', '24px', '36px', '48px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${padding('12px', '24px', '36px', '48px')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'paddingTop': '12px',
         *   'paddingRight': '24px',
         *   'paddingBottom': '36px',
         *   'paddingLeft': '48px'
         * }
         */
        function padding() {
          for (
            var _len = arguments.length, values = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            values[_key] = arguments[_key];
          }

          return directionalProperty.apply(void 0, ['padding'].concat(values));
        }

        var positionMap$1 = ['absolute', 'fixed', 'relative', 'static', 'sticky'];
        /**
         * Shorthand accepts up to five values, including null to skip a value, and maps them to their respective directions. The first value can optionally be a position keyword.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...position('12px', '24px', '36px', '48px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${position('12px', '24px', '36px', '48px')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'top': '12px',
         *   'right': '24px',
         *   'bottom': '36px',
         *   'left': '48px'
         * }
         *
         * // Styles as object usage
         * const styles = {
         *   ...position('absolute', '12px', '24px', '36px', '48px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${position('absolute', '12px', '24px', '36px', '48px')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'position': 'absolute',
         *   'top': '12px',
         *   'right': '24px',
         *   'bottom': '36px',
         *   'left': '48px'
         * }
         */

        function position(firstValue) {
          for (
            var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
            _key < _len;
            _key++
          ) {
            values[_key - 1] = arguments[_key];
          }

          if (positionMap$1.indexOf(firstValue) >= 0 && firstValue) {
            return Object(
              _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
            )({}, directionalProperty.apply(void 0, [''].concat(values)), {
              position: firstValue,
            });
          } else {
            return directionalProperty.apply(void 0, ['', firstValue].concat(values));
          }
        }

        /**
         * Shorthand to set the height and width properties in a single statement.
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...size('300px', '250px')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${size('300px', '250px')}
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'height': '300px',
         *   'width': '250px',
         * }
         */
        function size(height, width) {
          if (width === void 0) {
            width = height;
          }

          return {
            height: height,
            width: width,
          };
        }

        var stateMap$1 = [undefined, null, 'active', 'focus', 'hover'];

        function template$1(state) {
          return (
            'input[type="color"]' +
            state +
            ',\n    input[type="date"]' +
            state +
            ',\n    input[type="datetime"]' +
            state +
            ',\n    input[type="datetime-local"]' +
            state +
            ',\n    input[type="email"]' +
            state +
            ',\n    input[type="month"]' +
            state +
            ',\n    input[type="number"]' +
            state +
            ',\n    input[type="password"]' +
            state +
            ',\n    input[type="search"]' +
            state +
            ',\n    input[type="tel"]' +
            state +
            ',\n    input[type="text"]' +
            state +
            ',\n    input[type="time"]' +
            state +
            ',\n    input[type="url"]' +
            state +
            ',\n    input[type="week"]' +
            state +
            ',\n    input:not([type])' +
            state +
            ',\n    textarea' +
            state
          );
        }
        /**
         * Populates selectors that target all text inputs. You can pass optional states to append to the selectors.
         * @example
         * // Styles as object usage
         * const styles = {
         *   [textInputs('active')]: {
         *     'border': 'none'
         *   }
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   > ${textInputs('active')} {
         *     border: none;
         *   }
         * `
         *
         * // CSS in JS Output
         *
         *  'input[type="color"]:active,
         *  input[type="date"]:active,
         *  input[type="datetime"]:active,
         *  input[type="datetime-local"]:active,
         *  input[type="email"]:active,
         *  input[type="month"]:active,
         *  input[type="number"]:active,
         *  input[type="password"]:active,
         *  input[type="search"]:active,
         *  input[type="tel"]:active,
         *  input[type="text"]:active,
         *  input[type="time"]:active,
         *  input[type="url"]:active,
         *  input[type="week"]:active,
         *  input:not([type]):active,
         *  textarea:active': {
         *   'border': 'none'
         * }
         */

        function textInputs() {
          for (
            var _len = arguments.length, states = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            states[_key] = arguments[_key];
          }

          return statefulSelectors(states, template$1, stateMap$1);
        }

        /**
         * Accepts any number of transition values as parameters for creating a single transition statement. You may also pass an array of properties as the first parameter that you would like to apply the same transition values to (second parameter).
         * @example
         * // Styles as object usage
         * const styles = {
         *   ...transitions('opacity 1.0s ease-in 0s', 'width 2.0s ease-in 2s'),
         *   ...transitions(['color', 'background-color'], '2.0s ease-in 2s')
         * }
         *
         * // styled-components usage
         * const div = styled.div`
         *   ${transitions('opacity 1.0s ease-in 0s', 'width 2.0s ease-in 2s')};
         *   ${transitions(['color', 'background-color'], '2.0s ease-in 2s'),};
         * `
         *
         * // CSS as JS Output
         *
         * div {
         *   'transition': 'opacity 1.0s ease-in 0s, width 2.0s ease-in 2s'
         *   'transition': 'color 2.0s ease-in 2s, background-color 2.0s ease-in 2s',
         * }
         */

        function transitions() {
          for (
            var _len = arguments.length, properties = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            properties[_key] = arguments[_key];
          }

          if (Array.isArray(properties[0]) && properties.length === 2) {
            var value = properties[1];

            if (typeof value !== 'string') {
              throw new PolishedError(61);
            }

            var transitionsString = properties[0]
              .map(function (property) {
                return property + ' ' + value;
              })
              .join(', ');
            return {
              transition: transitionsString,
            };
          } else {
            return {
              transition: properties.join(', '),
            };
          }
        }

        /***/
      },

    /***/ './node_modules/process/browser.js':
      /*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        // shim for using process in browser
        var process = (module.exports = {});

        // cached from whatever global is present so that test runners that stub it
        // don't break things.  But we need to wrap it in a try catch in case it is
        // wrapped in strict mode code which doesn't define any globals.  It's inside a
        // function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
          throw new Error('setTimeout has not been defined');
        }
        function defaultClearTimeout() {
          throw new Error('clearTimeout has not been defined');
        }
        (function () {
          try {
            if (typeof setTimeout === 'function') {
              cachedSetTimeout = setTimeout;
            } else {
              cachedSetTimeout = defaultSetTimout;
            }
          } catch (e) {
            cachedSetTimeout = defaultSetTimout;
          }
          try {
            if (typeof clearTimeout === 'function') {
              cachedClearTimeout = clearTimeout;
            } else {
              cachedClearTimeout = defaultClearTimeout;
            }
          } catch (e) {
            cachedClearTimeout = defaultClearTimeout;
          }
        })();
        function runTimeout(fun) {
          if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0);
          }
          // if setTimeout wasn't available but was latter defined
          if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
              return cachedSetTimeout.call(null, fun, 0);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
              return cachedSetTimeout.call(this, fun, 0);
            }
          }
        }
        function runClearTimeout(marker) {
          if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker);
          }
          // if clearTimeout wasn't available but was latter defined
          if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
              return cachedClearTimeout.call(null, marker);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
              // Some versions of I.E. have different rules for clearTimeout vs setTimeout
              return cachedClearTimeout.call(this, marker);
            }
          }
        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
          if (!draining || !currentQueue) {
            return;
          }
          draining = false;
          if (currentQueue.length) {
            queue = currentQueue.concat(queue);
          } else {
            queueIndex = -1;
          }
          if (queue.length) {
            drainQueue();
          }
        }

        function drainQueue() {
          if (draining) {
            return;
          }
          var timeout = runTimeout(cleanUpNextTick);
          draining = true;

          var len = queue.length;
          while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
              if (currentQueue) {
                currentQueue[queueIndex].run();
              }
            }
            queueIndex = -1;
            len = queue.length;
          }
          currentQueue = null;
          draining = false;
          runClearTimeout(timeout);
        }

        process.nextTick = function (fun) {
          var args = new Array(arguments.length - 1);
          if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i];
            }
          }
          queue.push(new Item(fun, args));
          if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
          }
        };

        // v8 likes predictible objects
        function Item(fun, array) {
          this.fun = fun;
          this.array = array;
        }
        Item.prototype.run = function () {
          this.fun.apply(null, this.array);
        };
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ''; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function (name) {
          return [];
        };

        process.binding = function (name) {
          throw new Error('process.binding is not supported');
        };

        process.cwd = function () {
          return '/';
        };
        process.chdir = function (dir) {
          throw new Error('process.chdir is not supported');
        };
        process.umask = function () {
          return 0;
        };

        /***/
      },

    /***/ './node_modules/prop-types-exact/build/helpers/isPlainObject.js':
      /*!**********************************************************************!*\
  !*** ./node_modules/prop-types-exact/build/helpers/isPlainObject.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function (obj) {
                return typeof obj;
              }
            : function (obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        exports['default'] = isPlainObject;
        function isPlainObject(x) {
          return (
            x &&
            (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' &&
            !Array.isArray(x)
          );
        }
        module.exports = exports['default'];
        //# sourceMappingURL=isPlainObject.js.map

        /***/
      },

    /***/ './node_modules/prop-types-exact/build/index.js':
      /*!******************************************************!*\
  !*** ./node_modules/prop-types-exact/build/index.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        exports['default'] = forbidExtraProps;

        var _object = __webpack_require__(
          /*! object.assign */ './node_modules/next/dist/build/polyfills/object.assign/index.js'
        );

        var _object2 = _interopRequireDefault(_object);

        var _has = __webpack_require__(/*! has */ './node_modules/has/src/index.js');

        var _has2 = _interopRequireDefault(_has);

        var _isPlainObject = __webpack_require__(
          /*! ./helpers/isPlainObject */ './node_modules/prop-types-exact/build/helpers/isPlainObject.js'
        );

        var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        var zeroWidthSpace = '\u200B';
        var specialProperty = 'prop-types-exact: ' + zeroWidthSpace;
        var semaphore =
          typeof Symbol === 'function' && typeof Symbol['for'] === 'function'
            ? Symbol['for'](specialProperty)
            : /* istanbul ignore next */ specialProperty;

        function brand(fn) {
          return (0, _object2['default'])(fn, _defineProperty({}, specialProperty, semaphore));
        }

        function isBranded(value) {
          return value && value[specialProperty] === semaphore;
        }

        function forbidExtraProps(propTypes) {
          if (!(0, _isPlainObject2['default'])(propTypes)) {
            throw new TypeError('given propTypes must be an object');
          }
          if (
            (0, _has2['default'])(propTypes, specialProperty) &&
            !isBranded(propTypes[specialProperty])
          ) {
            throw new TypeError(
              'Against all odds, you created a propType for a prop that uses both the zero-width space and our custom string - which, sadly, conflicts with `prop-types-exact`'
            );
          }

          return (0, _object2['default'])(
            {},
            propTypes,
            _defineProperty(
              {},
              specialProperty,
              brand(
                (function () {
                  function forbidUnknownProps(props, _, componentName) {
                    var unknownProps = Object.keys(props).filter(function (prop) {
                      return !(0, _has2['default'])(propTypes, prop);
                    });
                    if (unknownProps.length > 0) {
                      return new TypeError(
                        String(componentName) +
                          ': unknown props found: ' +
                          String(unknownProps.join(', '))
                      );
                    }
                    return null;
                  }

                  return forbidUnknownProps;
                })()
              )
            )
          );
        }
        module.exports = exports['default'];
        //# sourceMappingURL=index.js.map

        /***/
      },

    /***/ './node_modules/prop-types/checkPropTypes.js':
      /*!*********************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/checkPropTypes.js from dll-reference dll_5030f387d328e4415785 ***!
  \*********************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_5030f387d328e4415785 */ 'dll-reference dll_5030f387d328e4415785'
        )('./node_modules/prop-types/checkPropTypes.js');

        /***/
      },

    /***/ './node_modules/prop-types/factoryWithTypeCheckers.js':
      /*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var ReactIs = __webpack_require__(/*! react-is */ './node_modules/react-is/index.js');
        var assign = __webpack_require__(
          /*! object-assign */ './node_modules/next/dist/build/polyfills/object-assign.js'
        );

        var ReactPropTypesSecret = __webpack_require__(
          /*! ./lib/ReactPropTypesSecret */ './node_modules/prop-types/lib/ReactPropTypesSecret.js'
        );
        var checkPropTypes = __webpack_require__(
          /*! ./checkPropTypes */ './node_modules/prop-types/checkPropTypes.js'
        );

        var has = Function.call.bind(Object.prototype.hasOwnProperty);
        var printWarning = function () {};

        if (true) {
          printWarning = function (text) {
            var message = 'Warning: ' + text;
            if (typeof console !== 'undefined') {
              console.error(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };
        }

        function emptyFunctionThatReturnsNull() {
          return null;
        }

        module.exports = function (isValidElement, throwOnDirectAccess) {
          /* global Symbol */
          var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

          /**
           * Returns the iterator method function contained on the iterable object.
           *
           * Be sure to invoke the function with the iterable as context:
           *
           *     var iteratorFn = getIteratorFn(myIterable);
           *     if (iteratorFn) {
           *       var iterator = iteratorFn.call(myIterable);
           *       ...
           *     }
           *
           * @param {?object} maybeIterable
           * @return {?function}
           */
          function getIteratorFn(maybeIterable) {
            var iteratorFn =
              maybeIterable &&
              ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
                maybeIterable[FAUX_ITERATOR_SYMBOL]);
            if (typeof iteratorFn === 'function') {
              return iteratorFn;
            }
          }

          /**
           * Collection of methods that allow declaration and validation of props that are
           * supplied to React components. Example usage:
           *
           *   var Props = require('ReactPropTypes');
           *   var MyArticle = React.createClass({
           *     propTypes: {
           *       // An optional string prop named "description".
           *       description: Props.string,
           *
           *       // A required enum prop named "category".
           *       category: Props.oneOf(['News','Photos']).isRequired,
           *
           *       // A prop named "dialog" that requires an instance of Dialog.
           *       dialog: Props.instanceOf(Dialog).isRequired
           *     },
           *     render: function() { ... }
           *   });
           *
           * A more formal specification of how these methods are used:
           *
           *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
           *   decl := ReactPropTypes.{type}(.isRequired)?
           *
           * Each and every declaration produces a function with the same signature. This
           * allows the creation of custom validation functions. For example:
           *
           *  var MyLink = React.createClass({
           *    propTypes: {
           *      // An optional string or URI prop named "href".
           *      href: function(props, propName, componentName) {
           *        var propValue = props[propName];
           *        if (propValue != null && typeof propValue !== 'string' &&
           *            !(propValue instanceof URI)) {
           *          return new Error(
           *            'Expected a string or an URI for ' + propName + ' in ' +
           *            componentName
           *          );
           *        }
           *      }
           *    },
           *    render: function() {...}
           *  });
           *
           * @internal
           */

          var ANONYMOUS = '<<anonymous>>';

          // Important!
          // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
          var ReactPropTypes = {
            array: createPrimitiveTypeChecker('array'),
            bool: createPrimitiveTypeChecker('boolean'),
            func: createPrimitiveTypeChecker('function'),
            number: createPrimitiveTypeChecker('number'),
            object: createPrimitiveTypeChecker('object'),
            string: createPrimitiveTypeChecker('string'),
            symbol: createPrimitiveTypeChecker('symbol'),

            any: createAnyTypeChecker(),
            arrayOf: createArrayOfTypeChecker,
            element: createElementTypeChecker(),
            elementType: createElementTypeTypeChecker(),
            instanceOf: createInstanceTypeChecker,
            node: createNodeChecker(),
            objectOf: createObjectOfTypeChecker,
            oneOf: createEnumTypeChecker,
            oneOfType: createUnionTypeChecker,
            shape: createShapeTypeChecker,
            exact: createStrictShapeTypeChecker,
          };

          /**
           * inlined Object.is polyfill to avoid requiring consumers ship their own
           * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
           */
          /*eslint-disable no-self-compare*/
          function is(x, y) {
            // SameValue algorithm
            if (x === y) {
              // Steps 1-5, 7-10
              // Steps 6.b-6.e: +0 != -0
              return x !== 0 || 1 / x === 1 / y;
            } else {
              // Step 6.a: NaN == NaN
              return x !== x && y !== y;
            }
          }
          /*eslint-enable no-self-compare*/

          /**
           * We use an Error-like object for backward compatibility as people may call
           * PropTypes directly and inspect their output. However, we don't use real
           * Errors anymore. We don't inspect their stack anyway, and creating them
           * is prohibitively expensive if they are created too often, such as what
           * happens in oneOfType() for any type before the one that matched.
           */
          function PropTypeError(message) {
            this.message = message;
            this.stack = '';
          }
          // Make `instanceof Error` still work for returned errors.
          PropTypeError.prototype = Error.prototype;

          function createChainableTypeChecker(validate) {
            if (true) {
              var manualPropTypeCallCache = {};
              var manualPropTypeWarningCount = 0;
            }
            function checkType(
              isRequired,
              props,
              propName,
              componentName,
              location,
              propFullName,
              secret
            ) {
              componentName = componentName || ANONYMOUS;
              propFullName = propFullName || propName;

              if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                  // New behavior only for users of `prop-types` package
                  var err = new Error(
                    'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
                      'Use `PropTypes.checkPropTypes()` to call them. ' +
                      'Read more at http://fb.me/use-check-prop-types'
                  );
                  err.name = 'Invariant Violation';
                  throw err;
                } else if (true && typeof console !== 'undefined') {
                  // Old behavior for people using React.PropTypes
                  var cacheKey = componentName + ':' + propName;
                  if (
                    !manualPropTypeCallCache[cacheKey] &&
                    // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3
                  ) {
                    printWarning(
                      'You are manually calling a React.PropTypes validation ' +
                        'function for the `' +
                        propFullName +
                        '` prop on `' +
                        componentName +
                        '`. This is deprecated ' +
                        'and will throw in the standalone `prop-types` package. ' +
                        'You may be seeing this warning due to a third-party PropTypes ' +
                        'library. See https://fb.me/react-warning-dont-call-proptypes ' +
                        'for details.'
                    );
                    manualPropTypeCallCache[cacheKey] = true;
                    manualPropTypeWarningCount++;
                  }
                }
              }
              if (props[propName] == null) {
                if (isRequired) {
                  if (props[propName] === null) {
                    return new PropTypeError(
                      'The ' +
                        location +
                        ' `' +
                        propFullName +
                        '` is marked as required ' +
                        ('in `' + componentName + '`, but its value is `null`.')
                    );
                  }
                  return new PropTypeError(
                    'The ' +
                      location +
                      ' `' +
                      propFullName +
                      '` is marked as required in ' +
                      ('`' + componentName + '`, but its value is `undefined`.')
                  );
                }
                return null;
              } else {
                return validate(props, propName, componentName, location, propFullName);
              }
            }

            var chainedCheckType = checkType.bind(null, false);
            chainedCheckType.isRequired = checkType.bind(null, true);

            return chainedCheckType;
          }

          function createPrimitiveTypeChecker(expectedType) {
            function validate(props, propName, componentName, location, propFullName, secret) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);

                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') +
                    ('`' + expectedType + '`.')
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createAnyTypeChecker() {
            return createChainableTypeChecker(emptyFunctionThatReturnsNull);
          }

          function createArrayOfTypeChecker(typeChecker) {
            function validate(props, propName, componentName, location, propFullName) {
              if (typeof typeChecker !== 'function') {
                return new PropTypeError(
                  'Property `' +
                    propFullName +
                    '` of component `' +
                    componentName +
                    '` has invalid PropType notation inside arrayOf.'
                );
              }
              var propValue = props[propName];
              if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' + propType + '` supplied to `' + componentName + '`, expected an array.')
                );
              }
              for (var i = 0; i < propValue.length; i++) {
                var error = typeChecker(
                  propValue,
                  i,
                  componentName,
                  location,
                  propFullName + '[' + i + ']',
                  ReactPropTypesSecret
                );
                if (error instanceof Error) {
                  return error;
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createElementTypeChecker() {
            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName];
              if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' +
                      propType +
                      '` supplied to `' +
                      componentName +
                      '`, expected a single ReactElement.')
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createElementTypeTypeChecker() {
            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName];
              if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' +
                      propType +
                      '` supplied to `' +
                      componentName +
                      '`, expected a single ReactElement type.')
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createInstanceTypeChecker(expectedClass) {
            function validate(props, propName, componentName, location, propFullName) {
              if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') +
                    ('instance of `' + expectedClassName + '`.')
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createEnumTypeChecker(expectedValues) {
            if (!Array.isArray(expectedValues)) {
              if (true) {
                if (arguments.length > 1) {
                  printWarning(
                    'Invalid arguments supplied to oneOf, expected an array, got ' +
                      arguments.length +
                      ' arguments. ' +
                      'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
                  );
                } else {
                  printWarning('Invalid argument supplied to oneOf, expected an array.');
                }
              }
              return emptyFunctionThatReturnsNull;
            }

            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName];
              for (var i = 0; i < expectedValues.length; i++) {
                if (is(propValue, expectedValues[i])) {
                  return null;
                }
              }

              var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === 'symbol') {
                  return String(value);
                }
                return value;
              });
              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` of value `' +
                  String(propValue) +
                  '` ' +
                  ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.')
              );
            }
            return createChainableTypeChecker(validate);
          }

          function createObjectOfTypeChecker(typeChecker) {
            function validate(props, propName, componentName, location, propFullName) {
              if (typeof typeChecker !== 'function') {
                return new PropTypeError(
                  'Property `' +
                    propFullName +
                    '` of component `' +
                    componentName +
                    '` has invalid PropType notation inside objectOf.'
                );
              }
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== 'object') {
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type ' +
                    ('`' + propType + '` supplied to `' + componentName + '`, expected an object.')
                );
              }
              for (var key in propValue) {
                if (has(propValue, key)) {
                  var error = typeChecker(
                    propValue,
                    key,
                    componentName,
                    location,
                    propFullName + '.' + key,
                    ReactPropTypesSecret
                  );
                  if (error instanceof Error) {
                    return error;
                  }
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createUnionTypeChecker(arrayOfTypeCheckers) {
            if (!Array.isArray(arrayOfTypeCheckers)) {
              true
                ? printWarning(
                    'Invalid argument supplied to oneOfType, expected an instance of array.'
                  )
                : undefined;
              return emptyFunctionThatReturnsNull;
            }

            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
              var checker = arrayOfTypeCheckers[i];
              if (typeof checker !== 'function') {
                printWarning(
                  'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
                    'received ' +
                    getPostfixForTypeWarning(checker) +
                    ' at index ' +
                    i +
                    '.'
                );
                return emptyFunctionThatReturnsNull;
              }
            }

            function validate(props, propName, componentName, location, propFullName) {
              for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
                var checker = arrayOfTypeCheckers[i];
                if (
                  checker(
                    props,
                    propName,
                    componentName,
                    location,
                    propFullName,
                    ReactPropTypesSecret
                  ) == null
                ) {
                  return null;
                }
              }

              return new PropTypeError(
                'Invalid ' +
                  location +
                  ' `' +
                  propFullName +
                  '` supplied to ' +
                  ('`' + componentName + '`.')
              );
            }
            return createChainableTypeChecker(validate);
          }

          function createNodeChecker() {
            function validate(props, propName, componentName, location, propFullName) {
              if (!isNode(props[propName])) {
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` supplied to ' +
                    ('`' + componentName + '`, expected a ReactNode.')
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createShapeTypeChecker(shapeTypes) {
            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== 'object') {
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type `' +
                    propType +
                    '` ' +
                    ('supplied to `' + componentName + '`, expected `object`.')
                );
              }
              for (var key in shapeTypes) {
                var checker = shapeTypes[key];
                if (!checker) {
                  continue;
                }
                var error = checker(
                  propValue,
                  key,
                  componentName,
                  location,
                  propFullName + '.' + key,
                  ReactPropTypesSecret
                );
                if (error) {
                  return error;
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createStrictShapeTypeChecker(shapeTypes) {
            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== 'object') {
                return new PropTypeError(
                  'Invalid ' +
                    location +
                    ' `' +
                    propFullName +
                    '` of type `' +
                    propType +
                    '` ' +
                    ('supplied to `' + componentName + '`, expected `object`.')
                );
              }
              // We need to check all keys in case some are required but missing from
              // props.
              var allKeys = assign({}, props[propName], shapeTypes);
              for (var key in allKeys) {
                var checker = shapeTypes[key];
                if (!checker) {
                  return new PropTypeError(
                    'Invalid ' +
                      location +
                      ' `' +
                      propFullName +
                      '` key `' +
                      key +
                      '` supplied to `' +
                      componentName +
                      '`.' +
                      '\nBad object: ' +
                      JSON.stringify(props[propName], null, '  ') +
                      '\nValid keys: ' +
                      JSON.stringify(Object.keys(shapeTypes), null, '  ')
                  );
                }
                var error = checker(
                  propValue,
                  key,
                  componentName,
                  location,
                  propFullName + '.' + key,
                  ReactPropTypesSecret
                );
                if (error) {
                  return error;
                }
              }
              return null;
            }

            return createChainableTypeChecker(validate);
          }

          function isNode(propValue) {
            switch (typeof propValue) {
              case 'number':
              case 'string':
              case 'undefined':
                return true;
              case 'boolean':
                return !propValue;
              case 'object':
                if (Array.isArray(propValue)) {
                  return propValue.every(isNode);
                }
                if (propValue === null || isValidElement(propValue)) {
                  return true;
                }

                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                  var iterator = iteratorFn.call(propValue);
                  var step;
                  if (iteratorFn !== propValue.entries) {
                    while (!(step = iterator.next()).done) {
                      if (!isNode(step.value)) {
                        return false;
                      }
                    }
                  } else {
                    // Iterator will provide entry [k,v] tuples rather than values.
                    while (!(step = iterator.next()).done) {
                      var entry = step.value;
                      if (entry) {
                        if (!isNode(entry[1])) {
                          return false;
                        }
                      }
                    }
                  }
                } else {
                  return false;
                }

                return true;
              default:
                return false;
            }
          }

          function isSymbol(propType, propValue) {
            // Native Symbol.
            if (propType === 'symbol') {
              return true;
            }

            // falsy value can't be a Symbol
            if (!propValue) {
              return false;
            }

            // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
            if (propValue['@@toStringTag'] === 'Symbol') {
              return true;
            }

            // Fallback for non-spec compliant Symbols which are polyfilled.
            if (typeof Symbol === 'function' && propValue instanceof Symbol) {
              return true;
            }

            return false;
          }

          // Equivalent of `typeof` but with special handling for array and regexp.
          function getPropType(propValue) {
            var propType = typeof propValue;
            if (Array.isArray(propValue)) {
              return 'array';
            }
            if (propValue instanceof RegExp) {
              // Old webkits (at least until Android 4.0) return 'function' rather than
              // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
              // passes PropTypes.object.
              return 'object';
            }
            if (isSymbol(propType, propValue)) {
              return 'symbol';
            }
            return propType;
          }

          // This handles more types than `getPropType`. Only used for error messages.
          // See `createPrimitiveTypeChecker`.
          function getPreciseType(propValue) {
            if (typeof propValue === 'undefined' || propValue === null) {
              return '' + propValue;
            }
            var propType = getPropType(propValue);
            if (propType === 'object') {
              if (propValue instanceof Date) {
                return 'date';
              } else if (propValue instanceof RegExp) {
                return 'regexp';
              }
            }
            return propType;
          }

          // Returns a string that is postfixed to a warning about an invalid type.
          // For example, "undefined" or "of type array"
          function getPostfixForTypeWarning(value) {
            var type = getPreciseType(value);
            switch (type) {
              case 'array':
              case 'object':
                return 'an ' + type;
              case 'boolean':
              case 'date':
              case 'regexp':
                return 'a ' + type;
              default:
                return type;
            }
          }

          // Returns class name of the object, if any.
          function getClassName(propValue) {
            if (!propValue.constructor || !propValue.constructor.name) {
              return ANONYMOUS;
            }
            return propValue.constructor.name;
          }

          ReactPropTypes.checkPropTypes = checkPropTypes;
          ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
          ReactPropTypes.PropTypes = ReactPropTypes;

          return ReactPropTypes;
        };

        /***/
      },

    /***/ './node_modules/prop-types/index.js':
      /*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (true) {
          var ReactIs = __webpack_require__(/*! react-is */ './node_modules/react-is/index.js');

          // By explicitly using `prop-types` you are opting into new development behavior.
          // http://fb.me/prop-types-in-prod
          var throwOnDirectAccess = true;
          module.exports = __webpack_require__(
            /*! ./factoryWithTypeCheckers */ './node_modules/prop-types/factoryWithTypeCheckers.js'
          )(ReactIs.isElement, throwOnDirectAccess);
        } else {
        }

        /***/
      },

    /***/ './node_modules/prop-types/lib/ReactPropTypesSecret.js':
      /*!*******************************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/lib/ReactPropTypesSecret.js from dll-reference dll_5030f387d328e4415785 ***!
  \*******************************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_5030f387d328e4415785 */ 'dll-reference dll_5030f387d328e4415785'
        )('./node_modules/prop-types/lib/ReactPropTypesSecret.js');

        /***/
      },

    /***/ './node_modules/querystring-es3/decode.js':
      /*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // If obj.hasOwnProperty has been overridden, then calling
        // obj.hasOwnProperty(prop) will break.
        // See: https://github.com/joyent/node/issues/1707
        function hasOwnProperty(obj, prop) {
          return Object.prototype.hasOwnProperty.call(obj, prop);
        }

        module.exports = function (qs, sep, eq, options) {
          sep = sep || '&';
          eq = eq || '=';
          var obj = {};

          if (typeof qs !== 'string' || qs.length === 0) {
            return obj;
          }

          var regexp = /\+/g;
          qs = qs.split(sep);

          var maxKeys = 1000;
          if (options && typeof options.maxKeys === 'number') {
            maxKeys = options.maxKeys;
          }

          var len = qs.length;
          // maxKeys <= 0 means that we should not limit keys count
          if (maxKeys > 0 && len > maxKeys) {
            len = maxKeys;
          }

          for (var i = 0; i < len; ++i) {
            var x = qs[i].replace(regexp, '%20'),
              idx = x.indexOf(eq),
              kstr,
              vstr,
              k,
              v;

            if (idx >= 0) {
              kstr = x.substr(0, idx);
              vstr = x.substr(idx + 1);
            } else {
              kstr = x;
              vstr = '';
            }

            k = decodeURIComponent(kstr);
            v = decodeURIComponent(vstr);

            if (!hasOwnProperty(obj, k)) {
              obj[k] = v;
            } else if (isArray(obj[k])) {
              obj[k].push(v);
            } else {
              obj[k] = [obj[k], v];
            }
          }

          return obj;
        };

        var isArray =
          Array.isArray ||
          function (xs) {
            return Object.prototype.toString.call(xs) === '[object Array]';
          };

        /***/
      },

    /***/ './node_modules/querystring-es3/encode.js':
      /*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        var stringifyPrimitive = function (v) {
          switch (typeof v) {
            case 'string':
              return v;

            case 'boolean':
              return v ? 'true' : 'false';

            case 'number':
              return isFinite(v) ? v : '';

            default:
              return '';
          }
        };

        module.exports = function (obj, sep, eq, name) {
          sep = sep || '&';
          eq = eq || '=';
          if (obj === null) {
            obj = undefined;
          }

          if (typeof obj === 'object') {
            return map(objectKeys(obj), function (k) {
              var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
              if (isArray(obj[k])) {
                return map(obj[k], function (v) {
                  return ks + encodeURIComponent(stringifyPrimitive(v));
                }).join(sep);
              } else {
                return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
              }
            }).join(sep);
          }

          if (!name) return '';
          return (
            encodeURIComponent(stringifyPrimitive(name)) +
            eq +
            encodeURIComponent(stringifyPrimitive(obj))
          );
        };

        var isArray =
          Array.isArray ||
          function (xs) {
            return Object.prototype.toString.call(xs) === '[object Array]';
          };

        function map(xs, f) {
          if (xs.map) return xs.map(f);
          var res = [];
          for (var i = 0; i < xs.length; i++) {
            res.push(f(xs[i], i));
          }
          return res;
        }

        var objectKeys =
          Object.keys ||
          function (obj) {
            var res = [];
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
            }
            return res;
          };

        /***/
      },

    /***/ './node_modules/querystring-es3/index.js':
      /*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.decode = exports.parse = __webpack_require__(
          /*! ./decode */ './node_modules/querystring-es3/decode.js'
        );
        exports.encode = exports.stringify = __webpack_require__(
          /*! ./encode */ './node_modules/querystring-es3/encode.js'
        );

        /***/
      },

    /***/ './node_modules/react-dom/index.js':
      /*!***********************************************************************************************!*\
  !*** delegated ./node_modules/react-dom/index.js from dll-reference dll_5030f387d328e4415785 ***!
  \***********************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_5030f387d328e4415785 */ 'dll-reference dll_5030f387d328e4415785'
        )('./node_modules/react-dom/index.js');

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/components/OutboundLink.js':
      /*!*******************************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/components/OutboundLink.js ***!
  \*******************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return OutboundLink;
          }
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! react */ './node_modules/react/index.js'
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_0__
        );
        /* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! prop-types */ './node_modules/prop-types/index.js'
        );
        /* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          prop_types__WEBPACK_IMPORTED_MODULE_1__
        );
        /* harmony import */ var _utils_console_warn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ../utils/console/warn */ './node_modules/react-ga/dist/esm/utils/console/warn.js'
        );
        function _typeof(obj) {
          '@babel/helpers - typeof';
          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof = function _typeof(obj) {
              return typeof obj;
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };
          }
          return _typeof(obj);
        }

        function ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
            keys.push.apply(keys, symbols);
          }
          return keys;
        }

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            if (i % 2) {
              ownKeys(Object(source), true).forEach(function (key) {
                _defineProperty(target, key, source[key]);
              });
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
            } else {
              ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
              });
            }
          }
          return target;
        }

        function _objectWithoutProperties(source, excluded) {
          if (source == null) return {};
          var target = _objectWithoutPropertiesLoose(source, excluded);
          var key, i;
          if (Object.getOwnPropertySymbols) {
            var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
            for (i = 0; i < sourceSymbolKeys.length; i++) {
              key = sourceSymbolKeys[i];
              if (excluded.indexOf(key) >= 0) continue;
              if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
              target[key] = source[key];
            }
          }
          return target;
        }

        function _objectWithoutPropertiesLoose(source, excluded) {
          if (source == null) return {};
          var target = {};
          var sourceKeys = Object.keys(source);
          var key, i;
          for (i = 0; i < sourceKeys.length; i++) {
            key = sourceKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            target[key] = source[key];
          }
          return target;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError('Super expression must either be null or a function');
          }
          subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: { value: subClass, writable: true, configurable: true },
          });
          if (superClass) _setPrototypeOf(subClass, superClass);
        }

        function _setPrototypeOf(o, p) {
          _setPrototypeOf =
            Object.setPrototypeOf ||
            function _setPrototypeOf(o, p) {
              o.__proto__ = p;
              return o;
            };
          return _setPrototypeOf(o, p);
        }

        function _createSuper(Derived) {
          var hasNativeReflectConstruct = _isNativeReflectConstruct();
          return function _createSuperInternal() {
            var Super = _getPrototypeOf(Derived),
              result;
            if (hasNativeReflectConstruct) {
              var NewTarget = _getPrototypeOf(this).constructor;
              result = Reflect.construct(Super, arguments, NewTarget);
            } else {
              result = Super.apply(this, arguments);
            }
            return _possibleConstructorReturn(this, result);
          };
        }

        function _possibleConstructorReturn(self, call) {
          if (call && (_typeof(call) === 'object' || typeof call === 'function')) {
            return call;
          }
          return _assertThisInitialized(self);
        }

        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return self;
        }

        function _isNativeReflectConstruct() {
          if (typeof Reflect === 'undefined' || !Reflect.construct) return false;
          if (Reflect.construct.sham) return false;
          if (typeof Proxy === 'function') return true;
          try {
            Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
            return true;
          } catch (e) {
            return false;
          }
        }

        function _getPrototypeOf(o) {
          _getPrototypeOf = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function _getPrototypeOf(o) {
                return o.__proto__ || Object.getPrototypeOf(o);
              };
          return _getPrototypeOf(o);
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        var NEWTAB = '_blank';
        var MIDDLECLICK = 1;

        var OutboundLink = /*#__PURE__*/ (function (_Component) {
          _inherits(OutboundLink, _Component);

          var _super = _createSuper(OutboundLink);

          function OutboundLink() {
            var _this;

            _classCallCheck(this, OutboundLink);

            for (
              var _len = arguments.length, args = new Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            _this = _super.call.apply(_super, [this].concat(args));

            _defineProperty(_assertThisInitialized(_this), 'handleClick', function (event) {
              var _this$props = _this.props,
                target = _this$props.target,
                eventLabel = _this$props.eventLabel,
                to = _this$props.to,
                onClick = _this$props.onClick,
                trackerNames = _this$props.trackerNames;
              var eventMeta = {
                label: eventLabel,
              };
              var sameTarget = target !== NEWTAB;
              var normalClick = !(
                event.ctrlKey ||
                event.shiftKey ||
                event.metaKey ||
                event.button === MIDDLECLICK
              );

              if (sameTarget && normalClick) {
                event.preventDefault();
                OutboundLink.trackLink(
                  eventMeta,
                  function () {
                    window.location.href = to;
                  },
                  trackerNames
                );
              } else {
                OutboundLink.trackLink(eventMeta, function () {}, trackerNames);
              }

              if (onClick) {
                onClick(event);
              }
            });

            return _this;
          }

          _createClass(OutboundLink, [
            {
              key: 'render',
              value: function render() {
                var _this$props2 = this.props,
                  href = _this$props2.to,
                  target = _this$props2.target,
                  oldProps = _objectWithoutProperties(_this$props2, ['to', 'target']);

                var props = _objectSpread(
                  _objectSpread({}, oldProps),
                  {},
                  {
                    target: target,
                    href: href,
                    onClick: this.handleClick,
                  }
                );

                if (target === NEWTAB) {
                  props.rel = 'noopener noreferrer';
                }

                delete props.eventLabel;
                delete props.trackerNames;
                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                  'a',
                  props
                );
              },
            },
          ]);

          return OutboundLink;
        })(react__WEBPACK_IMPORTED_MODULE_0__['Component']);

        _defineProperty(OutboundLink, 'trackLink', function () {
          Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_2__['default'])(
            'ga tracking not enabled'
          );
        });

        OutboundLink.propTypes = {
          eventLabel: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,
          target: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
          to: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
          onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
          trackerNames: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.arrayOf(
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string
          ),
        };
        OutboundLink.defaultProps = {
          target: null,
          to: null,
          onClick: null,
          trackerNames: null,
        };

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/core.js':
      /*!************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/core.js ***!
  \************************************************/
      /*! exports provided: addTrackers, initialize, ga, set, send, pageview, modalview, timing, event, exception, plugin, outboundLink, testModeAPI, default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'addTrackers',
          function () {
            return addTrackers;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'initialize',
          function () {
            return initialize;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'ga',
          function () {
            return ga;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'set',
          function () {
            return set;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'send',
          function () {
            return send;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'pageview',
          function () {
            return pageview;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'modalview',
          function () {
            return modalview;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'timing',
          function () {
            return timing;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'event',
          function () {
            return event;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'exception',
          function () {
            return exception;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'plugin',
          function () {
            return plugin;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'outboundLink',
          function () {
            return outboundLink;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'testModeAPI',
          function () {
            return testModeAPI;
          }
        );
        /* harmony import */ var _utils_format__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./utils/format */ './node_modules/react-ga/dist/esm/utils/format.js'
        );
        /* harmony import */ var _utils_removeLeadingSlash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./utils/removeLeadingSlash */ './node_modules/react-ga/dist/esm/utils/removeLeadingSlash.js'
        );
        /* harmony import */ var _utils_trim__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./utils/trim */ './node_modules/react-ga/dist/esm/utils/trim.js'
        );
        /* harmony import */ var _utils_loadGA__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ./utils/loadGA */ './node_modules/react-ga/dist/esm/utils/loadGA.js'
        );
        /* harmony import */ var _utils_console_warn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ./utils/console/warn */ './node_modules/react-ga/dist/esm/utils/console/warn.js'
        );
        /* harmony import */ var _utils_console_log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ./utils/console/log */ './node_modules/react-ga/dist/esm/utils/console/log.js'
        );
        /* harmony import */ var _utils_testModeAPI__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ./utils/testModeAPI */ './node_modules/react-ga/dist/esm/utils/testModeAPI.js'
        );
        function _objectWithoutProperties(source, excluded) {
          if (source == null) return {};
          var target = _objectWithoutPropertiesLoose(source, excluded);
          var key, i;
          if (Object.getOwnPropertySymbols) {
            var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
            for (i = 0; i < sourceSymbolKeys.length; i++) {
              key = sourceSymbolKeys[i];
              if (excluded.indexOf(key) >= 0) continue;
              if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
              target[key] = source[key];
            }
          }
          return target;
        }

        function _objectWithoutPropertiesLoose(source, excluded) {
          if (source == null) return {};
          var target = {};
          var sourceKeys = Object.keys(source);
          var key, i;
          for (i = 0; i < sourceKeys.length; i++) {
            key = sourceKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            target[key] = source[key];
          }
          return target;
        }

        function ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
            keys.push.apply(keys, symbols);
          }
          return keys;
        }

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            if (i % 2) {
              ownKeys(Object(source), true).forEach(function (key) {
                _defineProperty(target, key, source[key]);
              });
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
            } else {
              ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
              });
            }
          }
          return target;
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        function _typeof(obj) {
          '@babel/helpers - typeof';
          if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
            _typeof = function _typeof(obj) {
              return typeof obj;
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
            };
          }
          return _typeof(obj);
        }

        function _toConsumableArray(arr) {
          return (
            _arrayWithoutHoles(arr) ||
            _iterableToArray(arr) ||
            _unsupportedIterableToArray(arr) ||
            _nonIterableSpread()
          );
        }

        function _nonIterableSpread() {
          throw new TypeError(
            'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
          );
        }

        function _unsupportedIterableToArray(o, minLen) {
          if (!o) return;
          if (typeof o === 'string') return _arrayLikeToArray(o, minLen);
          var n = Object.prototype.toString.call(o).slice(8, -1);
          if (n === 'Object' && o.constructor) n = o.constructor.name;
          if (n === 'Map' || n === 'Set') return Array.from(o);
          if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
            return _arrayLikeToArray(o, minLen);
        }

        function _iterableToArray(iter) {
          if (typeof Symbol !== 'undefined' && Symbol.iterator in Object(iter))
            return Array.from(iter);
        }

        function _arrayWithoutHoles(arr) {
          if (Array.isArray(arr)) return _arrayLikeToArray(arr);
        }

        function _arrayLikeToArray(arr, len) {
          if (len == null || len > arr.length) len = arr.length;
          for (var i = 0, arr2 = new Array(len); i < len; i++) {
            arr2[i] = arr[i];
          }
          return arr2;
        }

        /**
         * React Google Analytics Module
         *
         * @package react-ga
         * @author  Adam Lofting <adam@mozillafoundation.org>
         *          Atul Varma <atul@mozillafoundation.org>
         */

        /**
         * Utilities
         */

        var _isNotBrowser = typeof window === 'undefined' || typeof document === 'undefined';

        var _debug = false;
        var _titleCase = true;
        var _testMode = false;
        var _alwaysSendToDefaultTracker = true;
        var _redactEmail = true;

        var internalGa = function internalGa() {
          var _window;

          if (_testMode)
            return _utils_testModeAPI__WEBPACK_IMPORTED_MODULE_6__['default'].ga.apply(
              _utils_testModeAPI__WEBPACK_IMPORTED_MODULE_6__['default'],
              arguments
            );
          if (_isNotBrowser) return false;
          if (!window.ga)
            return Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
              'ReactGA.initialize must be called first or GoogleAnalytics should be loaded manually'
            );
          return (_window = window).ga.apply(_window, arguments);
        };

        function _format(s) {
          return Object(_utils_format__WEBPACK_IMPORTED_MODULE_0__['default'])(
            s,
            _titleCase,
            _redactEmail
          );
        }

        function _gaCommand(trackerNames) {
          for (
            var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
            _key < _len;
            _key++
          ) {
            args[_key - 1] = arguments[_key];
          }

          var command = args[0];

          if (typeof internalGa === 'function') {
            if (typeof command !== 'string') {
              Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                'ga command must be a string'
              );
              return;
            }

            if (_alwaysSendToDefaultTracker || !Array.isArray(trackerNames))
              internalGa.apply(void 0, args);

            if (Array.isArray(trackerNames)) {
              trackerNames.forEach(function (name) {
                internalGa.apply(
                  void 0,
                  _toConsumableArray([''.concat(name, '.').concat(command)].concat(args.slice(1)))
                );
              });
            }
          }
        }

        function _initialize(gaTrackingID, options) {
          if (!gaTrackingID) {
            Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
              'gaTrackingID is required in initialize()'
            );
            return;
          }

          if (options) {
            if (options.debug && options.debug === true) {
              _debug = true;
            }

            if (options.titleCase === false) {
              _titleCase = false;
            }

            if (options.redactEmail === false) {
              _redactEmail = false;
            }

            if (options.useExistingGa) {
              return;
            }
          }

          if (options && options.gaOptions) {
            internalGa('create', gaTrackingID, options.gaOptions);
          } else {
            internalGa('create', gaTrackingID, 'auto');
          }
        }

        function addTrackers(configsOrTrackingId, options) {
          if (Array.isArray(configsOrTrackingId)) {
            configsOrTrackingId.forEach(function (config) {
              if (_typeof(config) !== 'object') {
                Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                  'All configs must be an object'
                );
                return;
              }

              _initialize(config.trackingId, config);
            });
          } else {
            _initialize(configsOrTrackingId, options);
          }

          return true;
        }
        function initialize(configsOrTrackingId, options) {
          if (options && options.testMode === true) {
            _testMode = true;
          } else {
            if (_isNotBrowser) {
              return;
            }

            if (!options || options.standardImplementation !== true)
              Object(_utils_loadGA__WEBPACK_IMPORTED_MODULE_3__['default'])(options);
          }

          _alwaysSendToDefaultTracker =
            options && typeof options.alwaysSendToDefaultTracker === 'boolean'
              ? options.alwaysSendToDefaultTracker
              : true;
          addTrackers(configsOrTrackingId, options);
        }
        /**
         * ga:
         * Returns the original GA object.
         */

        function ga() {
          for (
            var _len2 = arguments.length, args = new Array(_len2), _key2 = 0;
            _key2 < _len2;
            _key2++
          ) {
            args[_key2] = arguments[_key2];
          }

          if (args.length > 0) {
            internalGa.apply(void 0, args);

            if (_debug) {
              Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                "called ga('arguments');"
              );
              Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                'with arguments: '.concat(JSON.stringify(args))
              );
            }
          }

          return window.ga;
        }
        /**
         * set:
         * GA tracker set method
         * @param {Object} fieldsObject - a field/value pair or a group of field/value pairs on the tracker
         * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
         */

        function set(fieldsObject, trackerNames) {
          if (!fieldsObject) {
            Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
              '`fieldsObject` is required in .set()'
            );
            return;
          }

          if (_typeof(fieldsObject) !== 'object') {
            Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
              'Expected `fieldsObject` arg to be an Object'
            );
            return;
          }

          if (Object.keys(fieldsObject).length === 0) {
            Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
              'empty `fieldsObject` given to .set()'
            );
          }

          _gaCommand(trackerNames, 'set', fieldsObject);

          if (_debug) {
            Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
              "called ga('set', fieldsObject);"
            );
            Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
              'with fieldsObject: '.concat(JSON.stringify(fieldsObject))
            );
          }
        }
        /**
         * send:
         * Clone of the low level `ga.send` method
         * WARNING: No validations will be applied to this
         * @param  {Object} fieldObject - field object for tracking different analytics
         * @param  {Array} trackerNames - trackers to send the command to
         * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
         */

        function send(fieldObject, trackerNames) {
          _gaCommand(trackerNames, 'send', fieldObject);

          if (_debug) {
            Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
              "called ga('send', fieldObject);"
            );
            Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
              'with fieldObject: '.concat(JSON.stringify(fieldObject))
            );
            Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
              'with trackers: '.concat(JSON.stringify(trackerNames))
            );
          }
        }
        /**
         * pageview:
         * Basic GA pageview tracking
         * @param  {String} path - the current page page e.g. '/about'
         * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
         * @param {String} title - (optional) the page title e. g. 'My Website'
         */

        function pageview(rawPath, trackerNames, title) {
          if (!rawPath) {
            Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
              'path is required in .pageview()'
            );
            return;
          }

          var path = Object(_utils_trim__WEBPACK_IMPORTED_MODULE_2__['default'])(rawPath);

          if (path === '') {
            Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
              'path cannot be an empty string in .pageview()'
            );
            return;
          }

          var extraFields = {};

          if (title) {
            extraFields.title = title;
          }

          if (typeof ga === 'function') {
            _gaCommand(
              trackerNames,
              'send',
              _objectSpread(
                {
                  hitType: 'pageview',
                  page: path,
                },
                extraFields
              )
            );

            if (_debug) {
              Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                "called ga('send', 'pageview', path);"
              );
              var extraLog = '';

              if (title) {
                extraLog = ' and title: '.concat(title);
              }

              Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                'with path: '.concat(path).concat(extraLog)
              );
            }
          }
        }
        /**
         * modalview:
         * a proxy to basic GA pageview tracking to consistently track
         * modal views that are an equivalent UX to a traditional pageview
         * @param  {String} modalName e.g. 'add-or-edit-club'
         * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
         */

        function modalview(rawModalName, trackerNames) {
          if (!rawModalName) {
            Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
              'modalName is required in .modalview(modalName)'
            );
            return;
          }

          var modalName = Object(_utils_removeLeadingSlash__WEBPACK_IMPORTED_MODULE_1__['default'])(
            Object(_utils_trim__WEBPACK_IMPORTED_MODULE_2__['default'])(rawModalName)
          );

          if (modalName === '') {
            Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
              'modalName cannot be an empty string or a single / in .modalview()'
            );
            return;
          }

          if (typeof ga === 'function') {
            var path = '/modal/'.concat(modalName);

            _gaCommand(trackerNames, 'send', 'pageview', path);

            if (_debug) {
              Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                "called ga('send', 'pageview', path);"
              );
              Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                'with path: '.concat(path)
              );
            }
          }
        }
        /**
         * timing:
         * GA timing
         * @param args.category {String} required
         * @param args.variable {String} required
         * @param args.value  {Int}  required
         * @param args.label  {String} required
         * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
         */

        function timing() {
          var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            category = _ref.category,
            variable = _ref.variable,
            value = _ref.value,
            label = _ref.label;

          var trackerNames = arguments.length > 1 ? arguments[1] : undefined;

          if (typeof ga === 'function') {
            if (!category || !variable || !value || typeof value !== 'number') {
              Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                'args.category, args.variable ' +
                  'AND args.value are required in timing() ' +
                  'AND args.value has to be a number'
              );
              return;
            } // Required Fields

            var fieldObject = {
              hitType: 'timing',
              timingCategory: _format(category),
              timingVar: _format(variable),
              timingValue: value,
            };

            if (label) {
              fieldObject.timingLabel = _format(label);
            }

            send(fieldObject, trackerNames);
          }
        }
        /**
         * event:
         * GA event tracking
         * @param args.category {String} required
         * @param args.action {String} required
         * @param args.label {String} optional
         * @param args.value {Int} optional
         * @param args.nonInteraction {boolean} optional
         * @param args.transport {string} optional
         * @param {{action: string, category: string}} trackerNames - (optional) a list of extra trackers to run the command on
         */

        function event() {
          var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            category = _ref2.category,
            action = _ref2.action,
            label = _ref2.label,
            value = _ref2.value,
            nonInteraction = _ref2.nonInteraction,
            transport = _ref2.transport,
            args = _objectWithoutProperties(_ref2, [
              'category',
              'action',
              'label',
              'value',
              'nonInteraction',
              'transport',
            ]);

          var trackerNames = arguments.length > 1 ? arguments[1] : undefined;

          if (typeof ga === 'function') {
            // Simple Validation
            if (!category || !action) {
              Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                'args.category AND args.action are required in event()'
              );
              return;
            } // Required Fields

            var fieldObject = {
              hitType: 'event',
              eventCategory: _format(category),
              eventAction: _format(action),
            }; // Optional Fields

            if (label) {
              fieldObject.eventLabel = _format(label);
            }

            if (typeof value !== 'undefined') {
              if (typeof value !== 'number') {
                Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                  'Expected `args.value` arg to be a Number.'
                );
              } else {
                fieldObject.eventValue = value;
              }
            }

            if (typeof nonInteraction !== 'undefined') {
              if (typeof nonInteraction !== 'boolean') {
                Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                  '`args.nonInteraction` must be a boolean.'
                );
              } else {
                fieldObject.nonInteraction = nonInteraction;
              }
            }

            if (typeof transport !== 'undefined') {
              if (typeof transport !== 'string') {
                Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                  '`args.transport` must be a string.'
                );
              } else {
                if (['beacon', 'xhr', 'image'].indexOf(transport) === -1) {
                  Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                    '`args.transport` must be either one of these values: `beacon`, `xhr` or `image`'
                  );
                }

                fieldObject.transport = transport;
              }
            }

            Object.keys(args)
              .filter(function (key) {
                return key.substr(0, 'dimension'.length) === 'dimension';
              })
              .forEach(function (key) {
                fieldObject[key] = args[key];
              });
            Object.keys(args)
              .filter(function (key) {
                return key.substr(0, 'metric'.length) === 'metric';
              })
              .forEach(function (key) {
                fieldObject[key] = args[key];
              }); // Send to GA

            send(fieldObject, trackerNames);
          }
        }
        /**
         * exception:
         * GA exception tracking
         * @param args.description {String} optional
         * @param args.fatal {boolean} optional
         * @param {Array} trackerNames - (optional) a list of extra trackers to run the command on
         */

        function exception(_ref3, trackerNames) {
          var description = _ref3.description,
            fatal = _ref3.fatal;

          if (typeof ga === 'function') {
            // Required Fields
            var fieldObject = {
              hitType: 'exception',
            }; // Optional Fields

            if (description) {
              fieldObject.exDescription = _format(description);
            }

            if (typeof fatal !== 'undefined') {
              if (typeof fatal !== 'boolean') {
                Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                  '`args.fatal` must be a boolean.'
                );
              } else {
                fieldObject.exFatal = fatal;
              }
            } // Send to GA

            send(fieldObject, trackerNames);
          }
        }
        var plugin = {
          /**
           * require:
           * GA requires a plugin
           * @param name {String} e.g. 'ecommerce' or 'myplugin'
           * @param options {Object} optional e.g {path: '/log', debug: true}
           * @param trackerName {String} optional e.g 'trackerName'
           */
          require: function require(rawName, options, trackerName) {
            if (typeof ga === 'function') {
              // Required Fields
              if (!rawName) {
                Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                  '`name` is required in .require()'
                );
                return;
              }

              var name = Object(_utils_trim__WEBPACK_IMPORTED_MODULE_2__['default'])(rawName);

              if (name === '') {
                Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                  '`name` cannot be an empty string in .require()'
                );
                return;
              }

              var requireString = trackerName ? ''.concat(trackerName, '.require') : 'require'; // Optional Fields

              if (options) {
                if (_typeof(options) !== 'object') {
                  Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                    'Expected `options` arg to be an Object'
                  );
                  return;
                }

                if (Object.keys(options).length === 0) {
                  Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                    'Empty `options` given to .require()'
                  );
                }

                ga(requireString, name, options);

                if (_debug) {
                  Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                    "called ga('require', '".concat(name, "', ").concat(JSON.stringify(options))
                  );
                }
              } else {
                ga(requireString, name);

                if (_debug) {
                  Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                    "called ga('require', '".concat(name, "');")
                  );
                }
              }
            }
          },

          /**
           * execute:
           * GA execute action for plugin
           * Takes variable number of arguments
           * @param pluginName {String} e.g. 'ecommerce' or 'myplugin'
           * @param action {String} e.g. 'addItem' or 'myCustomAction'
           * @param actionType {String} optional e.g. 'detail'
           * @param payload {Object} optional e.g { id: '1x5e', name : 'My product to track' }
           */
          execute: function execute(pluginName, action) {
            var payload;
            var actionType;

            for (
              var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2;
              _key3 < _len3;
              _key3++
            ) {
              args[_key3 - 2] = arguments[_key3];
            }

            if (args.length === 1) {
              payload = args[0];
            } else {
              actionType = args[0];
              payload = args[1];
            }

            if (typeof ga === 'function') {
              if (typeof pluginName !== 'string') {
                Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                  'Expected `pluginName` arg to be a String.'
                );
              } else if (typeof action !== 'string') {
                Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                  'Expected `action` arg to be a String.'
                );
              } else {
                var command = ''.concat(pluginName, ':').concat(action);
                payload = payload || null;

                if (actionType && payload) {
                  ga(command, actionType, payload);

                  if (_debug) {
                    Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                      "called ga('".concat(command, "');")
                    );
                    Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                      'actionType: "'
                        .concat(actionType, '" with payload: ')
                        .concat(JSON.stringify(payload))
                    );
                  }
                } else if (payload) {
                  ga(command, payload);

                  if (_debug) {
                    Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                      "called ga('".concat(command, "');")
                    );
                    Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                      'with payload: '.concat(JSON.stringify(payload))
                    );
                  }
                } else {
                  ga(command);

                  if (_debug) {
                    Object(_utils_console_log__WEBPACK_IMPORTED_MODULE_5__['default'])(
                      "called ga('".concat(command, "');")
                    );
                  }
                }
              }
            }
          },
        };
        /**
         * outboundLink:
         * GA outboundLink tracking
         * @param args.label {String} e.g. url, or 'Create an Account'
         * @param {function} hitCallback - Called after processing a hit.
         */

        function outboundLink(args, hitCallback, trackerNames) {
          if (typeof hitCallback !== 'function') {
            Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
              'hitCallback function is required'
            );
            return;
          }

          if (typeof ga === 'function') {
            // Simple Validation
            if (!args || !args.label) {
              Object(_utils_console_warn__WEBPACK_IMPORTED_MODULE_4__['default'])(
                'args.label is required in outboundLink()'
              );
              return;
            } // Required Fields

            var fieldObject = {
              hitType: 'event',
              eventCategory: 'Outbound',
              eventAction: 'Click',
              eventLabel: _format(args.label),
            };
            var safetyCallbackCalled = false;

            var safetyCallback = function safetyCallback() {
              // This prevents a delayed response from GA
              // causing hitCallback from being fired twice
              safetyCallbackCalled = true;
              hitCallback();
            }; // Using a timeout to ensure the execution of critical application code
            // in the case when the GA server might be down
            // or an ad blocker prevents sending the data
            // register safety net timeout:

            var t = setTimeout(safetyCallback, 250);

            var clearableCallbackForGA = function clearableCallbackForGA() {
              clearTimeout(t);

              if (!safetyCallbackCalled) {
                hitCallback();
              }
            };

            fieldObject.hitCallback = clearableCallbackForGA; // Send to GA

            send(fieldObject, trackerNames);
          } else {
            // if ga is not defined, return the callback so the application
            // continues to work as expected
            setTimeout(hitCallback, 0);
          }
        }
        var testModeAPI = _utils_testModeAPI__WEBPACK_IMPORTED_MODULE_6__['default'];
        /* harmony default export */ __webpack_exports__['default'] = {
          initialize: initialize,
          ga: ga,
          set: set,
          send: send,
          pageview: pageview,
          modalview: modalview,
          timing: timing,
          event: event,
          exception: exception,
          plugin: plugin,
          outboundLink: outboundLink,
          testModeAPI: _utils_testModeAPI__WEBPACK_IMPORTED_MODULE_6__['default'],
        };

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/index.js':
      /*!*************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/index.js ***!
  \*************************************************/
      /*! exports provided: initialize, addTrackers, ga, set, send, pageview, modalview, timing, event, exception, plugin, outboundLink, testModeAPI, OutboundLink, default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'initialize',
          function () {
            return initialize;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'addTrackers',
          function () {
            return addTrackers;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'ga',
          function () {
            return ga;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'set',
          function () {
            return set;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'send',
          function () {
            return send;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'pageview',
          function () {
            return pageview;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'modalview',
          function () {
            return modalview;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'timing',
          function () {
            return timing;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'event',
          function () {
            return event;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'exception',
          function () {
            return exception;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'plugin',
          function () {
            return plugin;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'outboundLink',
          function () {
            return outboundLink;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'testModeAPI',
          function () {
            return testModeAPI;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'OutboundLink',
          function () {
            return OutboundLink;
          }
        );
        /* harmony import */ var _components_OutboundLink__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./components/OutboundLink */ './node_modules/react-ga/dist/esm/components/OutboundLink.js'
        );
        /* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./core */ './node_modules/react-ga/dist/esm/core.js'
        );
        function ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
            keys.push.apply(keys, symbols);
          }
          return keys;
        }

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            if (i % 2) {
              ownKeys(Object(source), true).forEach(function (key) {
                _defineProperty(target, key, source[key]);
              });
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
            } else {
              ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
              });
            }
          }
          return target;
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        var initialize = _core__WEBPACK_IMPORTED_MODULE_1__['initialize'];

        var addTrackers = _core__WEBPACK_IMPORTED_MODULE_1__['addTrackers'];

        var ga = _core__WEBPACK_IMPORTED_MODULE_1__['ga'];

        var set = _core__WEBPACK_IMPORTED_MODULE_1__['set'];

        var send = _core__WEBPACK_IMPORTED_MODULE_1__['send'];

        var pageview = _core__WEBPACK_IMPORTED_MODULE_1__['pageview'];

        var modalview = _core__WEBPACK_IMPORTED_MODULE_1__['modalview'];

        var timing = _core__WEBPACK_IMPORTED_MODULE_1__['timing'];

        var event = _core__WEBPACK_IMPORTED_MODULE_1__['event'];

        var exception = _core__WEBPACK_IMPORTED_MODULE_1__['exception'];

        var plugin = _core__WEBPACK_IMPORTED_MODULE_1__['plugin'];

        var outboundLink = _core__WEBPACK_IMPORTED_MODULE_1__['outboundLink'];

        var testModeAPI = _core__WEBPACK_IMPORTED_MODULE_1__['testModeAPI'];

        _components_OutboundLink__WEBPACK_IMPORTED_MODULE_0__['default'].origTrackLink =
          _components_OutboundLink__WEBPACK_IMPORTED_MODULE_0__['default'].trackLink;
        _components_OutboundLink__WEBPACK_IMPORTED_MODULE_0__['default'].trackLink =
          _core__WEBPACK_IMPORTED_MODULE_1__['outboundLink'];
        var OutboundLink = _components_OutboundLink__WEBPACK_IMPORTED_MODULE_0__['default'];
        /* harmony default export */ __webpack_exports__['default'] = _objectSpread(
          _objectSpread({}, _core__WEBPACK_IMPORTED_MODULE_1__),
          {},
          {
            OutboundLink: OutboundLink,
          }
        );

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/utils/console/log.js':
      /*!*************************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/utils/console/log.js ***!
  \*************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return log;
          }
        );
        function log(s) {
          console.info('[react-ga]', s);
        }

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/utils/console/warn.js':
      /*!**************************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/utils/console/warn.js ***!
  \**************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return warn;
          }
        );
        function warn(s) {
          console.warn('[react-ga]', s);
        }

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/utils/format.js':
      /*!********************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/utils/format.js ***!
  \********************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return format;
          }
        );
        /* harmony import */ var _redactEmail__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./redactEmail */ './node_modules/react-ga/dist/esm/utils/redactEmail.js'
        );
        /* harmony import */ var _toTitleCase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./toTitleCase */ './node_modules/react-ga/dist/esm/utils/toTitleCase.js'
        );

        function format() {
          var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
          var titleCase = arguments.length > 1 ? arguments[1] : undefined;
          var redactingEmail =
            arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

          var _str = s || '';

          if (titleCase) {
            _str = Object(_toTitleCase__WEBPACK_IMPORTED_MODULE_1__['default'])(s);
          }

          if (redactingEmail) {
            _str = Object(_redactEmail__WEBPACK_IMPORTED_MODULE_0__['default'])(_str);
          }

          return _str;
        }

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/utils/loadGA.js':
      /*!********************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/utils/loadGA.js ***!
  \********************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */ __webpack_exports__['default'] = function (options) {
          var gaAddress = 'https://www.google-analytics.com/analytics.js';

          if (options && options.gaAddress) {
            gaAddress = options.gaAddress;
          } else if (options && options.debug) {
            gaAddress = 'https://www.google-analytics.com/analytics_debug.js';
          } // https://developers.google.com/analytics/devguides/collection/analyticsjs/

          /* eslint-disable */

          (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r;
            (i[r] =
              i[r] ||
              function () {
                (i[r].q = i[r].q || []).push(arguments);
              }),
              (i[r].l = 1 * new Date());
            (a = s.createElement(o)), (m = s.getElementsByTagName(o)[0]);
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m);
          })(window, document, 'script', gaAddress, 'ga');
          /* eslint-enable */
        };

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/utils/mightBeEmail.js':
      /*!**************************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/utils/mightBeEmail.js ***!
  \**************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return mightBeEmail;
          }
        );
        // See if s could be an email address. We don't want to send personal data like email.
        // https://support.google.com/analytics/answer/2795983?hl=en
        function mightBeEmail(s) {
          // There's no point trying to validate rfc822 fully, just look for ...@...
          return typeof s === 'string' && s.indexOf('@') !== -1;
        }

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/utils/redactEmail.js':
      /*!*************************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/utils/redactEmail.js ***!
  \*************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return redactEmail;
          }
        );
        /* harmony import */ var _console_warn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./console/warn */ './node_modules/react-ga/dist/esm/utils/console/warn.js'
        );
        /* harmony import */ var _mightBeEmail__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./mightBeEmail */ './node_modules/react-ga/dist/esm/utils/mightBeEmail.js'
        );

        var redacted = 'REDACTED (Potential Email Address)';
        function redactEmail(string) {
          if (Object(_mightBeEmail__WEBPACK_IMPORTED_MODULE_1__['default'])(string)) {
            Object(_console_warn__WEBPACK_IMPORTED_MODULE_0__['default'])(
              'This arg looks like an email address, redacting.'
            );
            return redacted;
          }

          return string;
        }

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/utils/removeLeadingSlash.js':
      /*!********************************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/utils/removeLeadingSlash.js ***!
  \********************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return removeLeadingSlash;
          }
        );
        function removeLeadingSlash(string) {
          if (string.substring(0, 1) === '/') {
            return string.substring(1);
          }

          return string;
        }

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/utils/testModeAPI.js':
      /*!*************************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/utils/testModeAPI.js ***!
  \*************************************************************/
      /*! exports provided: gaCalls, default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'gaCalls',
          function () {
            return gaCalls;
          }
        );
        var gaCalls = [];
        /* harmony default export */ __webpack_exports__['default'] = {
          calls: gaCalls,
          ga: function ga() {
            for (
              var _len = arguments.length, args = new Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            gaCalls.push([].concat(args));
          },
          resetCalls: function resetCalls() {
            gaCalls.length = 0;
          },
        };

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/utils/toTitleCase.js':
      /*!*************************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/utils/toTitleCase.js ***!
  \*************************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return toTitleCase;
          }
        );
        /* harmony import */ var _trim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./trim */ './node_modules/react-ga/dist/esm/utils/trim.js'
        );
        /**
         * To Title Case 2.1 - http://individed.com/code/to-title-case/
         * Copyright 2008-2013 David Gouch. Licensed under the MIT License.
         * https://github.com/gouch/to-title-case
         */

        var smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i; // test

        function toTitleCase(string) {
          return Object(_trim__WEBPACK_IMPORTED_MODULE_0__['default'])(string).replace(
            /[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g,
            function (match, index, title) {
              if (
                index > 0 &&
                index + match.length !== title.length &&
                match.search(smallWords) > -1 &&
                title.charAt(index - 2) !== ':' &&
                (title.charAt(index + match.length) !== '-' || title.charAt(index - 1) === '-') &&
                title.charAt(index - 1).search(/[^\s-]/) < 0
              ) {
                return match.toLowerCase();
              }

              if (match.substr(1).search(/[A-Z]|\../) > -1) {
                return match;
              }

              return match.charAt(0).toUpperCase() + match.substr(1);
            }
          );
        }

        /***/
      },

    /***/ './node_modules/react-ga/dist/esm/utils/trim.js':
      /*!******************************************************!*\
  !*** ./node_modules/react-ga/dist/esm/utils/trim.js ***!
  \******************************************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'default',
          function () {
            return trim;
          }
        );
        // GA strings need to have leading/trailing whitespace trimmed, and not all
        // browsers have String.prototoype.trim().
        function trim(s) {
          return s && s.replace(/^\s+|\s+$/g, '');
        }

        /***/
      },

    /***/ './node_modules/react-is/cjs/react-is.development.js':
      /*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /** @license React v16.13.1
         * react-is.development.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (true) {
          (function () {
            'use strict';

            // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
            // nor polyfill, then a plain number is used for performance.
            var hasSymbol = typeof Symbol === 'function' && Symbol.for;
            var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
            var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
            var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
            var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
            var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
            var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
            var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
            // (unstable) APIs that have been removed. Can we remove the symbols?

            var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
            var REACT_CONCURRENT_MODE_TYPE = hasSymbol
              ? Symbol.for('react.concurrent_mode')
              : 0xeacf;
            var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
            var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
            var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
            var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
            var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
            var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
            var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
            var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
            var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

            function isValidElementType(type) {
              return (
                typeof type === 'string' ||
                typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
                type === REACT_FRAGMENT_TYPE ||
                type === REACT_CONCURRENT_MODE_TYPE ||
                type === REACT_PROFILER_TYPE ||
                type === REACT_STRICT_MODE_TYPE ||
                type === REACT_SUSPENSE_TYPE ||
                type === REACT_SUSPENSE_LIST_TYPE ||
                (typeof type === 'object' &&
                  type !== null &&
                  (type.$$typeof === REACT_LAZY_TYPE ||
                    type.$$typeof === REACT_MEMO_TYPE ||
                    type.$$typeof === REACT_PROVIDER_TYPE ||
                    type.$$typeof === REACT_CONTEXT_TYPE ||
                    type.$$typeof === REACT_FORWARD_REF_TYPE ||
                    type.$$typeof === REACT_FUNDAMENTAL_TYPE ||
                    type.$$typeof === REACT_RESPONDER_TYPE ||
                    type.$$typeof === REACT_SCOPE_TYPE ||
                    type.$$typeof === REACT_BLOCK_TYPE))
              );
            }

            function typeOf(object) {
              if (typeof object === 'object' && object !== null) {
                var $$typeof = object.$$typeof;

                switch ($$typeof) {
                  case REACT_ELEMENT_TYPE:
                    var type = object.type;

                    switch (type) {
                      case REACT_ASYNC_MODE_TYPE:
                      case REACT_CONCURRENT_MODE_TYPE:
                      case REACT_FRAGMENT_TYPE:
                      case REACT_PROFILER_TYPE:
                      case REACT_STRICT_MODE_TYPE:
                      case REACT_SUSPENSE_TYPE:
                        return type;

                      default:
                        var $$typeofType = type && type.$$typeof;

                        switch ($$typeofType) {
                          case REACT_CONTEXT_TYPE:
                          case REACT_FORWARD_REF_TYPE:
                          case REACT_LAZY_TYPE:
                          case REACT_MEMO_TYPE:
                          case REACT_PROVIDER_TYPE:
                            return $$typeofType;

                          default:
                            return $$typeof;
                        }
                    }

                  case REACT_PORTAL_TYPE:
                    return $$typeof;
                }
              }

              return undefined;
            } // AsyncMode is deprecated along with isAsyncMode

            var AsyncMode = REACT_ASYNC_MODE_TYPE;
            var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
            var ContextConsumer = REACT_CONTEXT_TYPE;
            var ContextProvider = REACT_PROVIDER_TYPE;
            var Element = REACT_ELEMENT_TYPE;
            var ForwardRef = REACT_FORWARD_REF_TYPE;
            var Fragment = REACT_FRAGMENT_TYPE;
            var Lazy = REACT_LAZY_TYPE;
            var Memo = REACT_MEMO_TYPE;
            var Portal = REACT_PORTAL_TYPE;
            var Profiler = REACT_PROFILER_TYPE;
            var StrictMode = REACT_STRICT_MODE_TYPE;
            var Suspense = REACT_SUSPENSE_TYPE;
            var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

            function isAsyncMode(object) {
              {
                if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                  hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

                  console['warn'](
                    'The ReactIs.isAsyncMode() alias has been deprecated, ' +
                      'and will be removed in React 17+. Update your code to use ' +
                      'ReactIs.isConcurrentMode() instead. It has the exact same API.'
                  );
                }
              }

              return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
            }
            function isConcurrentMode(object) {
              return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
            }
            function isContextConsumer(object) {
              return typeOf(object) === REACT_CONTEXT_TYPE;
            }
            function isContextProvider(object) {
              return typeOf(object) === REACT_PROVIDER_TYPE;
            }
            function isElement(object) {
              return (
                typeof object === 'object' &&
                object !== null &&
                object.$$typeof === REACT_ELEMENT_TYPE
              );
            }
            function isForwardRef(object) {
              return typeOf(object) === REACT_FORWARD_REF_TYPE;
            }
            function isFragment(object) {
              return typeOf(object) === REACT_FRAGMENT_TYPE;
            }
            function isLazy(object) {
              return typeOf(object) === REACT_LAZY_TYPE;
            }
            function isMemo(object) {
              return typeOf(object) === REACT_MEMO_TYPE;
            }
            function isPortal(object) {
              return typeOf(object) === REACT_PORTAL_TYPE;
            }
            function isProfiler(object) {
              return typeOf(object) === REACT_PROFILER_TYPE;
            }
            function isStrictMode(object) {
              return typeOf(object) === REACT_STRICT_MODE_TYPE;
            }
            function isSuspense(object) {
              return typeOf(object) === REACT_SUSPENSE_TYPE;
            }

            exports.AsyncMode = AsyncMode;
            exports.ConcurrentMode = ConcurrentMode;
            exports.ContextConsumer = ContextConsumer;
            exports.ContextProvider = ContextProvider;
            exports.Element = Element;
            exports.ForwardRef = ForwardRef;
            exports.Fragment = Fragment;
            exports.Lazy = Lazy;
            exports.Memo = Memo;
            exports.Portal = Portal;
            exports.Profiler = Profiler;
            exports.StrictMode = StrictMode;
            exports.Suspense = Suspense;
            exports.isAsyncMode = isAsyncMode;
            exports.isConcurrentMode = isConcurrentMode;
            exports.isContextConsumer = isContextConsumer;
            exports.isContextProvider = isContextProvider;
            exports.isElement = isElement;
            exports.isForwardRef = isForwardRef;
            exports.isFragment = isFragment;
            exports.isLazy = isLazy;
            exports.isMemo = isMemo;
            exports.isPortal = isPortal;
            exports.isProfiler = isProfiler;
            exports.isStrictMode = isStrictMode;
            exports.isSuspense = isSuspense;
            exports.isValidElementType = isValidElementType;
            exports.typeOf = typeOf;
          })();
        }

        /***/
      },

    /***/ './node_modules/react-is/index.js':
      /*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        if (false) {
        } else {
          module.exports = __webpack_require__(
            /*! ./cjs/react-is.development.js */ './node_modules/react-is/cjs/react-is.development.js'
          );
        }

        /***/
      },

    /***/ './node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js':
      /*!****************************************************************************!*\
  !*** ./node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js ***!
  \****************************************************************************/
      /*! exports provided: polyfill */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'polyfill',
          function () {
            return polyfill;
          }
        );
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        function componentWillMount() {
          // Call this.constructor.gDSFP to support sub-classes.
          var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
          if (state !== null && state !== undefined) {
            this.setState(state);
          }
        }

        function componentWillReceiveProps(nextProps) {
          // Call this.constructor.gDSFP to support sub-classes.
          // Use the setState() updater to ensure state isn't stale in certain edge cases.
          function updater(prevState) {
            var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
            return state !== null && state !== undefined ? state : null;
          }
          // Binding "this" is important for shallow renderer support.
          this.setState(updater.bind(this));
        }

        function componentWillUpdate(nextProps, nextState) {
          try {
            var prevProps = this.props;
            var prevState = this.state;
            this.props = nextProps;
            this.state = nextState;
            this.__reactInternalSnapshotFlag = true;
            this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
          } finally {
            this.props = prevProps;
            this.state = prevState;
          }
        }

        // React may warn about cWM/cWRP/cWU methods being deprecated.
        // Add a flag to suppress these warnings for this special case.
        componentWillMount.__suppressDeprecationWarning = true;
        componentWillReceiveProps.__suppressDeprecationWarning = true;
        componentWillUpdate.__suppressDeprecationWarning = true;

        function polyfill(Component) {
          var prototype = Component.prototype;

          if (!prototype || !prototype.isReactComponent) {
            throw new Error('Can only polyfill class components');
          }

          if (
            typeof Component.getDerivedStateFromProps !== 'function' &&
            typeof prototype.getSnapshotBeforeUpdate !== 'function'
          ) {
            return Component;
          }

          // If new component APIs are defined, "unsafe" lifecycles won't be called.
          // Error if any of these lifecycles are present,
          // Because they would work differently between older and newer (16.3+) versions of React.
          var foundWillMountName = null;
          var foundWillReceivePropsName = null;
          var foundWillUpdateName = null;
          if (typeof prototype.componentWillMount === 'function') {
            foundWillMountName = 'componentWillMount';
          } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
            foundWillMountName = 'UNSAFE_componentWillMount';
          }
          if (typeof prototype.componentWillReceiveProps === 'function') {
            foundWillReceivePropsName = 'componentWillReceiveProps';
          } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
            foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
          }
          if (typeof prototype.componentWillUpdate === 'function') {
            foundWillUpdateName = 'componentWillUpdate';
          } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
            foundWillUpdateName = 'UNSAFE_componentWillUpdate';
          }
          if (
            foundWillMountName !== null ||
            foundWillReceivePropsName !== null ||
            foundWillUpdateName !== null
          ) {
            var componentName = Component.displayName || Component.name;
            var newApiName =
              typeof Component.getDerivedStateFromProps === 'function'
                ? 'getDerivedStateFromProps()'
                : 'getSnapshotBeforeUpdate()';

            throw Error(
              'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
                componentName +
                ' uses ' +
                newApiName +
                ' but also contains the following legacy lifecycles:' +
                (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
                (foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '') +
                (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
                '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
                'https://fb.me/react-async-component-lifecycle-hooks'
            );
          }

          // React <= 16.2 does not support static getDerivedStateFromProps.
          // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
          // Newer versions of React will ignore these lifecycles if gDSFP exists.
          if (typeof Component.getDerivedStateFromProps === 'function') {
            prototype.componentWillMount = componentWillMount;
            prototype.componentWillReceiveProps = componentWillReceiveProps;
          }

          // React <= 16.2 does not support getSnapshotBeforeUpdate.
          // As a workaround, use cWU to invoke the new lifecycle.
          // Newer versions of React will ignore that lifecycle if gSBU exists.
          if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
            if (typeof prototype.componentDidUpdate !== 'function') {
              throw new Error(
                'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
              );
            }

            prototype.componentWillUpdate = componentWillUpdate;

            var componentDidUpdate = prototype.componentDidUpdate;

            prototype.componentDidUpdate = function componentDidUpdatePolyfill(
              prevProps,
              prevState,
              maybeSnapshot
            ) {
              // 16.3+ will not execute our will-update method;
              // It will pass a snapshot value to did-update though.
              // Older versions will require our polyfilled will-update value.
              // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
              // Because for <= 15.x versions this might be a "prevContext" object.
              // We also can't just check "__reactInternalSnapshot",
              // Because get-snapshot might return a falsy value.
              // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
              var snapshot = this.__reactInternalSnapshotFlag
                ? this.__reactInternalSnapshot
                : maybeSnapshot;

              componentDidUpdate.call(this, prevProps, prevState, snapshot);
            };
          }

          return Component;
        }

        /***/
      },

    /***/ './node_modules/react-spring/web.js':
      /*!******************************************!*\
  !*** ./node_modules/react-spring/web.js ***!
  \******************************************/
      /*! exports provided: apply, config, update, animated, a, interpolate, Globals, useSpring, useTrail, useTransition, useChain, useSprings */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'apply',
          function () {
            return apply;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'config',
          function () {
            return config;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'update',
          function () {
            return update;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'animated',
          function () {
            return extendedAnimated;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, 'a', function () {
          return extendedAnimated;
        });
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'interpolate',
          function () {
            return interpolate$1;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'Globals',
          function () {
            return Globals;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'useSpring',
          function () {
            return useSpring;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'useTrail',
          function () {
            return useTrail;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'useTransition',
          function () {
            return useTransition;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'useChain',
          function () {
            return useChain;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'useSprings',
          function () {
            return useSprings;
          }
        );
        /* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime/helpers/esm/extends */ './node_modules/@babel/runtime/helpers/esm/extends.js'
        );
        /* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ './node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js'
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! react */ './node_modules/react/index.js'
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_2__
        );

        const is = {
          arr: Array.isArray,
          obj: (a) => Object.prototype.toString.call(a) === '[object Object]',
          fun: (a) => typeof a === 'function',
          str: (a) => typeof a === 'string',
          num: (a) => typeof a === 'number',
          und: (a) => a === void 0,
          nul: (a) => a === null,
          set: (a) => a instanceof Set,
          map: (a) => a instanceof Map,

          equ(a, b) {
            if (typeof a !== typeof b) return false;
            if (is.str(a) || is.num(a)) return a === b;
            if (is.obj(a) && is.obj(b) && Object.keys(a).length + Object.keys(b).length === 0)
              return true;
            let i;

            for (i in a) if (!(i in b)) return false;

            for (i in b) if (a[i] !== b[i]) return false;

            return is.und(i) ? a === b : true;
          },
        };
        function merge(target, lowercase) {
          if (lowercase === void 0) {
            lowercase = true;
          }

          return (object) =>
            (is.arr(object) ? object : Object.keys(object)).reduce((acc, element) => {
              const key = lowercase ? element[0].toLowerCase() + element.substring(1) : element;
              acc[key] = target(key);
              return acc;
            }, target);
        }
        function useForceUpdate() {
          const _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__['useState'])(false),
            f = _useState[1];

          const forceUpdate = Object(react__WEBPACK_IMPORTED_MODULE_2__['useCallback'])(
            () => f((v) => !v),
            []
          );
          return forceUpdate;
        }
        function withDefault(value, defaultValue) {
          return is.und(value) || is.nul(value) ? defaultValue : value;
        }
        function toArray(a) {
          return !is.und(a) ? (is.arr(a) ? a : [a]) : [];
        }
        function callProp(obj) {
          for (
            var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
            _key < _len;
            _key++
          ) {
            args[_key - 1] = arguments[_key];
          }

          return is.fun(obj) ? obj(...args) : obj;
        }

        function getForwardProps(props) {
          const to = props.to,
            from = props.from,
            config = props.config,
            onStart = props.onStart,
            onRest = props.onRest,
            onFrame = props.onFrame,
            children = props.children,
            reset = props.reset,
            reverse = props.reverse,
            force = props.force,
            immediate = props.immediate,
            delay = props.delay,
            attach = props.attach,
            destroyed = props.destroyed,
            interpolateTo = props.interpolateTo,
            ref = props.ref,
            lazy = props.lazy,
            forward = Object(
              _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
                'default'
              ]
            )(props, [
              'to',
              'from',
              'config',
              'onStart',
              'onRest',
              'onFrame',
              'children',
              'reset',
              'reverse',
              'force',
              'immediate',
              'delay',
              'attach',
              'destroyed',
              'interpolateTo',
              'ref',
              'lazy',
            ]);

          return forward;
        }

        function interpolateTo(props) {
          const forward = getForwardProps(props);
          if (is.und(forward))
            return Object(
              _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
            )(
              {
                to: forward,
              },
              props
            );
          const rest = Object.keys(props).reduce(
            (a, k) =>
              !is.und(forward[k])
                ? a
                : Object(
                    _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                  )({}, a, {
                    [k]: props[k],
                  }),
            {}
          );
          return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
            {
              to: forward,
            },
            rest
          );
        }
        function handleRef(ref, forward) {
          if (forward) {
            // If it's a function, assume it's a ref callback
            if (is.fun(forward)) forward(ref);
            else if (is.obj(forward)) {
              forward.current = ref;
            }
          }

          return ref;
        }

        class Animated {
          constructor() {
            this.payload = void 0;
            this.children = [];
          }

          getAnimatedValue() {
            return this.getValue();
          }

          getPayload() {
            return this.payload || this;
          }

          attach() {}

          detach() {}

          getChildren() {
            return this.children;
          }

          addChild(child) {
            if (this.children.length === 0) this.attach();
            this.children.push(child);
          }

          removeChild(child) {
            const index = this.children.indexOf(child);
            this.children.splice(index, 1);
            if (this.children.length === 0) this.detach();
          }
        }
        class AnimatedArray extends Animated {
          constructor() {
            super(...arguments);
            this.payload = [];

            this.attach = () =>
              this.payload.forEach((p) => p instanceof Animated && p.addChild(this));

            this.detach = () =>
              this.payload.forEach((p) => p instanceof Animated && p.removeChild(this));
          }
        }
        class AnimatedObject extends Animated {
          constructor() {
            super(...arguments);
            this.payload = {};

            this.attach = () =>
              Object.values(this.payload).forEach((s) => s instanceof Animated && s.addChild(this));

            this.detach = () =>
              Object.values(this.payload).forEach(
                (s) => s instanceof Animated && s.removeChild(this)
              );
          }

          getValue(animated) {
            if (animated === void 0) {
              animated = false;
            }

            const payload = {};

            for (const key in this.payload) {
              const value = this.payload[key];
              if (animated && !(value instanceof Animated)) continue;
              payload[key] =
                value instanceof Animated
                  ? value[animated ? 'getAnimatedValue' : 'getValue']()
                  : value;
            }

            return payload;
          }

          getAnimatedValue() {
            return this.getValue(true);
          }
        }

        let applyAnimatedValues;
        function injectApplyAnimatedValues(fn, transform) {
          applyAnimatedValues = {
            fn,
            transform,
          };
        }
        let colorNames;
        function injectColorNames(names) {
          colorNames = names;
        }
        let requestFrame = (cb) =>
          typeof window !== 'undefined' ? window.requestAnimationFrame(cb) : -1;
        let cancelFrame = (id) => {
          typeof window !== 'undefined' && window.cancelAnimationFrame(id);
        };
        function injectFrame(raf, caf) {
          requestFrame = raf;
          cancelFrame = caf;
        }
        let interpolation;
        function injectStringInterpolator(fn) {
          interpolation = fn;
        }
        let now = () => Date.now();
        function injectNow(nowFn) {
          now = nowFn;
        }
        let defaultElement;
        function injectDefaultElement(el) {
          defaultElement = el;
        }
        let animatedApi = (node) => node.current;
        function injectAnimatedApi(fn) {
          animatedApi = fn;
        }
        let createAnimatedStyle;
        function injectCreateAnimatedStyle(factory) {
          createAnimatedStyle = factory;
        }
        let manualFrameloop;
        function injectManualFrameloop(callback) {
          manualFrameloop = callback;
        }

        var Globals = /*#__PURE__*/ Object.freeze({
          get applyAnimatedValues() {
            return applyAnimatedValues;
          },
          injectApplyAnimatedValues: injectApplyAnimatedValues,
          get colorNames() {
            return colorNames;
          },
          injectColorNames: injectColorNames,
          get requestFrame() {
            return requestFrame;
          },
          get cancelFrame() {
            return cancelFrame;
          },
          injectFrame: injectFrame,
          get interpolation() {
            return interpolation;
          },
          injectStringInterpolator: injectStringInterpolator,
          get now() {
            return now;
          },
          injectNow: injectNow,
          get defaultElement() {
            return defaultElement;
          },
          injectDefaultElement: injectDefaultElement,
          get animatedApi() {
            return animatedApi;
          },
          injectAnimatedApi: injectAnimatedApi,
          get createAnimatedStyle() {
            return createAnimatedStyle;
          },
          injectCreateAnimatedStyle: injectCreateAnimatedStyle,
          get manualFrameloop() {
            return manualFrameloop;
          },
          injectManualFrameloop: injectManualFrameloop,
        });

        /**
         * Wraps the `style` property with `AnimatedStyle`.
         */

        class AnimatedProps extends AnimatedObject {
          constructor(props, callback) {
            super();
            this.update = void 0;
            this.payload = !props.style
              ? props
              : Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
                  {},
                  props,
                  {
                    style: createAnimatedStyle(props.style),
                  }
                );
            this.update = callback;
            this.attach();
          }
        }

        const isFunctionComponent = (val) =>
          is.fun(val) &&
          !(val.prototype instanceof react__WEBPACK_IMPORTED_MODULE_2___default.a.Component);

        const createAnimatedComponent = (Component) => {
          const AnimatedComponent = Object(react__WEBPACK_IMPORTED_MODULE_2__['forwardRef'])(
            (props, ref) => {
              const forceUpdate = useForceUpdate();
              const mounted = Object(react__WEBPACK_IMPORTED_MODULE_2__['useRef'])(true);
              const propsAnimated = Object(react__WEBPACK_IMPORTED_MODULE_2__['useRef'])(null);
              const node = Object(react__WEBPACK_IMPORTED_MODULE_2__['useRef'])(null);
              const attachProps = Object(react__WEBPACK_IMPORTED_MODULE_2__['useCallback'])(
                (props) => {
                  const oldPropsAnimated = propsAnimated.current;

                  const callback = () => {
                    let didUpdate = false;

                    if (node.current) {
                      didUpdate = applyAnimatedValues.fn(
                        node.current,
                        propsAnimated.current.getAnimatedValue()
                      );
                    }

                    if (!node.current || didUpdate === false) {
                      // If no referenced node has been found, or the update target didn't have a
                      // native-responder, then forceUpdate the animation ...
                      forceUpdate();
                    }
                  };

                  propsAnimated.current = new AnimatedProps(props, callback);
                  oldPropsAnimated && oldPropsAnimated.detach();
                },
                []
              );
              Object(react__WEBPACK_IMPORTED_MODULE_2__['useEffect'])(
                () => () => {
                  mounted.current = false;
                  propsAnimated.current && propsAnimated.current.detach();
                },
                []
              );
              Object(react__WEBPACK_IMPORTED_MODULE_2__['useImperativeHandle'])(ref, () =>
                animatedApi(node, mounted, forceUpdate)
              );
              attachProps(props);

              const _getValue = propsAnimated.current.getValue(),
                scrollTop = _getValue.scrollTop,
                scrollLeft = _getValue.scrollLeft,
                animatedProps = Object(
                  _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
                    'default'
                  ]
                )(_getValue, ['scrollTop', 'scrollLeft']); // Functions cannot have refs, see:
              // See: https://github.com/react-spring/react-spring/issues/569

              const refFn = isFunctionComponent(Component)
                ? undefined
                : (childRef) => (node.current = handleRef(childRef, ref));
              return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(
                Component,
                Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
                  {},
                  animatedProps,
                  {
                    ref: refFn,
                  }
                )
              );
            }
          );
          return AnimatedComponent;
        };

        let active = false;
        const controllers = new Set();

        const update = () => {
          if (!active) return false;
          let time = now();

          for (let controller of controllers) {
            let isActive = false;

            for (let configIdx = 0; configIdx < controller.configs.length; configIdx++) {
              let config = controller.configs[configIdx];
              let endOfAnimation, lastTime;

              for (let valIdx = 0; valIdx < config.animatedValues.length; valIdx++) {
                let animation = config.animatedValues[valIdx]; // If an animation is done, skip, until all of them conclude

                if (animation.done) continue;
                let from = config.fromValues[valIdx];
                let to = config.toValues[valIdx];
                let position = animation.lastPosition;
                let isAnimated = to instanceof Animated;
                let velocity = Array.isArray(config.initialVelocity)
                  ? config.initialVelocity[valIdx]
                  : config.initialVelocity;
                if (isAnimated) to = to.getValue(); // Conclude animation if it's either immediate, or from-values match end-state

                if (config.immediate) {
                  animation.setValue(to);
                  animation.done = true;
                  continue;
                } // Break animation when string values are involved

                if (typeof from === 'string' || typeof to === 'string') {
                  animation.setValue(to);
                  animation.done = true;
                  continue;
                }

                if (config.duration !== void 0) {
                  /** Duration easing */
                  position =
                    from +
                    config.easing((time - animation.startTime) / config.duration) * (to - from);
                  endOfAnimation = time >= animation.startTime + config.duration;
                } else if (config.decay) {
                  /** Decay easing */
                  position =
                    from +
                    (velocity / (1 - 0.998)) *
                      (1 - Math.exp(-(1 - 0.998) * (time - animation.startTime)));
                  endOfAnimation = Math.abs(animation.lastPosition - position) < 0.1;
                  if (endOfAnimation) to = position;
                } else {
                  /** Spring easing */
                  lastTime = animation.lastTime !== void 0 ? animation.lastTime : time;
                  velocity =
                    animation.lastVelocity !== void 0
                      ? animation.lastVelocity
                      : config.initialVelocity; // If we lost a lot of frames just jump to the end.

                  if (time > lastTime + 64) lastTime = time; // http://gafferongames.com/game-physics/fix-your-timestep/

                  let numSteps = Math.floor(time - lastTime);

                  for (let i = 0; i < numSteps; ++i) {
                    let force = -config.tension * (position - to);
                    let damping = -config.friction * velocity;
                    let acceleration = (force + damping) / config.mass;
                    velocity = velocity + (acceleration * 1) / 1000;
                    position = position + (velocity * 1) / 1000;
                  } // Conditions for stopping the spring animation

                  let isOvershooting =
                    config.clamp && config.tension !== 0
                      ? from < to
                        ? position > to
                        : position < to
                      : false;
                  let isVelocity = Math.abs(velocity) <= config.precision;
                  let isDisplacement =
                    config.tension !== 0 ? Math.abs(to - position) <= config.precision : true;
                  endOfAnimation = isOvershooting || (isVelocity && isDisplacement);
                  animation.lastVelocity = velocity;
                  animation.lastTime = time;
                } // Trails aren't done until their parents conclude

                if (isAnimated && !config.toValues[valIdx].done) endOfAnimation = false;

                if (endOfAnimation) {
                  // Ensure that we end up with a round value
                  if (animation.value !== to) position = to;
                  animation.done = true;
                } else isActive = true;

                animation.setValue(position);
                animation.lastPosition = position;
              } // Keep track of updated values only when necessary

              if (controller.props.onFrame)
                controller.values[config.name] = config.interpolation.getValue();
            } // Update callbacks in the end of the frame

            if (controller.props.onFrame) controller.props.onFrame(controller.values); // Either call onEnd or next frame

            if (!isActive) {
              controllers.delete(controller);
              controller.stop(true);
            }
          } // Loop over as long as there are controllers ...

          if (controllers.size) {
            if (manualFrameloop) manualFrameloop();
            else requestFrame(update);
          } else {
            active = false;
          }

          return active;
        };

        const start = (controller) => {
          if (!controllers.has(controller)) controllers.add(controller);

          if (!active) {
            active = true;
            if (manualFrameloop) requestFrame(manualFrameloop);
            else requestFrame(update);
          }
        };

        const stop = (controller) => {
          if (controllers.has(controller)) controllers.delete(controller);
        };

        function createInterpolator(range, output, extrapolate) {
          if (typeof range === 'function') {
            return range;
          }

          if (Array.isArray(range)) {
            return createInterpolator({
              range,
              output: output,
              extrapolate,
            });
          }

          if (interpolation && typeof range.output[0] === 'string') {
            return interpolation(range);
          }

          const config = range;
          const outputRange = config.output;
          const inputRange = config.range || [0, 1];
          const extrapolateLeft = config.extrapolateLeft || config.extrapolate || 'extend';
          const extrapolateRight = config.extrapolateRight || config.extrapolate || 'extend';

          const easing = config.easing || ((t) => t);

          return (input) => {
            const range = findRange(input, inputRange);
            return interpolate(
              input,
              inputRange[range],
              inputRange[range + 1],
              outputRange[range],
              outputRange[range + 1],
              easing,
              extrapolateLeft,
              extrapolateRight,
              config.map
            );
          };
        }

        function interpolate(
          input,
          inputMin,
          inputMax,
          outputMin,
          outputMax,
          easing,
          extrapolateLeft,
          extrapolateRight,
          map
        ) {
          let result = map ? map(input) : input; // Extrapolate

          if (result < inputMin) {
            if (extrapolateLeft === 'identity') return result;
            else if (extrapolateLeft === 'clamp') result = inputMin;
          }

          if (result > inputMax) {
            if (extrapolateRight === 'identity') return result;
            else if (extrapolateRight === 'clamp') result = inputMax;
          }

          if (outputMin === outputMax) return outputMin;
          if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax; // Input Range

          if (inputMin === -Infinity) result = -result;
          else if (inputMax === Infinity) result = result - inputMin;
          else result = (result - inputMin) / (inputMax - inputMin); // Easing

          result = easing(result); // Output Range

          if (outputMin === -Infinity) result = -result;
          else if (outputMax === Infinity) result = result + outputMin;
          else result = result * (outputMax - outputMin) + outputMin;
          return result;
        }

        function findRange(input, inputRange) {
          for (var i = 1; i < inputRange.length - 1; ++i) if (inputRange[i] >= input) break;

          return i - 1;
        }

        class AnimatedInterpolation extends AnimatedArray {
          constructor(parents, range, output, extrapolate) {
            super();
            this.calc = void 0;
            this.payload =
              parents instanceof AnimatedArray && !(parents instanceof AnimatedInterpolation)
                ? parents.getPayload()
                : Array.isArray(parents)
                ? parents
                : [parents];
            this.calc = createInterpolator(range, output, extrapolate);
          }

          getValue() {
            return this.calc(...this.payload.map((value) => value.getValue()));
          }

          updateConfig(range, output, extrapolate) {
            this.calc = createInterpolator(range, output, extrapolate);
          }

          interpolate(range, output, extrapolate) {
            return new AnimatedInterpolation(this, range, output, extrapolate);
          }
        }

        const interpolate$1 = (parents, range, output) =>
          parents && new AnimatedInterpolation(parents, range, output);

        const config = {
          default: {
            tension: 170,
            friction: 26,
          },
          gentle: {
            tension: 120,
            friction: 14,
          },
          wobbly: {
            tension: 180,
            friction: 12,
          },
          stiff: {
            tension: 210,
            friction: 20,
          },
          slow: {
            tension: 280,
            friction: 60,
          },
          molasses: {
            tension: 280,
            friction: 120,
          },
        };

        /** API
         *  useChain(references, timeSteps, timeFrame)
         */

        function useChain(refs, timeSteps, timeFrame) {
          if (timeFrame === void 0) {
            timeFrame = 1000;
          }

          const previous = Object(react__WEBPACK_IMPORTED_MODULE_2__['useRef'])();
          Object(react__WEBPACK_IMPORTED_MODULE_2__['useEffect'])(() => {
            if (is.equ(refs, previous.current))
              refs.forEach((_ref) => {
                let current = _ref.current;
                return current && current.start();
              });
            else if (timeSteps) {
              refs.forEach((_ref2, index) => {
                let current = _ref2.current;

                if (current) {
                  const ctrls = current.controllers;

                  if (ctrls.length) {
                    const t = timeFrame * timeSteps[index];
                    ctrls.forEach((ctrl) => {
                      ctrl.queue = ctrl.queue.map((e) =>
                        Object(
                          _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                        )({}, e, {
                          delay: e.delay + t,
                        })
                      );
                      ctrl.start();
                    });
                  }
                }
              });
            } else
              refs.reduce((q, _ref3, rI) => {
                let current = _ref3.current;
                return (q = q.then(() => current.start()));
              }, Promise.resolve());
            previous.current = refs;
          });
        }

        /**
         * Animated works by building a directed acyclic graph of dependencies
         * transparently when you render your Animated components.
         *
         *               new Animated.Value(0)
         *     .interpolate()        .interpolate()    new Animated.Value(1)
         *         opacity               translateY      scale
         *          style                         transform
         *         View#234                         style
         *                                         View#123
         *
         * A) Top Down phase
         * When an AnimatedValue is updated, we recursively go down through this
         * graph in order to find leaf nodes: the views that we flag as needing
         * an update.
         *
         * B) Bottom Up phase
         * When a view is flagged as needing an update, we recursively go back up
         * in order to build the new value that it needs. The reason why we need
         * this two-phases process is to deal with composite props such as
         * transform which can receive values from multiple parents.
         */
        function addAnimatedStyles(node, styles) {
          if ('update' in node) {
            styles.add(node);
          } else {
            node.getChildren().forEach((child) => addAnimatedStyles(child, styles));
          }
        }

        class AnimatedValue extends Animated {
          constructor(_value) {
            var _this;

            super();
            _this = this;
            this.animatedStyles = new Set();
            this.value = void 0;
            this.startPosition = void 0;
            this.lastPosition = void 0;
            this.lastVelocity = void 0;
            this.startTime = void 0;
            this.lastTime = void 0;
            this.done = false;

            this.setValue = function (value, flush) {
              if (flush === void 0) {
                flush = true;
              }

              _this.value = value;
              if (flush) _this.flush();
            };

            this.value = _value;
            this.startPosition = _value;
            this.lastPosition = _value;
          }

          flush() {
            if (this.animatedStyles.size === 0) {
              addAnimatedStyles(this, this.animatedStyles);
            }

            this.animatedStyles.forEach((animatedStyle) => animatedStyle.update());
          }

          clearStyles() {
            this.animatedStyles.clear();
          }

          getValue() {
            return this.value;
          }

          interpolate(range, output, extrapolate) {
            return new AnimatedInterpolation(this, range, output, extrapolate);
          }
        }

        class AnimatedValueArray extends AnimatedArray {
          constructor(values) {
            super();
            this.payload = values.map((n) => new AnimatedValue(n));
          }

          setValue(value, flush) {
            if (flush === void 0) {
              flush = true;
            }

            if (Array.isArray(value)) {
              if (value.length === this.payload.length) {
                value.forEach((v, i) => this.payload[i].setValue(v, flush));
              }
            } else {
              this.payload.forEach((p) => p.setValue(value, flush));
            }
          }

          getValue() {
            return this.payload.map((v) => v.getValue());
          }

          interpolate(range, output) {
            return new AnimatedInterpolation(this, range, output);
          }
        }

        let G = 0;

        class Controller {
          constructor() {
            this.id = void 0;
            this.idle = true;
            this.hasChanged = false;
            this.guid = 0;
            this.local = 0;
            this.props = {};
            this.merged = {};
            this.animations = {};
            this.interpolations = {};
            this.values = {};
            this.configs = [];
            this.listeners = [];
            this.queue = [];
            this.localQueue = void 0;

            this.getValues = () => this.interpolations;

            this.id = G++;
          }
          /** update(props)
           *  This function filters input props and creates an array of tasks which are executed in .start()
           *  Each task is allowed to carry a delay, which means it can execute asnychroneously */

          update(args) {
            //this._id = n + this.id
            if (!args) return this; // Extract delay and the to-prop from props

            const _ref = interpolateTo(args),
              _ref$delay = _ref.delay,
              delay = _ref$delay === void 0 ? 0 : _ref$delay,
              to = _ref.to,
              props = Object(
                _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
                  'default'
                ]
              )(_ref, ['delay', 'to']);

            if (is.arr(to) || is.fun(to)) {
              // If config is either a function or an array queue it up as is
              this.queue.push(
                Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
                  {},
                  props,
                  {
                    delay,
                    to,
                  }
                )
              );
            } else if (to) {
              // Otherwise go through each key since it could be delayed individually
              let ops = {};
              Object.entries(to).forEach((_ref2) => {
                let k = _ref2[0],
                  v = _ref2[1];

                // Fetch delay and create an entry, consisting of the to-props, the delay, and basic props
                const entry = Object(
                  _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                )(
                  {
                    to: {
                      [k]: v,
                    },
                    delay: callProp(delay, k),
                  },
                  props
                );

                const previous = ops[entry.delay] && ops[entry.delay].to;
                ops[entry.delay] = Object(
                  _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                )({}, ops[entry.delay], entry, {
                  to: Object(
                    _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                  )({}, previous, entry.to),
                });
              });
              this.queue = Object.values(ops);
            } // Sort queue, so that async calls go last

            this.queue = this.queue.sort((a, b) => a.delay - b.delay); // Diff the reduced props immediately (they'll contain the from-prop and some config)

            this.diff(props);
            return this;
          }
          /** start(onEnd)
           *  This function either executes a queue, if present, or starts the frameloop, which animates */

          start(onEnd) {
            // If a queue is present we must excecute it
            if (this.queue.length) {
              this.idle = false; // Updates can interrupt trailing queues, in that case we just merge values

              if (this.localQueue) {
                this.localQueue.forEach((_ref3) => {
                  let _ref3$from = _ref3.from,
                    from = _ref3$from === void 0 ? {} : _ref3$from,
                    _ref3$to = _ref3.to,
                    to = _ref3$to === void 0 ? {} : _ref3$to;
                  if (is.obj(from))
                    this.merged = Object(
                      _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                    )({}, from, this.merged);
                  if (is.obj(to))
                    this.merged = Object(
                      _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                    )({}, this.merged, to);
                });
              } // The guid helps us tracking frames, a new queue over an old one means an override
              // We discard async calls in that caseÍ

              const local = (this.local = ++this.guid);
              const queue = (this.localQueue = this.queue);
              this.queue = []; // Go through each entry and execute it

              queue.forEach((_ref4, index) => {
                let delay = _ref4.delay,
                  props = Object(
                    _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
                      'default'
                    ]
                  )(_ref4, ['delay']);

                const cb = (finished) => {
                  if (index === queue.length - 1 && local === this.guid && finished) {
                    this.idle = true;
                    if (this.props.onRest) this.props.onRest(this.merged);
                  }

                  if (onEnd) onEnd();
                }; // Entries can be delayed, ansyc or immediate

                let async = is.arr(props.to) || is.fun(props.to);

                if (delay) {
                  setTimeout(() => {
                    if (local === this.guid) {
                      if (async) this.runAsync(props, cb);
                      else this.diff(props).start(cb);
                    }
                  }, delay);
                } else if (async) this.runAsync(props, cb);
                else this.diff(props).start(cb);
              });
            } // Otherwise we kick of the frameloop
            else {
              if (is.fun(onEnd)) this.listeners.push(onEnd);
              if (this.props.onStart) this.props.onStart();
              start(this);
            }

            return this;
          }

          stop(finished) {
            this.listeners.forEach((onEnd) => onEnd(finished));
            this.listeners = [];
            return this;
          }
          /** Pause sets onEnd listeners free, but also removes the controller from the frameloop */

          pause(finished) {
            this.stop(true);
            if (finished) stop(this);
            return this;
          }

          runAsync(_ref5, onEnd) {
            var _this = this;

            let delay = _ref5.delay,
              props = Object(
                _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
                  'default'
                ]
              )(_ref5, ['delay']);

            const local = this.local; // If "to" is either a function or an array it will be processed async, therefor "to" should be empty right now
            // If the view relies on certain values "from" has to be present

            let queue = Promise.resolve(undefined);

            if (is.arr(props.to)) {
              for (let i = 0; i < props.to.length; i++) {
                const index = i;

                const fresh = Object(
                  _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                )({}, props, interpolateTo(props.to[index]));

                if (is.arr(fresh.config)) fresh.config = fresh.config[index];
                queue = queue.then(() => {
                  //this.stop()
                  if (local === this.guid) return new Promise((r) => this.diff(fresh).start(r));
                });
              }
            } else if (is.fun(props.to)) {
              let index = 0;
              let last;
              queue = queue.then(() =>
                props
                  .to(
                    // next(props)
                    (p) => {
                      const fresh = Object(
                        _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                      )({}, props, interpolateTo(p));

                      if (is.arr(fresh.config)) fresh.config = fresh.config[index];
                      index++; //this.stop()

                      if (local === this.guid)
                        return (last = new Promise((r) => this.diff(fresh).start(r)));
                      return;
                    }, // cancel()
                    function (finished) {
                      if (finished === void 0) {
                        finished = true;
                      }

                      return _this.stop(finished);
                    }
                  )
                  .then(() => last)
              );
            }

            queue.then(onEnd);
          }

          diff(props) {
            this.props = Object(
              _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
            )({}, this.props, props);
            let _this$props = this.props,
              _this$props$from = _this$props.from,
              from = _this$props$from === void 0 ? {} : _this$props$from,
              _this$props$to = _this$props.to,
              to = _this$props$to === void 0 ? {} : _this$props$to,
              _this$props$config = _this$props.config,
              config = _this$props$config === void 0 ? {} : _this$props$config,
              reverse = _this$props.reverse,
              attach = _this$props.attach,
              reset = _this$props.reset,
              immediate = _this$props.immediate; // Reverse values when requested

            if (reverse) {
              var _ref6 = [to, from];
              from = _ref6[0];
              to = _ref6[1];
            } // This will collect all props that were ever set, reset merged props when necessary

            this.merged = Object(
              _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
            )({}, from, this.merged, to);
            this.hasChanged = false; // Attachment handling, trailed springs can "attach" themselves to a previous spring

            let target = attach && attach(this); // Reduces input { name: value } pairs into animated values

            this.animations = Object.entries(this.merged).reduce((acc, _ref7) => {
              let name = _ref7[0],
                value = _ref7[1];
              // Issue cached entries, except on reset
              let entry = acc[name] || {}; // Figure out what the value is supposed to be

              const isNumber = is.num(value);
              const isString =
                is.str(value) && !value.startsWith('#') && !/\d/.test(value) && !colorNames[value];
              const isArray = is.arr(value);
              const isInterpolation = !isNumber && !isArray && !isString;
              let fromValue = !is.und(from[name]) ? from[name] : value;
              let toValue = isNumber || isArray ? value : isString ? value : 1;
              let toConfig = callProp(config, name);
              if (target) toValue = target.animations[name].parent;
              let parent = entry.parent,
                interpolation$$1 = entry.interpolation,
                toValues = toArray(target ? toValue.getPayload() : toValue),
                animatedValues;
              let newValue = value;
              if (isInterpolation)
                newValue = interpolation({
                  range: [0, 1],
                  output: [value, value],
                })(1);
              let currentValue = interpolation$$1 && interpolation$$1.getValue(); // Change detection flags

              const isFirst = is.und(parent);
              const isActive = !isFirst && entry.animatedValues.some((v) => !v.done);
              const currentValueDiffersFromGoal = !is.equ(newValue, currentValue);
              const hasNewGoal = !is.equ(newValue, entry.previous);
              const hasNewConfig = !is.equ(toConfig, entry.config); // Change animation props when props indicate a new goal (new value differs from previous one)
              // and current values differ from it. Config changes trigger a new update as well (though probably shouldn't?)

              if (reset || (hasNewGoal && currentValueDiffersFromGoal) || hasNewConfig) {
                // Convert regular values into animated values, ALWAYS re-use if possible
                if (isNumber || isString)
                  parent = interpolation$$1 = entry.parent || new AnimatedValue(fromValue);
                else if (isArray)
                  parent = interpolation$$1 = entry.parent || new AnimatedValueArray(fromValue);
                else if (isInterpolation) {
                  let prev = entry.interpolation && entry.interpolation.calc(entry.parent.value);
                  prev = prev !== void 0 && !reset ? prev : fromValue;

                  if (entry.parent) {
                    parent = entry.parent;
                    parent.setValue(0, false);
                  } else parent = new AnimatedValue(0);

                  const range = {
                    output: [prev, value],
                  };

                  if (entry.interpolation) {
                    interpolation$$1 = entry.interpolation;
                    entry.interpolation.updateConfig(range);
                  } else interpolation$$1 = parent.interpolate(range);
                }
                toValues = toArray(target ? toValue.getPayload() : toValue);
                animatedValues = toArray(parent.getPayload());
                if (reset && !isInterpolation) parent.setValue(fromValue, false);
                this.hasChanged = true; // Reset animated values

                animatedValues.forEach((value) => {
                  value.startPosition = value.value;
                  value.lastPosition = value.value;
                  value.lastVelocity = isActive ? value.lastVelocity : undefined;
                  value.lastTime = isActive ? value.lastTime : undefined;
                  value.startTime = now();
                  value.done = false;
                  value.animatedStyles.clear();
                }); // Set immediate values

                if (callProp(immediate, name)) {
                  parent.setValue(isInterpolation ? toValue : value, false);
                }

                return Object(
                  _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                )({}, acc, {
                  [name]: Object(
                    _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                  )({}, entry, {
                    name,
                    parent,
                    interpolation: interpolation$$1,
                    animatedValues,
                    toValues,
                    previous: newValue,
                    config: toConfig,
                    fromValues: toArray(parent.getValue()),
                    immediate: callProp(immediate, name),
                    initialVelocity: withDefault(toConfig.velocity, 0),
                    clamp: withDefault(toConfig.clamp, false),
                    precision: withDefault(toConfig.precision, 0.01),
                    tension: withDefault(toConfig.tension, 170),
                    friction: withDefault(toConfig.friction, 26),
                    mass: withDefault(toConfig.mass, 1),
                    duration: toConfig.duration,
                    easing: withDefault(toConfig.easing, (t) => t),
                    decay: toConfig.decay,
                  }),
                });
              } else {
                if (!currentValueDiffersFromGoal) {
                  // So ... the current target value (newValue) appears to be different from the previous value,
                  // which normally constitutes an update, but the actual value (currentValue) matches the target!
                  // In order to resolve this without causing an animation update we silently flag the animation as done,
                  // which it technically is. Interpolations also needs a config update with their target set to 1.
                  if (isInterpolation) {
                    parent.setValue(1, false);
                    interpolation$$1.updateConfig({
                      output: [newValue, newValue],
                    });
                  }

                  parent.done = true;
                  this.hasChanged = true;
                  return Object(
                    _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                  )({}, acc, {
                    [name]: Object(
                      _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                    )({}, acc[name], {
                      previous: newValue,
                    }),
                  });
                }

                return acc;
              }
            }, this.animations);

            if (this.hasChanged) {
              // Make animations available to frameloop
              this.configs = Object.values(this.animations);
              this.values = {};
              this.interpolations = {};

              for (let key in this.animations) {
                this.interpolations[key] = this.animations[key].interpolation;
                this.values[key] = this.animations[key].interpolation.getValue();
              }
            }

            return this;
          }

          destroy() {
            this.stop();
            this.props = {};
            this.merged = {};
            this.animations = {};
            this.interpolations = {};
            this.values = {};
            this.configs = [];
            this.local = 0;
          }
        }

        /** API
         * const props = useSprings(number, [{ ... }, { ... }, ...])
         * const [props, set] = useSprings(number, (i, controller) => ({ ... }))
         */

        const useSprings = (length, props) => {
          const mounted = Object(react__WEBPACK_IMPORTED_MODULE_2__['useRef'])(false);
          const ctrl = Object(react__WEBPACK_IMPORTED_MODULE_2__['useRef'])();
          const isFn = is.fun(props); // The controller maintains the animation values, starts and stops animations

          const _useMemo = Object(react__WEBPACK_IMPORTED_MODULE_2__['useMemo'])(() => {
              // Remove old controllers
              if (ctrl.current) {
                ctrl.current.map((c) => c.destroy());
                ctrl.current = undefined;
              }

              let ref;
              return [
                new Array(length).fill().map((_, i) => {
                  const ctrl = new Controller();
                  const newProps = isFn ? callProp(props, i, ctrl) : props[i];
                  if (i === 0) ref = newProps.ref;
                  ctrl.update(newProps);
                  if (!ref) ctrl.start();
                  return ctrl;
                }),
                ref,
              ];
            }, [length]),
            controllers = _useMemo[0],
            ref = _useMemo[1];

          ctrl.current = controllers; // The hooks reference api gets defined here ...

          const api = Object(react__WEBPACK_IMPORTED_MODULE_2__['useImperativeHandle'])(
            ref,
            () => ({
              start: () => Promise.all(ctrl.current.map((c) => new Promise((r) => c.start(r)))),
              stop: (finished) => ctrl.current.forEach((c) => c.stop(finished)),

              get controllers() {
                return ctrl.current;
              },
            })
          ); // This function updates the controllers

          const updateCtrl = Object(react__WEBPACK_IMPORTED_MODULE_2__['useMemo'])(
            () => (updateProps) =>
              ctrl.current.map((c, i) => {
                c.update(isFn ? callProp(updateProps, i, c) : updateProps[i]);
                if (!ref) c.start();
              }),
            [length]
          ); // Update controller if props aren't functional

          Object(react__WEBPACK_IMPORTED_MODULE_2__['useEffect'])(() => {
            if (mounted.current) {
              if (!isFn) updateCtrl(props);
            } else if (!ref) ctrl.current.forEach((c) => c.start());
          }); // Update mounted flag and destroy controller on unmount

          Object(react__WEBPACK_IMPORTED_MODULE_2__['useEffect'])(
            () => ((mounted.current = true), () => ctrl.current.forEach((c) => c.destroy())),
            []
          ); // Return animated props, or, anim-props + the update-setter above

          const propValues = ctrl.current.map((c) => c.getValues());
          return isFn
            ? [propValues, updateCtrl, (finished) => ctrl.current.forEach((c) => c.pause(finished))]
            : propValues;
        };

        /** API
         * const props = useSpring({ ... })
         * const [props, set] = useSpring(() => ({ ... }))
         */

        const useSpring = (props) => {
          const isFn = is.fun(props);

          const _useSprings = useSprings(1, isFn ? props : [props]),
            result = _useSprings[0],
            set = _useSprings[1],
            pause = _useSprings[2];

          return isFn ? [result[0], set, pause] : result;
        };

        /** API
         * const trails = useTrail(number, { ... })
         * const [trails, set] = useTrail(number, () => ({ ... }))
         */

        const useTrail = (length, props) => {
          const mounted = Object(react__WEBPACK_IMPORTED_MODULE_2__['useRef'])(false);
          const isFn = is.fun(props);
          const updateProps = callProp(props);
          const instances = Object(react__WEBPACK_IMPORTED_MODULE_2__['useRef'])();

          const _useSprings = useSprings(length, (i, ctrl) => {
              if (i === 0) instances.current = [];
              instances.current.push(ctrl);
              return Object(
                _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
              )({}, updateProps, {
                config: callProp(updateProps.config, i),
                attach: i > 0 && (() => instances.current[i - 1]),
              });
            }),
            result = _useSprings[0],
            set = _useSprings[1],
            pause = _useSprings[2]; // Set up function to update controller

          const updateCtrl = Object(react__WEBPACK_IMPORTED_MODULE_2__['useMemo'])(
            () => (props) =>
              set((i, ctrl) => {
                const last = props.reverse ? i === 0 : length - 1 === i;
                const attachIdx = props.reverse ? i + 1 : i - 1;
                const attachController = instances.current[attachIdx];
                return Object(
                  _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                )({}, props, {
                  config: callProp(props.config || updateProps.config, i),
                  attach: attachController && (() => attachController),
                });
              }),
            [length, updateProps.reverse]
          ); // Update controller if props aren't functional

          Object(react__WEBPACK_IMPORTED_MODULE_2__['useEffect'])(
            () => void (mounted.current && !isFn && updateCtrl(props))
          ); // Update mounted flag and destroy controller on unmount

          Object(react__WEBPACK_IMPORTED_MODULE_2__['useEffect'])(
            () => void (mounted.current = true),
            []
          );
          return isFn ? [result, updateCtrl, pause] : result;
        };

        /** API
         * const transitions = useTransition(items, itemKeys, { ... })
         * const [transitions, update] = useTransition(items, itemKeys, () => ({ ... }))
         */

        let guid = 0;
        const ENTER = 'enter';
        const LEAVE = 'leave';
        const UPDATE = 'update';

        const mapKeys = (items, keys) =>
          (typeof keys === 'function' ? items.map(keys) : toArray(keys)).map(String);

        const get = (props) => {
          let items = props.items,
            _props$keys = props.keys,
            keys = _props$keys === void 0 ? (item) => item : _props$keys,
            rest = Object(
              _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
                'default'
              ]
            )(props, ['items', 'keys']);

          items = toArray(items !== void 0 ? items : null);
          return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
            {
              items,
              keys: mapKeys(items, keys),
            },
            rest
          );
        };

        function useTransition(input, keyTransform, config) {
          const props = Object(
            _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
          )(
            {
              items: input,
              keys: keyTransform || ((i) => i),
            },
            config
          );

          const _get = get(props),
            _get$lazy = _get.lazy,
            lazy = _get$lazy === void 0 ? false : _get$lazy,
            _get$unique = _get.unique,
            _get$reset = _get.reset,
            reset = _get$reset === void 0 ? false : _get$reset,
            enter = _get.enter,
            leave = _get.leave,
            update = _get.update,
            onDestroyed = _get.onDestroyed,
            keys = _get.keys,
            items = _get.items,
            onFrame = _get.onFrame,
            _onRest = _get.onRest,
            onStart = _get.onStart,
            ref = _get.ref,
            extra = Object(
              _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
                'default'
              ]
            )(_get, [
              'lazy',
              'unique',
              'reset',
              'enter',
              'leave',
              'update',
              'onDestroyed',
              'keys',
              'items',
              'onFrame',
              'onRest',
              'onStart',
              'ref',
            ]);

          const forceUpdate = useForceUpdate();
          const mounted = Object(react__WEBPACK_IMPORTED_MODULE_2__['useRef'])(false);
          const state = Object(react__WEBPACK_IMPORTED_MODULE_2__['useRef'])({
            mounted: false,
            first: true,
            deleted: [],
            current: {},
            transitions: [],
            prevProps: {},
            paused: !!props.ref,
            instances: !mounted.current && new Map(),
            forceUpdate,
          });
          Object(react__WEBPACK_IMPORTED_MODULE_2__['useImperativeHandle'])(props.ref, () => ({
            start: () =>
              Promise.all(
                Array.from(state.current.instances).map((_ref) => {
                  let c = _ref[1];
                  return new Promise((r) => c.start(r));
                })
              ),
            stop: (finished) =>
              Array.from(state.current.instances).forEach((_ref2) => {
                let c = _ref2[1];
                return c.stop(finished);
              }),

            get controllers() {
              return Array.from(state.current.instances).map((_ref3) => {
                let c = _ref3[1];
                return c;
              });
            },
          })); // Update state

          state.current = diffItems(state.current, props);

          if (state.current.changed) {
            // Update state
            state.current.transitions.forEach((transition) => {
              const slot = transition.slot,
                from = transition.from,
                to = transition.to,
                config = transition.config,
                trail = transition.trail,
                key = transition.key,
                item = transition.item;
              if (!state.current.instances.has(key))
                state.current.instances.set(key, new Controller()); // update the map object

              const ctrl = state.current.instances.get(key);

              const newProps = Object(
                _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
              )({}, extra, {
                to,
                from,
                config,
                ref,
                onRest: (values) => {
                  if (state.current.mounted) {
                    if (transition.destroyed) {
                      // If no ref is given delete destroyed items immediately
                      if (!ref && !lazy) cleanUp(state, key);
                      if (onDestroyed) onDestroyed(item);
                    } // A transition comes to rest once all its springs conclude

                    const curInstances = Array.from(state.current.instances);
                    const active = curInstances.some((_ref4) => {
                      let c = _ref4[1];
                      return !c.idle;
                    });
                    if (!active && (ref || lazy) && state.current.deleted.length > 0)
                      cleanUp(state);
                    if (_onRest) _onRest(item, slot, values);
                  }
                },
                onStart: onStart && (() => onStart(item, slot)),
                onFrame: onFrame && ((values) => onFrame(item, slot, values)),
                delay: trail,
                reset: reset && slot === ENTER, // Update controller
              });

              ctrl.update(newProps);
              if (!state.current.paused) ctrl.start();
            });
          }

          Object(react__WEBPACK_IMPORTED_MODULE_2__['useEffect'])(() => {
            state.current.mounted = mounted.current = true;
            return () => {
              state.current.mounted = mounted.current = false;
              Array.from(state.current.instances).map((_ref5) => {
                let c = _ref5[1];
                return c.destroy();
              });
              state.current.instances.clear();
            };
          }, []);
          return state.current.transitions.map((_ref6) => {
            let item = _ref6.item,
              slot = _ref6.slot,
              key = _ref6.key;
            return {
              item,
              key,
              state: slot,
              props: state.current.instances.get(key).getValues(),
            };
          });
        }

        function cleanUp(state, filterKey) {
          const deleted = state.current.deleted;

          for (let _ref7 of deleted) {
            let key = _ref7.key;

            const filter = (t) => t.key !== key;

            if (is.und(filterKey) || filterKey === key) {
              state.current.instances.delete(key);
              state.current.transitions = state.current.transitions.filter(filter);
              state.current.deleted = state.current.deleted.filter(filter);
            }
          }

          state.current.forceUpdate();
        }

        function diffItems(_ref8, props) {
          let first = _ref8.first,
            prevProps = _ref8.prevProps,
            state = Object(
              _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
                'default'
              ]
            )(_ref8, ['first', 'prevProps']);

          let _get2 = get(props),
            items = _get2.items,
            keys = _get2.keys,
            initial = _get2.initial,
            from = _get2.from,
            enter = _get2.enter,
            leave = _get2.leave,
            update = _get2.update,
            _get2$trail = _get2.trail,
            trail = _get2$trail === void 0 ? 0 : _get2$trail,
            unique = _get2.unique,
            config = _get2.config,
            _get2$order = _get2.order,
            order = _get2$order === void 0 ? [ENTER, LEAVE, UPDATE] : _get2$order;

          let _get3 = get(prevProps),
            _keys = _get3.keys,
            _items = _get3.items;

          let current = Object(
            _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
          )({}, state.current);

          let deleted = [...state.deleted]; // Compare next keys with current keys

          let currentKeys = Object.keys(current);
          let currentSet = new Set(currentKeys);
          let nextSet = new Set(keys);
          let added = keys.filter((item) => !currentSet.has(item));
          let removed = state.transitions
            .filter((item) => !item.destroyed && !nextSet.has(item.originalKey))
            .map((i) => i.originalKey);
          let updated = keys.filter((item) => currentSet.has(item));
          let delay = -trail;

          while (order.length) {
            const changeType = order.shift();

            switch (changeType) {
              case ENTER: {
                added.forEach((key, index) => {
                  // In unique mode, remove fading out transitions if their key comes in again
                  if (unique && deleted.find((d) => d.originalKey === key))
                    deleted = deleted.filter((t) => t.originalKey !== key);
                  const keyIndex = keys.indexOf(key);
                  const item = items[keyIndex];
                  const slot = first && initial !== void 0 ? 'initial' : ENTER;
                  current[key] = {
                    slot,
                    originalKey: key,
                    key: unique ? String(key) : guid++,
                    item,
                    trail: (delay = delay + trail),
                    config: callProp(config, item, slot),
                    from: callProp(
                      first ? (initial !== void 0 ? initial || {} : from) : from,
                      item
                    ),
                    to: callProp(enter, item),
                  };
                });
                break;
              }

              case LEAVE: {
                removed.forEach((key) => {
                  const keyIndex = _keys.indexOf(key);

                  const item = _items[keyIndex];
                  const slot = LEAVE;
                  deleted.unshift(
                    Object(
                      _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                    )({}, current[key], {
                      slot,
                      destroyed: true,
                      left: _keys[Math.max(0, keyIndex - 1)],
                      right: _keys[Math.min(_keys.length, keyIndex + 1)],
                      trail: (delay = delay + trail),
                      config: callProp(config, item, slot),
                      to: callProp(leave, item),
                    })
                  );
                  delete current[key];
                });
                break;
              }

              case UPDATE: {
                updated.forEach((key) => {
                  const keyIndex = keys.indexOf(key);
                  const item = items[keyIndex];
                  const slot = UPDATE;
                  current[key] = Object(
                    _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                  )({}, current[key], {
                    item,
                    slot,
                    trail: (delay = delay + trail),
                    config: callProp(config, item, slot),
                    to: callProp(update, item),
                  });
                });
                break;
              }
            }
          }

          let out = keys.map((key) => current[key]); // This tries to restore order for deleted items by finding their last known siblings
          // only using the left sibling to keep order placement consistent for all deleted items

          deleted.forEach((_ref9) => {
            let left = _ref9.left,
              right = _ref9.right,
              item = Object(
                _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
                  'default'
                ]
              )(_ref9, ['left', 'right']);

            let pos; // Was it the element on the left, if yes, move there ...

            if ((pos = out.findIndex((t) => t.originalKey === left)) !== -1) pos += 1; // And if nothing else helps, move it to the start ¯\_(ツ)_/¯

            pos = Math.max(0, pos);
            out = [...out.slice(0, pos), item, ...out.slice(pos)];
          });
          return Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
            {},
            state,
            {
              changed: added.length || removed.length || updated.length,
              first: first && added.length === 0,
              transitions: out,
              current,
              deleted,
              prevProps: props,
            }
          );
        }

        class AnimatedStyle extends AnimatedObject {
          constructor(style) {
            if (style === void 0) {
              style = {};
            }

            super();

            if (style.transform && !(style.transform instanceof Animated)) {
              style = applyAnimatedValues.transform(style);
            }

            this.payload = style;
          }
        }

        // http://www.w3.org/TR/css3-color/#svg-color
        const colors = {
          transparent: 0x00000000,
          aliceblue: 0xf0f8ffff,
          antiquewhite: 0xfaebd7ff,
          aqua: 0x00ffffff,
          aquamarine: 0x7fffd4ff,
          azure: 0xf0ffffff,
          beige: 0xf5f5dcff,
          bisque: 0xffe4c4ff,
          black: 0x000000ff,
          blanchedalmond: 0xffebcdff,
          blue: 0x0000ffff,
          blueviolet: 0x8a2be2ff,
          brown: 0xa52a2aff,
          burlywood: 0xdeb887ff,
          burntsienna: 0xea7e5dff,
          cadetblue: 0x5f9ea0ff,
          chartreuse: 0x7fff00ff,
          chocolate: 0xd2691eff,
          coral: 0xff7f50ff,
          cornflowerblue: 0x6495edff,
          cornsilk: 0xfff8dcff,
          crimson: 0xdc143cff,
          cyan: 0x00ffffff,
          darkblue: 0x00008bff,
          darkcyan: 0x008b8bff,
          darkgoldenrod: 0xb8860bff,
          darkgray: 0xa9a9a9ff,
          darkgreen: 0x006400ff,
          darkgrey: 0xa9a9a9ff,
          darkkhaki: 0xbdb76bff,
          darkmagenta: 0x8b008bff,
          darkolivegreen: 0x556b2fff,
          darkorange: 0xff8c00ff,
          darkorchid: 0x9932ccff,
          darkred: 0x8b0000ff,
          darksalmon: 0xe9967aff,
          darkseagreen: 0x8fbc8fff,
          darkslateblue: 0x483d8bff,
          darkslategray: 0x2f4f4fff,
          darkslategrey: 0x2f4f4fff,
          darkturquoise: 0x00ced1ff,
          darkviolet: 0x9400d3ff,
          deeppink: 0xff1493ff,
          deepskyblue: 0x00bfffff,
          dimgray: 0x696969ff,
          dimgrey: 0x696969ff,
          dodgerblue: 0x1e90ffff,
          firebrick: 0xb22222ff,
          floralwhite: 0xfffaf0ff,
          forestgreen: 0x228b22ff,
          fuchsia: 0xff00ffff,
          gainsboro: 0xdcdcdcff,
          ghostwhite: 0xf8f8ffff,
          gold: 0xffd700ff,
          goldenrod: 0xdaa520ff,
          gray: 0x808080ff,
          green: 0x008000ff,
          greenyellow: 0xadff2fff,
          grey: 0x808080ff,
          honeydew: 0xf0fff0ff,
          hotpink: 0xff69b4ff,
          indianred: 0xcd5c5cff,
          indigo: 0x4b0082ff,
          ivory: 0xfffff0ff,
          khaki: 0xf0e68cff,
          lavender: 0xe6e6faff,
          lavenderblush: 0xfff0f5ff,
          lawngreen: 0x7cfc00ff,
          lemonchiffon: 0xfffacdff,
          lightblue: 0xadd8e6ff,
          lightcoral: 0xf08080ff,
          lightcyan: 0xe0ffffff,
          lightgoldenrodyellow: 0xfafad2ff,
          lightgray: 0xd3d3d3ff,
          lightgreen: 0x90ee90ff,
          lightgrey: 0xd3d3d3ff,
          lightpink: 0xffb6c1ff,
          lightsalmon: 0xffa07aff,
          lightseagreen: 0x20b2aaff,
          lightskyblue: 0x87cefaff,
          lightslategray: 0x778899ff,
          lightslategrey: 0x778899ff,
          lightsteelblue: 0xb0c4deff,
          lightyellow: 0xffffe0ff,
          lime: 0x00ff00ff,
          limegreen: 0x32cd32ff,
          linen: 0xfaf0e6ff,
          magenta: 0xff00ffff,
          maroon: 0x800000ff,
          mediumaquamarine: 0x66cdaaff,
          mediumblue: 0x0000cdff,
          mediumorchid: 0xba55d3ff,
          mediumpurple: 0x9370dbff,
          mediumseagreen: 0x3cb371ff,
          mediumslateblue: 0x7b68eeff,
          mediumspringgreen: 0x00fa9aff,
          mediumturquoise: 0x48d1ccff,
          mediumvioletred: 0xc71585ff,
          midnightblue: 0x191970ff,
          mintcream: 0xf5fffaff,
          mistyrose: 0xffe4e1ff,
          moccasin: 0xffe4b5ff,
          navajowhite: 0xffdeadff,
          navy: 0x000080ff,
          oldlace: 0xfdf5e6ff,
          olive: 0x808000ff,
          olivedrab: 0x6b8e23ff,
          orange: 0xffa500ff,
          orangered: 0xff4500ff,
          orchid: 0xda70d6ff,
          palegoldenrod: 0xeee8aaff,
          palegreen: 0x98fb98ff,
          paleturquoise: 0xafeeeeff,
          palevioletred: 0xdb7093ff,
          papayawhip: 0xffefd5ff,
          peachpuff: 0xffdab9ff,
          peru: 0xcd853fff,
          pink: 0xffc0cbff,
          plum: 0xdda0ddff,
          powderblue: 0xb0e0e6ff,
          purple: 0x800080ff,
          rebeccapurple: 0x663399ff,
          red: 0xff0000ff,
          rosybrown: 0xbc8f8fff,
          royalblue: 0x4169e1ff,
          saddlebrown: 0x8b4513ff,
          salmon: 0xfa8072ff,
          sandybrown: 0xf4a460ff,
          seagreen: 0x2e8b57ff,
          seashell: 0xfff5eeff,
          sienna: 0xa0522dff,
          silver: 0xc0c0c0ff,
          skyblue: 0x87ceebff,
          slateblue: 0x6a5acdff,
          slategray: 0x708090ff,
          slategrey: 0x708090ff,
          snow: 0xfffafaff,
          springgreen: 0x00ff7fff,
          steelblue: 0x4682b4ff,
          tan: 0xd2b48cff,
          teal: 0x008080ff,
          thistle: 0xd8bfd8ff,
          tomato: 0xff6347ff,
          turquoise: 0x40e0d0ff,
          violet: 0xee82eeff,
          wheat: 0xf5deb3ff,
          white: 0xffffffff,
          whitesmoke: 0xf5f5f5ff,
          yellow: 0xffff00ff,
          yellowgreen: 0x9acd32ff,
        };

        // const INTEGER = '[-+]?\\d+';
        const NUMBER = '[-+]?\\d*\\.?\\d+';
        const PERCENTAGE = NUMBER + '%';

        function call() {
          for (
            var _len = arguments.length, parts = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            parts[_key] = arguments[_key];
          }

          return '\\(\\s*(' + parts.join(')\\s*,\\s*(') + ')\\s*\\)';
        }

        const rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));
        const rgba = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER));
        const hsl = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE));
        const hsla = new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));
        const hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;
        const hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;
        const hex6 = /^#([0-9a-fA-F]{6})$/;
        const hex8 = /^#([0-9a-fA-F]{8})$/;

        /*
https://github.com/react-community/normalize-css-color

BSD 3-Clause License

Copyright (c) 2016, React Community
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

* Neither the name of the copyright holder nor the names of its
  contributors may be used to endorse or promote products derived from
  this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
        function normalizeColor(color) {
          let match;

          if (typeof color === 'number') {
            return color >>> 0 === color && color >= 0 && color <= 0xffffffff ? color : null;
          } // Ordered based on occurrences on Facebook codebase

          if ((match = hex6.exec(color))) return parseInt(match[1] + 'ff', 16) >>> 0;
          if (colors.hasOwnProperty(color)) return colors[color];

          if ((match = rgb.exec(color))) {
            return (
              ((parse255(match[1]) << 24) | // r
              (parse255(match[2]) << 16) | // g
              (parse255(match[3]) << 8) | // b
                0x000000ff) >>> // a
              0
            );
          }

          if ((match = rgba.exec(color))) {
            return (
              ((parse255(match[1]) << 24) | // r
              (parse255(match[2]) << 16) | // g
              (parse255(match[3]) << 8) | // b
                parse1(match[4])) >>> // a
              0
            );
          }

          if ((match = hex3.exec(color))) {
            return (
              parseInt(
                match[1] +
                match[1] + // r
                match[2] +
                match[2] + // g
                match[3] +
                match[3] + // b
                  'ff', // a
                16
              ) >>> 0
            );
          } // https://drafts.csswg.org/css-color-4/#hex-notation

          if ((match = hex8.exec(color))) return parseInt(match[1], 16) >>> 0;

          if ((match = hex4.exec(color))) {
            return (
              parseInt(
                match[1] +
                match[1] + // r
                match[2] +
                match[2] + // g
                match[3] +
                match[3] + // b
                  match[4] +
                  match[4], // a
                16
              ) >>> 0
            );
          }

          if ((match = hsl.exec(color))) {
            return (
              (hslToRgb(
                parse360(match[1]), // h
                parsePercentage(match[2]), // s
                parsePercentage(match[3]) // l
              ) |
                0x000000ff) >>> // a
              0
            );
          }

          if ((match = hsla.exec(color))) {
            return (
              (hslToRgb(
                parse360(match[1]), // h
                parsePercentage(match[2]), // s
                parsePercentage(match[3]) // l
              ) |
                parse1(match[4])) >>> // a
              0
            );
          }

          return null;
        }

        function hue2rgb(p, q, t) {
          if (t < 0) t += 1;
          if (t > 1) t -= 1;
          if (t < 1 / 6) return p + (q - p) * 6 * t;
          if (t < 1 / 2) return q;
          if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
          return p;
        }

        function hslToRgb(h, s, l) {
          const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
          const p = 2 * l - q;
          const r = hue2rgb(p, q, h + 1 / 3);
          const g = hue2rgb(p, q, h);
          const b = hue2rgb(p, q, h - 1 / 3);
          return (
            (Math.round(r * 255) << 24) | (Math.round(g * 255) << 16) | (Math.round(b * 255) << 8)
          );
        }

        function parse255(str) {
          const int = parseInt(str, 10);
          if (int < 0) return 0;
          if (int > 255) return 255;
          return int;
        }

        function parse360(str) {
          const int = parseFloat(str);
          return (((int % 360) + 360) % 360) / 360;
        }

        function parse1(str) {
          const num = parseFloat(str);
          if (num < 0) return 0;
          if (num > 1) return 255;
          return Math.round(num * 255);
        }

        function parsePercentage(str) {
          // parseFloat conveniently ignores the final %
          const int = parseFloat(str);
          if (int < 0) return 0;
          if (int > 100) return 1;
          return int / 100;
        }

        function colorToRgba(input) {
          let int32Color = normalizeColor(input);
          if (int32Color === null) return input;
          int32Color = int32Color || 0;
          let r = (int32Color & 0xff000000) >>> 24;
          let g = (int32Color & 0x00ff0000) >>> 16;
          let b = (int32Color & 0x0000ff00) >>> 8;
          let a = (int32Color & 0x000000ff) / 255;
          return `rgba(${r}, ${g}, ${b}, ${a})`;
        } // Problem: https://github.com/animatedjs/animated/pull/102
        // Solution: https://stackoverflow.com/questions/638565/parsing-scientific-notation-sensibly/658662

        const stringShapeRegex = /[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g; // Covers rgb, rgba, hsl, hsla
        // Taken from https://gist.github.com/olmokramer/82ccce673f86db7cda5e

        const colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi; // Covers color names (transparent, blue, etc.)

        const colorNamesRegex = new RegExp(`(${Object.keys(colors).join('|')})`, 'g');
        /**
         * Supports string shapes by extracting numbers so new values can be computed,
         * and recombines those values into new strings of the same shape.  Supports
         * things like:
         *
         *   rgba(123, 42, 99, 0.36)           // colors
         *   -45deg                            // values with units
         *   0 2px 2px 0px rgba(0, 0, 0, 0.12) // box shadows
         */

        const createStringInterpolator = (config) => {
          // Replace colors with rgba
          const outputRange = config.output
            .map((rangeValue) => rangeValue.replace(colorRegex, colorToRgba))
            .map((rangeValue) => rangeValue.replace(colorNamesRegex, colorToRgba));
          const outputRanges = outputRange[0].match(stringShapeRegex).map(() => []);
          outputRange.forEach((value) => {
            value.match(stringShapeRegex).forEach((number, i) => outputRanges[i].push(+number));
          });
          const interpolations = outputRange[0].match(stringShapeRegex).map((_value, i) =>
            createInterpolator(
              Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default'])(
                {},
                config,
                {
                  output: outputRanges[i],
                }
              )
            )
          );
          return (input) => {
            let i = 0;
            return (
              outputRange[0] // 'rgba(0, 100, 200, 0)'
                // ->
                // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'
                .replace(stringShapeRegex, () => interpolations[i++](input)) // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to
                // round the opacity (4th column).
                .replace(
                  /rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi,
                  (_, p1, p2, p3, p4) =>
                    `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`
                )
            );
          };
        };

        let isUnitlessNumber = {
          animationIterationCount: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true,
        };

        const prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);

        const prefixes = ['Webkit', 'Ms', 'Moz', 'O'];
        isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
          prefixes.forEach((prefix) => (acc[prefixKey(prefix, prop)] = acc[prop]));
          return acc;
        }, isUnitlessNumber);

        function dangerousStyleValue(name, value, isCustomProperty) {
          if (value == null || typeof value === 'boolean' || value === '') return '';
          if (
            !isCustomProperty &&
            typeof value === 'number' &&
            value !== 0 &&
            !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])
          )
            return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers

          return ('' + value).trim();
        }

        const attributeCache = {};
        injectCreateAnimatedStyle((style) => new AnimatedStyle(style));
        injectDefaultElement('div');
        injectStringInterpolator(createStringInterpolator);
        injectColorNames(colors);
        injectApplyAnimatedValues(
          (instance, props) => {
            if (instance.nodeType && instance.setAttribute !== undefined) {
              const style = props.style,
                children = props.children,
                scrollTop = props.scrollTop,
                scrollLeft = props.scrollLeft,
                attributes = Object(
                  _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
                    'default'
                  ]
                )(props, ['style', 'children', 'scrollTop', 'scrollLeft']);

              const filter =
                instance.nodeName === 'filter' ||
                (instance.parentNode && instance.parentNode.nodeName === 'filter');
              if (scrollTop !== void 0) instance.scrollTop = scrollTop;
              if (scrollLeft !== void 0) instance.scrollLeft = scrollLeft; // Set textContent, if children is an animatable value

              if (children !== void 0) instance.textContent = children; // Set styles ...

              for (let styleName in style) {
                if (!style.hasOwnProperty(styleName)) continue;
                var isCustomProperty = styleName.indexOf('--') === 0;
                var styleValue = dangerousStyleValue(styleName, style[styleName], isCustomProperty);
                if (styleName === 'float') styleName = 'cssFloat';
                if (isCustomProperty) instance.style.setProperty(styleName, styleValue);
                else instance.style[styleName] = styleValue;
              } // Set attributes ...

              for (let name in attributes) {
                // Attributes are written in dash case
                const dashCase = filter
                  ? name
                  : attributeCache[name] ||
                    (attributeCache[name] = name.replace(/([A-Z])/g, (n) => '-' + n.toLowerCase()));
                if (typeof instance.getAttribute(dashCase) !== 'undefined')
                  instance.setAttribute(dashCase, attributes[name]);
              }

              return;
            } else return false;
          },
          (style) => style
        );

        const domElements = [
          'a',
          'abbr',
          'address',
          'area',
          'article',
          'aside',
          'audio',
          'b',
          'base',
          'bdi',
          'bdo',
          'big',
          'blockquote',
          'body',
          'br',
          'button',
          'canvas',
          'caption',
          'cite',
          'code',
          'col',
          'colgroup',
          'data',
          'datalist',
          'dd',
          'del',
          'details',
          'dfn',
          'dialog',
          'div',
          'dl',
          'dt',
          'em',
          'embed',
          'fieldset',
          'figcaption',
          'figure',
          'footer',
          'form',
          'h1',
          'h2',
          'h3',
          'h4',
          'h5',
          'h6',
          'head',
          'header',
          'hgroup',
          'hr',
          'html',
          'i',
          'iframe',
          'img',
          'input',
          'ins',
          'kbd',
          'keygen',
          'label',
          'legend',
          'li',
          'link',
          'main',
          'map',
          'mark',
          'menu',
          'menuitem',
          'meta',
          'meter',
          'nav',
          'noscript',
          'object',
          'ol',
          'optgroup',
          'option',
          'output',
          'p',
          'param',
          'picture',
          'pre',
          'progress',
          'q',
          'rp',
          'rt',
          'ruby',
          's',
          'samp',
          'script',
          'section',
          'select',
          'small',
          'source',
          'span',
          'strong',
          'style',
          'sub',
          'summary',
          'sup',
          'table',
          'tbody',
          'td',
          'textarea',
          'tfoot',
          'th',
          'thead',
          'time',
          'title',
          'tr',
          'track',
          'u',
          'ul',
          'var',
          'video',
          'wbr', // SVG
          'circle',
          'clipPath',
          'defs',
          'ellipse',
          'foreignObject',
          'g',
          'image',
          'line',
          'linearGradient',
          'mask',
          'path',
          'pattern',
          'polygon',
          'polyline',
          'radialGradient',
          'rect',
          'stop',
          'svg',
          'text',
          'tspan',
        ];
        // Extend animated with all the available THREE elements
        const apply = merge(createAnimatedComponent, false);
        const extendedAnimated = apply(domElements);

        /***/
      },

    /***/ './node_modules/react-transition-group/CSSTransition.js':
      /*!**************************************************************!*\
  !*** ./node_modules/react-transition-group/CSSTransition.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.default = void 0;

        var PropTypes = _interopRequireWildcard(
          __webpack_require__(/*! prop-types */ './node_modules/prop-types/index.js')
        );

        var _addClass = _interopRequireDefault(
          __webpack_require__(
            /*! dom-helpers/class/addClass */ './node_modules/dom-helpers/class/addClass.js'
          )
        );

        var _removeClass = _interopRequireDefault(
          __webpack_require__(
            /*! dom-helpers/class/removeClass */ './node_modules/dom-helpers/class/removeClass.js'
          )
        );

        var _react = _interopRequireDefault(
          __webpack_require__(/*! react */ './node_modules/react/index.js')
        );

        var _Transition = _interopRequireDefault(
          __webpack_require__(
            /*! ./Transition */ './node_modules/react-transition-group/Transition.js'
          )
        );

        var _PropTypes = __webpack_require__(
          /*! ./utils/PropTypes */ './node_modules/react-transition-group/utils/PropTypes.js'
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                  var desc =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(obj, key)
                      : {};
                  if (desc.get || desc.set) {
                    Object.defineProperty(newObj, key, desc);
                  } else {
                    newObj[key] = obj[key];
                  }
                }
              }
            }
            newObj.default = obj;
            return newObj;
          }
        }

        function _extends() {
          _extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };
          return _extends.apply(this, arguments);
        }

        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          subClass.__proto__ = superClass;
        }

        var addClass = function addClass(node, classes) {
          return (
            node &&
            classes &&
            classes.split(' ').forEach(function (c) {
              return (0, _addClass.default)(node, c);
            })
          );
        };

        var removeClass = function removeClass(node, classes) {
          return (
            node &&
            classes &&
            classes.split(' ').forEach(function (c) {
              return (0, _removeClass.default)(node, c);
            })
          );
        };
        /**
         * A transition component inspired by the excellent
         * [ng-animate](http://www.nganimate.org/) library, you should use it if you're
         * using CSS transitions or animations. It's built upon the
         * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
         * component, so it inherits all of its props.
         *
         * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
         * and `exit` states of the transition. The first class is applied and then a
         * second `*-active` class in order to activate the CSSS transition. After the
         * transition, matching `*-done` class names are applied to persist the
         * transition state.
         *
         * ```jsx
         * function App() {
         *   const [inProp, setInProp] = useState(false);
         *   return (
         *     <div>
         *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
         *         <div>
         *           {"I'll receive my-node-* classes"}
         *         </div>
         *       </CSSTransition>
         *       <button type="button" onClick={() => setInProp(true)}>
         *         Click to Enter
         *       </button>
         *     </div>
         *   );
         * }
         * ```
         *
         * When the `in` prop is set to `true`, the child component will first receive
         * the class `example-enter`, then the `example-enter-active` will be added in
         * the next tick. `CSSTransition` [forces a
         * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
         * between before adding the `example-enter-active`. This is an important trick
         * because it allows us to transition between `example-enter` and
         * `example-enter-active` even though they were added immediately one after
         * another. Most notably, this is what makes it possible for us to animate
         * _appearance_.
         *
         * ```css
         * .my-node-enter {
         *   opacity: 0;
         * }
         * .my-node-enter-active {
         *   opacity: 1;
         *   transition: opacity 200ms;
         * }
         * .my-node-exit {
         *   opacity: 1;
         * }
         * .my-node-exit-active {
         *   opacity: 0;
         *   transition: opacity: 200ms;
         * }
         * ```
         *
         * `*-active` classes represent which styles you want to animate **to**.
         */

        var CSSTransition =
          /*#__PURE__*/
          (function (_React$Component) {
            _inheritsLoose(CSSTransition, _React$Component);

            function CSSTransition() {
              var _this;

              for (
                var _len = arguments.length, args = new Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;

              _this.onEnter = function (node, appearing) {
                var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),
                  className = _this$getClassNames.className;

                _this.removeClasses(node, 'exit');

                addClass(node, className);

                if (_this.props.onEnter) {
                  _this.props.onEnter(node, appearing);
                }
              };

              _this.onEntering = function (node, appearing) {
                var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),
                  activeClassName = _this$getClassNames2.activeClassName;

                _this.reflowAndAddClass(node, activeClassName);

                if (_this.props.onEntering) {
                  _this.props.onEntering(node, appearing);
                }
              };

              _this.onEntered = function (node, appearing) {
                var appearClassName = _this.getClassNames('appear').doneClassName;

                var enterClassName = _this.getClassNames('enter').doneClassName;

                var doneClassName = appearing
                  ? appearClassName + ' ' + enterClassName
                  : enterClassName;

                _this.removeClasses(node, appearing ? 'appear' : 'enter');

                addClass(node, doneClassName);

                if (_this.props.onEntered) {
                  _this.props.onEntered(node, appearing);
                }
              };

              _this.onExit = function (node) {
                var _this$getClassNames3 = _this.getClassNames('exit'),
                  className = _this$getClassNames3.className;

                _this.removeClasses(node, 'appear');

                _this.removeClasses(node, 'enter');

                addClass(node, className);

                if (_this.props.onExit) {
                  _this.props.onExit(node);
                }
              };

              _this.onExiting = function (node) {
                var _this$getClassNames4 = _this.getClassNames('exit'),
                  activeClassName = _this$getClassNames4.activeClassName;

                _this.reflowAndAddClass(node, activeClassName);

                if (_this.props.onExiting) {
                  _this.props.onExiting(node);
                }
              };

              _this.onExited = function (node) {
                var _this$getClassNames5 = _this.getClassNames('exit'),
                  doneClassName = _this$getClassNames5.doneClassName;

                _this.removeClasses(node, 'exit');

                addClass(node, doneClassName);

                if (_this.props.onExited) {
                  _this.props.onExited(node);
                }
              };

              _this.getClassNames = function (type) {
                var classNames = _this.props.classNames;
                var isStringClassNames = typeof classNames === 'string';
                var prefix = isStringClassNames && classNames ? classNames + '-' : '';
                var className = isStringClassNames ? prefix + type : classNames[type];
                var activeClassName = isStringClassNames
                  ? className + '-active'
                  : classNames[type + 'Active'];
                var doneClassName = isStringClassNames
                  ? className + '-done'
                  : classNames[type + 'Done'];
                return {
                  className: className,
                  activeClassName: activeClassName,
                  doneClassName: doneClassName,
                };
              };

              return _this;
            }

            var _proto = CSSTransition.prototype;

            _proto.removeClasses = function removeClasses(node, type) {
              var _this$getClassNames6 = this.getClassNames(type),
                className = _this$getClassNames6.className,
                activeClassName = _this$getClassNames6.activeClassName,
                doneClassName = _this$getClassNames6.doneClassName;

              className && removeClass(node, className);
              activeClassName && removeClass(node, activeClassName);
              doneClassName && removeClass(node, doneClassName);
            };

            _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {
              // This is for to force a repaint,
              // which is necessary in order to transition styles when adding a class name.
              if (className) {
                /* eslint-disable no-unused-expressions */
                node && node.scrollTop;
                /* eslint-enable no-unused-expressions */

                addClass(node, className);
              }
            };

            _proto.render = function render() {
              var props = _extends({}, this.props);

              delete props.classNames;
              return _react.default.createElement(
                _Transition.default,
                _extends({}, props, {
                  onEnter: this.onEnter,
                  onEntered: this.onEntered,
                  onEntering: this.onEntering,
                  onExit: this.onExit,
                  onExiting: this.onExiting,
                  onExited: this.onExited,
                })
              );
            };

            return CSSTransition;
          })(_react.default.Component);

        CSSTransition.defaultProps = {
          classNames: '',
        };
        CSSTransition.propTypes = true
          ? _extends({}, _Transition.default.propTypes, {
              /**
               * The animation classNames applied to the component as it enters, exits or
               * has finished the transition. A single name can be provided and it will be
               * suffixed for each stage: e.g.
               *
               * `classNames="fade"` applies `fade-enter`, `fade-enter-active`,
               * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,
               * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.
               *
               * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.
               * This allows you to define different behavior for when appearing is done and
               * when regular entering is done, using selectors like
               * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an
               * epic entrance animation when element first appears in the DOM using
               * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
               * simply use `fade-enter-done` for defining both cases.
               *
               * Each individual classNames can also be specified independently like:
               *
               * ```js
               * classNames={{
               *  appear: 'my-appear',
               *  appearActive: 'my-active-appear',
               *  appearDone: 'my-done-appear',
               *  enter: 'my-enter',
               *  enterActive: 'my-active-enter',
               *  enterDone: 'my-done-enter',
               *  exit: 'my-exit',
               *  exitActive: 'my-active-exit',
               *  exitDone: 'my-done-exit',
               * }}
               * ```
               *
               * If you want to set these classes using CSS Modules:
               *
               * ```js
               * import styles from './styles.css';
               * ```
               *
               * you might want to use camelCase in your CSS file, that way could simply
               * spread them instead of listing them one by one:
               *
               * ```js
               * classNames={{ ...styles }}
               * ```
               *
               * @type {string | {
               *  appear?: string,
               *  appearActive?: string,
               *  appearDone?: string,
               *  enter?: string,
               *  enterActive?: string,
               *  enterDone?: string,
               *  exit?: string,
               *  exitActive?: string,
               *  exitDone?: string,
               * }}
               */
              classNames: _PropTypes.classNamesShape,

              /**
               * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
               * applied.
               *
               * @type Function(node: HtmlElement, isAppearing: bool)
               */
              onEnter: PropTypes.func,

              /**
               * A `<Transition>` callback fired immediately after the 'enter-active' or
               * 'appear-active' class is applied.
               *
               * @type Function(node: HtmlElement, isAppearing: bool)
               */
              onEntering: PropTypes.func,

              /**
               * A `<Transition>` callback fired immediately after the 'enter' or
               * 'appear' classes are **removed** and the `done` class is added to the DOM node.
               *
               * @type Function(node: HtmlElement, isAppearing: bool)
               */
              onEntered: PropTypes.func,

              /**
               * A `<Transition>` callback fired immediately after the 'exit' class is
               * applied.
               *
               * @type Function(node: HtmlElement)
               */
              onExit: PropTypes.func,

              /**
               * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
               *
               * @type Function(node: HtmlElement)
               */
              onExiting: PropTypes.func,

              /**
               * A `<Transition>` callback fired immediately after the 'exit' classes
               * are **removed** and the `exit-done` class is added to the DOM node.
               *
               * @type Function(node: HtmlElement)
               */
              onExited: PropTypes.func,
            })
          : undefined;
        var _default = CSSTransition;
        exports.default = _default;
        module.exports = exports['default'];

        /***/
      },

    /***/ './node_modules/react-transition-group/Transition.js':
      /*!***********************************************************!*\
  !*** ./node_modules/react-transition-group/Transition.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;

        var PropTypes = _interopRequireWildcard(
          __webpack_require__(/*! prop-types */ './node_modules/prop-types/index.js')
        );

        var _react = _interopRequireDefault(
          __webpack_require__(/*! react */ './node_modules/react/index.js')
        );

        var _reactDom = _interopRequireDefault(
          __webpack_require__(/*! react-dom */ './node_modules/react-dom/index.js')
        );

        var _reactLifecyclesCompat = __webpack_require__(
          /*! react-lifecycles-compat */ './node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js'
        );

        var _PropTypes = __webpack_require__(
          /*! ./utils/PropTypes */ './node_modules/react-transition-group/utils/PropTypes.js'
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                  var desc =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(obj, key)
                      : {};
                  if (desc.get || desc.set) {
                    Object.defineProperty(newObj, key, desc);
                  } else {
                    newObj[key] = obj[key];
                  }
                }
              }
            }
            newObj.default = obj;
            return newObj;
          }
        }

        function _objectWithoutPropertiesLoose(source, excluded) {
          if (source == null) return {};
          var target = {};
          var sourceKeys = Object.keys(source);
          var key, i;
          for (i = 0; i < sourceKeys.length; i++) {
            key = sourceKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            target[key] = source[key];
          }
          return target;
        }

        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          subClass.__proto__ = superClass;
        }

        var UNMOUNTED = 'unmounted';
        exports.UNMOUNTED = UNMOUNTED;
        var EXITED = 'exited';
        exports.EXITED = EXITED;
        var ENTERING = 'entering';
        exports.ENTERING = ENTERING;
        var ENTERED = 'entered';
        exports.ENTERED = ENTERED;
        var EXITING = 'exiting';
        /**
         * The Transition component lets you describe a transition from one component
         * state to another _over time_ with a simple declarative API. Most commonly
         * it's used to animate the mounting and unmounting of a component, but can also
         * be used to describe in-place transition states as well.
         *
         * ---
         *
         * **Note**: `Transition` is a platform-agnostic base component. If you're using
         * transitions in CSS, you'll probably want to use
         * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
         * instead. It inherits all the features of `Transition`, but contains
         * additional features necessary to play nice with CSS transitions (hence the
         * name of the component).
         *
         * ---
         *
         * By default the `Transition` component does not alter the behavior of the
         * component it renders, it only tracks "enter" and "exit" states for the
         * components. It's up to you to give meaning and effect to those states. For
         * example we can add styles to a component when it enters or exits:
         *
         * ```jsx
         * import { Transition } from 'react-transition-group';
         *
         * const duration = 300;
         *
         * const defaultStyle = {
         *   transition: `opacity ${duration}ms ease-in-out`,
         *   opacity: 0,
         * }
         *
         * const transitionStyles = {
         *   entering: { opacity: 0 },
         *   entered:  { opacity: 1 },
         * };
         *
         * const Fade = ({ in: inProp }) => (
         *   <Transition in={inProp} timeout={duration}>
         *     {state => (
         *       <div style={{
         *         ...defaultStyle,
         *         ...transitionStyles[state]
         *       }}>
         *         I'm a fade Transition!
         *       </div>
         *     )}
         *   </Transition>
         * );
         * ```
         *
         * There are 4 main states a Transition can be in:
         *  - `'entering'`
         *  - `'entered'`
         *  - `'exiting'`
         *  - `'exited'`
         *
         * Transition state is toggled via the `in` prop. When `true` the component
         * begins the "Enter" stage. During this stage, the component will shift from
         * its current transition state, to `'entering'` for the duration of the
         * transition and then to the `'entered'` stage once it's complete. Let's take
         * the following example (we'll use the
         * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
         *
         * ```jsx
         * function App() {
         *   const [inProp, setInProp] = useState(false);
         *   return (
         *     <div>
         *       <Transition in={inProp} timeout={500}>
         *         {state => (
         *           // ...
         *         )}
         *       </Transition>
         *       <button onClick={() => setInProp(true)}>
         *         Click to Enter
         *       </button>
         *     </div>
         *   );
         * }
         * ```
         *
         * When the button is clicked the component will shift to the `'entering'` state
         * and stay there for 500ms (the value of `timeout`) before it finally switches
         * to `'entered'`.
         *
         * When `in` is `false` the same thing happens except the state moves from
         * `'exiting'` to `'exited'`.
         */

        exports.EXITING = EXITING;

        var Transition =
          /*#__PURE__*/
          (function (_React$Component) {
            _inheritsLoose(Transition, _React$Component);

            function Transition(props, context) {
              var _this;

              _this = _React$Component.call(this, props, context) || this;
              var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears

              var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
              var initialStatus;
              _this.appearStatus = null;

              if (props.in) {
                if (appear) {
                  initialStatus = EXITED;
                  _this.appearStatus = ENTERING;
                } else {
                  initialStatus = ENTERED;
                }
              } else {
                if (props.unmountOnExit || props.mountOnEnter) {
                  initialStatus = UNMOUNTED;
                } else {
                  initialStatus = EXITED;
                }
              }

              _this.state = {
                status: initialStatus,
              };
              _this.nextCallback = null;
              return _this;
            }

            var _proto = Transition.prototype;

            _proto.getChildContext = function getChildContext() {
              return {
                transitionGroup: null, // allows for nested Transitions
              };
            };

            Transition.getDerivedStateFromProps = function getDerivedStateFromProps(
              _ref,
              prevState
            ) {
              var nextIn = _ref.in;

              if (nextIn && prevState.status === UNMOUNTED) {
                return {
                  status: EXITED,
                };
              }

              return null;
            }; // getSnapshotBeforeUpdate(prevProps) {
            //   let nextStatus = null
            //   if (prevProps !== this.props) {
            //     const { status } = this.state
            //     if (this.props.in) {
            //       if (status !== ENTERING && status !== ENTERED) {
            //         nextStatus = ENTERING
            //       }
            //     } else {
            //       if (status === ENTERING || status === ENTERED) {
            //         nextStatus = EXITING
            //       }
            //     }
            //   }
            //   return { nextStatus }
            // }

            _proto.componentDidMount = function componentDidMount() {
              this.updateStatus(true, this.appearStatus);
            };

            _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
              var nextStatus = null;

              if (prevProps !== this.props) {
                var status = this.state.status;

                if (this.props.in) {
                  if (status !== ENTERING && status !== ENTERED) {
                    nextStatus = ENTERING;
                  }
                } else {
                  if (status === ENTERING || status === ENTERED) {
                    nextStatus = EXITING;
                  }
                }
              }

              this.updateStatus(false, nextStatus);
            };

            _proto.componentWillUnmount = function componentWillUnmount() {
              this.cancelNextCallback();
            };

            _proto.getTimeouts = function getTimeouts() {
              var timeout = this.props.timeout;
              var exit, enter, appear;
              exit = enter = appear = timeout;

              if (timeout != null && typeof timeout !== 'number') {
                exit = timeout.exit;
                enter = timeout.enter; // TODO: remove fallback for next major

                appear = timeout.appear !== undefined ? timeout.appear : enter;
              }

              return {
                exit: exit,
                enter: enter,
                appear: appear,
              };
            };

            _proto.updateStatus = function updateStatus(mounting, nextStatus) {
              if (mounting === void 0) {
                mounting = false;
              }

              if (nextStatus !== null) {
                // nextStatus will always be ENTERING or EXITING.
                this.cancelNextCallback();

                var node = _reactDom.default.findDOMNode(this);

                if (nextStatus === ENTERING) {
                  this.performEnter(node, mounting);
                } else {
                  this.performExit(node);
                }
              } else if (this.props.unmountOnExit && this.state.status === EXITED) {
                this.setState({
                  status: UNMOUNTED,
                });
              }
            };

            _proto.performEnter = function performEnter(node, mounting) {
              var _this2 = this;

              var enter = this.props.enter;
              var appearing = this.context.transitionGroup
                ? this.context.transitionGroup.isMounting
                : mounting;
              var timeouts = this.getTimeouts();
              var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
              // if we are mounting and running this it means appear _must_ be set

              if (!mounting && !enter) {
                this.safeSetState(
                  {
                    status: ENTERED,
                  },
                  function () {
                    _this2.props.onEntered(node);
                  }
                );
                return;
              }

              this.props.onEnter(node, appearing);
              this.safeSetState(
                {
                  status: ENTERING,
                },
                function () {
                  _this2.props.onEntering(node, appearing);

                  _this2.onTransitionEnd(node, enterTimeout, function () {
                    _this2.safeSetState(
                      {
                        status: ENTERED,
                      },
                      function () {
                        _this2.props.onEntered(node, appearing);
                      }
                    );
                  });
                }
              );
            };

            _proto.performExit = function performExit(node) {
              var _this3 = this;

              var exit = this.props.exit;
              var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED

              if (!exit) {
                this.safeSetState(
                  {
                    status: EXITED,
                  },
                  function () {
                    _this3.props.onExited(node);
                  }
                );
                return;
              }

              this.props.onExit(node);
              this.safeSetState(
                {
                  status: EXITING,
                },
                function () {
                  _this3.props.onExiting(node);

                  _this3.onTransitionEnd(node, timeouts.exit, function () {
                    _this3.safeSetState(
                      {
                        status: EXITED,
                      },
                      function () {
                        _this3.props.onExited(node);
                      }
                    );
                  });
                }
              );
            };

            _proto.cancelNextCallback = function cancelNextCallback() {
              if (this.nextCallback !== null) {
                this.nextCallback.cancel();
                this.nextCallback = null;
              }
            };

            _proto.safeSetState = function safeSetState(nextState, callback) {
              // This shouldn't be necessary, but there are weird race conditions with
              // setState callbacks and unmounting in testing, so always make sure that
              // we can cancel any pending setState callbacks after we unmount.
              callback = this.setNextCallback(callback);
              this.setState(nextState, callback);
            };

            _proto.setNextCallback = function setNextCallback(callback) {
              var _this4 = this;

              var active = true;

              this.nextCallback = function (event) {
                if (active) {
                  active = false;
                  _this4.nextCallback = null;
                  callback(event);
                }
              };

              this.nextCallback.cancel = function () {
                active = false;
              };

              return this.nextCallback;
            };

            _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {
              this.setNextCallback(handler);
              var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;

              if (!node || doesNotHaveTimeoutOrListener) {
                setTimeout(this.nextCallback, 0);
                return;
              }

              if (this.props.addEndListener) {
                this.props.addEndListener(node, this.nextCallback);
              }

              if (timeout != null) {
                setTimeout(this.nextCallback, timeout);
              }
            };

            _proto.render = function render() {
              var status = this.state.status;

              if (status === UNMOUNTED) {
                return null;
              }

              var _this$props = this.props,
                children = _this$props.children,
                childProps = _objectWithoutPropertiesLoose(_this$props, ['children']); // filter props for Transtition

              delete childProps.in;
              delete childProps.mountOnEnter;
              delete childProps.unmountOnExit;
              delete childProps.appear;
              delete childProps.enter;
              delete childProps.exit;
              delete childProps.timeout;
              delete childProps.addEndListener;
              delete childProps.onEnter;
              delete childProps.onEntering;
              delete childProps.onEntered;
              delete childProps.onExit;
              delete childProps.onExiting;
              delete childProps.onExited;

              if (typeof children === 'function') {
                return children(status, childProps);
              }

              var child = _react.default.Children.only(children);

              return _react.default.cloneElement(child, childProps);
            };

            return Transition;
          })(_react.default.Component);

        Transition.contextTypes = {
          transitionGroup: PropTypes.object,
        };
        Transition.childContextTypes = {
          transitionGroup: function transitionGroup() {},
        };
        Transition.propTypes = true
          ? {
              /**
               * A `function` child can be used instead of a React element. This function is
               * called with the current transition status (`'entering'`, `'entered'`,
               * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context
               * specific props to a component.
               *
               * ```jsx
               * <Transition in={this.state.in} timeout={150}>
               *   {state => (
               *     <MyComponent className={`fade fade-${state}`} />
               *   )}
               * </Transition>
               * ```
               */
              children: PropTypes.oneOfType([
                PropTypes.func.isRequired,
                PropTypes.element.isRequired,
              ]).isRequired,

              /**
               * Show the component; triggers the enter or exit states
               */
              in: PropTypes.bool,

              /**
               * By default the child component is mounted immediately along with
               * the parent `Transition` component. If you want to "lazy mount" the component on the
               * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
               * mounted, even on "exited", unless you also specify `unmountOnExit`.
               */
              mountOnEnter: PropTypes.bool,

              /**
               * By default the child component stays mounted after it reaches the `'exited'` state.
               * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
               */
              unmountOnExit: PropTypes.bool,

              /**
               * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
               * If you want to transition on the first mount set `appear` to `true`, and the
               * component will transition in as soon as the `<Transition>` mounts.
               *
               * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
               */
              appear: PropTypes.bool,

              /**
               * Enable or disable enter transitions.
               */
              enter: PropTypes.bool,

              /**
               * Enable or disable exit transitions.
               */
              exit: PropTypes.bool,

              /**
               * The duration of the transition, in milliseconds.
               * Required unless `addEndListener` is provided.
               *
               * You may specify a single timeout for all transitions:
               *
               * ```jsx
               * timeout={500}
               * ```
               *
               * or individually:
               *
               * ```jsx
               * timeout={{
               *  appear: 500,
               *  enter: 300,
               *  exit: 500,
               * }}
               * ```
               *
               * - `appear` defaults to the value of `enter`
               * - `enter` defaults to `0`
               * - `exit` defaults to `0`
               *
               * @type {number | { enter?: number, exit?: number, appear?: number }}
               */
              timeout: function timeout(props) {
                var pt = _PropTypes.timeoutsShape;
                if (!props.addEndListener) pt = pt.isRequired;

                for (
                  var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
                  _key < _len;
                  _key++
                ) {
                  args[_key - 1] = arguments[_key];
                }

                return pt.apply(void 0, [props].concat(args));
              },

              /**
               * Add a custom transition end trigger. Called with the transitioning
               * DOM node and a `done` callback. Allows for more fine grained transition end
               * logic. **Note:** Timeouts are still used as a fallback if provided.
               *
               * ```jsx
               * addEndListener={(node, done) => {
               *   // use the css transitionend event to mark the finish of a transition
               *   node.addEventListener('transitionend', done, false);
               * }}
               * ```
               */
              addEndListener: PropTypes.func,

              /**
               * Callback fired before the "entering" status is applied. An extra parameter
               * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
               *
               * @type Function(node: HtmlElement, isAppearing: bool) -> void
               */
              onEnter: PropTypes.func,

              /**
               * Callback fired after the "entering" status is applied. An extra parameter
               * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
               *
               * @type Function(node: HtmlElement, isAppearing: bool)
               */
              onEntering: PropTypes.func,

              /**
               * Callback fired after the "entered" status is applied. An extra parameter
               * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
               *
               * @type Function(node: HtmlElement, isAppearing: bool) -> void
               */
              onEntered: PropTypes.func,

              /**
               * Callback fired before the "exiting" status is applied.
               *
               * @type Function(node: HtmlElement) -> void
               */
              onExit: PropTypes.func,

              /**
               * Callback fired after the "exiting" status is applied.
               *
               * @type Function(node: HtmlElement) -> void
               */
              onExiting: PropTypes.func,

              /**
               * Callback fired after the "exited" status is applied.
               *
               * @type Function(node: HtmlElement) -> void
               */
              onExited: PropTypes.func, // Name the function so it is clearer in the documentation
            }
          : undefined;

        function noop() {}

        Transition.defaultProps = {
          in: false,
          mountOnEnter: false,
          unmountOnExit: false,
          appear: false,
          enter: true,
          exit: true,
          onEnter: noop,
          onEntering: noop,
          onEntered: noop,
          onExit: noop,
          onExiting: noop,
          onExited: noop,
        };
        Transition.UNMOUNTED = 0;
        Transition.EXITED = 1;
        Transition.ENTERING = 2;
        Transition.ENTERED = 3;
        Transition.EXITING = 4;

        var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);

        exports.default = _default;

        /***/
      },

    /***/ './node_modules/react-transition-group/utils/PropTypes.js':
      /*!****************************************************************!*\
  !*** ./node_modules/react-transition-group/utils/PropTypes.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.classNamesShape = exports.timeoutsShape = void 0;

        var _propTypes = _interopRequireDefault(
          __webpack_require__(/*! prop-types */ './node_modules/prop-types/index.js')
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var timeoutsShape = true
          ? _propTypes.default.oneOfType([
              _propTypes.default.number,
              _propTypes.default.shape({
                enter: _propTypes.default.number,
                exit: _propTypes.default.number,
                appear: _propTypes.default.number,
              }).isRequired,
            ])
          : undefined;
        exports.timeoutsShape = timeoutsShape;
        var classNamesShape = true
          ? _propTypes.default.oneOfType([
              _propTypes.default.string,
              _propTypes.default.shape({
                enter: _propTypes.default.string,
                exit: _propTypes.default.string,
                active: _propTypes.default.string,
              }),
              _propTypes.default.shape({
                enter: _propTypes.default.string,
                enterDone: _propTypes.default.string,
                enterActive: _propTypes.default.string,
                exit: _propTypes.default.string,
                exitDone: _propTypes.default.string,
                exitActive: _propTypes.default.string,
              }),
            ])
          : undefined;
        exports.classNamesShape = classNamesShape;

        /***/
      },

    /***/ './node_modules/react/index.js':
      /*!*******************************************************************************************!*\
  !*** delegated ./node_modules/react/index.js from dll-reference dll_5030f387d328e4415785 ***!
  \*******************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_5030f387d328e4415785 */ 'dll-reference dll_5030f387d328e4415785'
        )('./node_modules/react/index.js');

        /***/
      },

    /***/ './node_modules/regenerator-runtime/runtime.js':
      /*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var runtime = (function (exports) {
          'use strict';

          var Op = Object.prototype;
          var hasOwn = Op.hasOwnProperty;
          var undefined; // More compressible than void 0.
          var $Symbol = typeof Symbol === 'function' ? Symbol : {};
          var iteratorSymbol = $Symbol.iterator || '@@iterator';
          var asyncIteratorSymbol = $Symbol.asyncIterator || '@@asyncIterator';
          var toStringTagSymbol = $Symbol.toStringTag || '@@toStringTag';

          function wrap(innerFn, outerFn, self, tryLocsList) {
            // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
            var protoGenerator =
              outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
            var generator = Object.create(protoGenerator.prototype);
            var context = new Context(tryLocsList || []);

            // The ._invoke method unifies the implementations of the .next,
            // .throw, and .return methods.
            generator._invoke = makeInvokeMethod(innerFn, self, context);

            return generator;
          }
          exports.wrap = wrap;

          // Try/catch helper to minimize deoptimizations. Returns a completion
          // record like context.tryEntries[i].completion. This interface could
          // have been (and was previously) designed to take a closure to be
          // invoked without arguments, but in all the cases we care about we
          // already have an existing method we want to call, so there's no need
          // to create a new function object. We can even get away with assuming
          // the method takes exactly one argument, since that happens to be true
          // in every case, so we don't have to touch the arguments object. The
          // only additional allocation required is the completion record, which
          // has a stable shape and so hopefully should be cheap to allocate.
          function tryCatch(fn, obj, arg) {
            try {
              return { type: 'normal', arg: fn.call(obj, arg) };
            } catch (err) {
              return { type: 'throw', arg: err };
            }
          }

          var GenStateSuspendedStart = 'suspendedStart';
          var GenStateSuspendedYield = 'suspendedYield';
          var GenStateExecuting = 'executing';
          var GenStateCompleted = 'completed';

          // Returning this object from the innerFn has the same effect as
          // breaking out of the dispatch switch statement.
          var ContinueSentinel = {};

          // Dummy constructor functions that we use as the .constructor and
          // .constructor.prototype properties for functions that return Generator
          // objects. For full spec compliance, you may wish to configure your
          // minifier not to mangle the names of these two functions.
          function Generator() {}
          function GeneratorFunction() {}
          function GeneratorFunctionPrototype() {}

          // This is a polyfill for %IteratorPrototype% for environments that
          // don't natively support it.
          var IteratorPrototype = {};
          IteratorPrototype[iteratorSymbol] = function () {
            return this;
          };

          var getProto = Object.getPrototypeOf;
          var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
          if (
            NativeIteratorPrototype &&
            NativeIteratorPrototype !== Op &&
            hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
          ) {
            // This environment has a native %IteratorPrototype%; use it instead
            // of the polyfill.
            IteratorPrototype = NativeIteratorPrototype;
          }

          var Gp = (GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(
            IteratorPrototype
          ));
          GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
          GeneratorFunctionPrototype.constructor = GeneratorFunction;
          GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName =
            'GeneratorFunction';

          // Helper for defining the .next, .throw, and .return methods of the
          // Iterator interface in terms of a single ._invoke method.
          function defineIteratorMethods(prototype) {
            ['next', 'throw', 'return'].forEach(function (method) {
              prototype[method] = function (arg) {
                return this._invoke(method, arg);
              };
            });
          }

          exports.isGeneratorFunction = function (genFun) {
            var ctor = typeof genFun === 'function' && genFun.constructor;
            return ctor
              ? ctor === GeneratorFunction ||
                  // For the native GeneratorFunction constructor, the best we can
                  // do is to check its .name property.
                  (ctor.displayName || ctor.name) === 'GeneratorFunction'
              : false;
          };

          exports.mark = function (genFun) {
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
            } else {
              genFun.__proto__ = GeneratorFunctionPrototype;
              if (!(toStringTagSymbol in genFun)) {
                genFun[toStringTagSymbol] = 'GeneratorFunction';
              }
            }
            genFun.prototype = Object.create(Gp);
            return genFun;
          };

          // Within the body of any async function, `await x` is transformed to
          // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
          // `hasOwn.call(value, "__await")` to determine if the yielded value is
          // meant to be awaited.
          exports.awrap = function (arg) {
            return { __await: arg };
          };

          function AsyncIterator(generator, PromiseImpl) {
            function invoke(method, arg, resolve, reject) {
              var record = tryCatch(generator[method], generator, arg);
              if (record.type === 'throw') {
                reject(record.arg);
              } else {
                var result = record.arg;
                var value = result.value;
                if (value && typeof value === 'object' && hasOwn.call(value, '__await')) {
                  return PromiseImpl.resolve(value.__await).then(
                    function (value) {
                      invoke('next', value, resolve, reject);
                    },
                    function (err) {
                      invoke('throw', err, resolve, reject);
                    }
                  );
                }

                return PromiseImpl.resolve(value).then(
                  function (unwrapped) {
                    // When a yielded Promise is resolved, its final value becomes
                    // the .value of the Promise<{value,done}> result for the
                    // current iteration.
                    result.value = unwrapped;
                    resolve(result);
                  },
                  function (error) {
                    // If a rejected Promise was yielded, throw the rejection back
                    // into the async generator function so it can be handled there.
                    return invoke('throw', error, resolve, reject);
                  }
                );
              }
            }

            var previousPromise;

            function enqueue(method, arg) {
              function callInvokeWithMethodAndArg() {
                return new PromiseImpl(function (resolve, reject) {
                  invoke(method, arg, resolve, reject);
                });
              }

              return (previousPromise =
                // If enqueue has been called before, then we want to wait until
                // all previous Promises have been resolved before calling invoke,
                // so that results are always delivered in the correct order. If
                // enqueue has not been called before, then it is important to
                // call invoke immediately, without waiting on a callback to fire,
                // so that the async generator function has the opportunity to do
                // any necessary setup in a predictable way. This predictability
                // is why the Promise constructor synchronously invokes its
                // executor callback, and why async functions synchronously
                // execute code before the first await. Since we implement simple
                // async functions in terms of async generators, it is especially
                // important to get this right, even though it requires care.
                previousPromise
                  ? previousPromise.then(
                      callInvokeWithMethodAndArg,
                      // Avoid propagating failures to Promises returned by later
                      // invocations of the iterator.
                      callInvokeWithMethodAndArg
                    )
                  : callInvokeWithMethodAndArg());
            }

            // Define the unified helper method that is used to implement .next,
            // .throw, and .return (see defineIteratorMethods).
            this._invoke = enqueue;
          }

          defineIteratorMethods(AsyncIterator.prototype);
          AsyncIterator.prototype[asyncIteratorSymbol] = function () {
            return this;
          };
          exports.AsyncIterator = AsyncIterator;

          // Note that simple async functions are implemented on top of
          // AsyncIterator objects; they just return a Promise for the value of
          // the final result produced by the iterator.
          exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
            if (PromiseImpl === void 0) PromiseImpl = Promise;

            var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);

            return exports.isGeneratorFunction(outerFn)
              ? iter // If outerFn is a generator, return the full iterator.
              : iter.next().then(function (result) {
                  return result.done ? result.value : iter.next();
                });
          };

          function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart;

            return function invoke(method, arg) {
              if (state === GenStateExecuting) {
                throw new Error('Generator is already running');
              }

              if (state === GenStateCompleted) {
                if (method === 'throw') {
                  throw arg;
                }

                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
              }

              context.method = method;
              context.arg = arg;

              while (true) {
                var delegate = context.delegate;
                if (delegate) {
                  var delegateResult = maybeInvokeDelegate(delegate, context);
                  if (delegateResult) {
                    if (delegateResult === ContinueSentinel) continue;
                    return delegateResult;
                  }
                }

                if (context.method === 'next') {
                  // Setting context._sent for legacy support of Babel's
                  // function.sent implementation.
                  context.sent = context._sent = context.arg;
                } else if (context.method === 'throw') {
                  if (state === GenStateSuspendedStart) {
                    state = GenStateCompleted;
                    throw context.arg;
                  }

                  context.dispatchException(context.arg);
                } else if (context.method === 'return') {
                  context.abrupt('return', context.arg);
                }

                state = GenStateExecuting;

                var record = tryCatch(innerFn, self, context);
                if (record.type === 'normal') {
                  // If an exception is thrown from innerFn, we leave state ===
                  // GenStateExecuting and loop back for another invocation.
                  state = context.done ? GenStateCompleted : GenStateSuspendedYield;

                  if (record.arg === ContinueSentinel) {
                    continue;
                  }

                  return {
                    value: record.arg,
                    done: context.done,
                  };
                } else if (record.type === 'throw') {
                  state = GenStateCompleted;
                  // Dispatch the exception by looping back around to the
                  // context.dispatchException(context.arg) call above.
                  context.method = 'throw';
                  context.arg = record.arg;
                }
              }
            };
          }

          // Call delegate.iterator[context.method](context.arg) and handle the
          // result, either by returning a { value, done } result from the
          // delegate iterator, or by modifying context.method and context.arg,
          // setting context.delegate to null, and returning the ContinueSentinel.
          function maybeInvokeDelegate(delegate, context) {
            var method = delegate.iterator[context.method];
            if (method === undefined) {
              // A .throw or .return when the delegate iterator has no .throw
              // method always terminates the yield* loop.
              context.delegate = null;

              if (context.method === 'throw') {
                // Note: ["return"] must be used for ES3 parsing compatibility.
                if (delegate.iterator['return']) {
                  // If the delegate iterator has a return method, give it a
                  // chance to clean up.
                  context.method = 'return';
                  context.arg = undefined;
                  maybeInvokeDelegate(delegate, context);

                  if (context.method === 'throw') {
                    // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel;
                  }
                }

                context.method = 'throw';
                context.arg = new TypeError("The iterator does not provide a 'throw' method");
              }

              return ContinueSentinel;
            }

            var record = tryCatch(method, delegate.iterator, context.arg);

            if (record.type === 'throw') {
              context.method = 'throw';
              context.arg = record.arg;
              context.delegate = null;
              return ContinueSentinel;
            }

            var info = record.arg;

            if (!info) {
              context.method = 'throw';
              context.arg = new TypeError('iterator result is not an object');
              context.delegate = null;
              return ContinueSentinel;
            }

            if (info.done) {
              // Assign the result of the finished delegate to the temporary
              // variable specified by delegate.resultName (see delegateYield).
              context[delegate.resultName] = info.value;

              // Resume execution at the desired location (see delegateYield).
              context.next = delegate.nextLoc;

              // If context.method was "throw" but the delegate handled the
              // exception, let the outer generator proceed normally. If
              // context.method was "next", forget context.arg since it has been
              // "consumed" by the delegate iterator. If context.method was
              // "return", allow the original .return call to continue in the
              // outer generator.
              if (context.method !== 'return') {
                context.method = 'next';
                context.arg = undefined;
              }
            } else {
              // Re-yield the result returned by the delegate method.
              return info;
            }

            // The delegate iterator is finished, so forget it and continue with
            // the outer generator.
            context.delegate = null;
            return ContinueSentinel;
          }

          // Define Generator.prototype.{next,throw,return} in terms of the
          // unified ._invoke helper method.
          defineIteratorMethods(Gp);

          Gp[toStringTagSymbol] = 'Generator';

          // A Generator should always return itself as the iterator object when the
          // @@iterator function is called on it. Some browsers' implementations of the
          // iterator prototype chain incorrectly implement this, causing the Generator
          // object to not be returned from this call. This ensures that doesn't happen.
          // See https://github.com/facebook/regenerator/issues/274 for more details.
          Gp[iteratorSymbol] = function () {
            return this;
          };

          Gp.toString = function () {
            return '[object Generator]';
          };

          function pushTryEntry(locs) {
            var entry = { tryLoc: locs[0] };

            if (1 in locs) {
              entry.catchLoc = locs[1];
            }

            if (2 in locs) {
              entry.finallyLoc = locs[2];
              entry.afterLoc = locs[3];
            }

            this.tryEntries.push(entry);
          }

          function resetTryEntry(entry) {
            var record = entry.completion || {};
            record.type = 'normal';
            delete record.arg;
            entry.completion = record;
          }

          function Context(tryLocsList) {
            // The root entry object (effectively a try statement without a catch
            // or a finally block) gives us a place to store values thrown from
            // locations where there is no enclosing try statement.
            this.tryEntries = [{ tryLoc: 'root' }];
            tryLocsList.forEach(pushTryEntry, this);
            this.reset(true);
          }

          exports.keys = function (object) {
            var keys = [];
            for (var key in object) {
              keys.push(key);
            }
            keys.reverse();

            // Rather than returning an object with a next method, we keep
            // things simple and return the next function itself.
            return function next() {
              while (keys.length) {
                var key = keys.pop();
                if (key in object) {
                  next.value = key;
                  next.done = false;
                  return next;
                }
              }

              // To avoid creating an additional object, we just hang the .value
              // and .done properties off the next function object itself. This
              // also ensures that the minifier will not anonymize the function.
              next.done = true;
              return next;
            };
          };

          function values(iterable) {
            if (iterable) {
              var iteratorMethod = iterable[iteratorSymbol];
              if (iteratorMethod) {
                return iteratorMethod.call(iterable);
              }

              if (typeof iterable.next === 'function') {
                return iterable;
              }

              if (!isNaN(iterable.length)) {
                var i = -1,
                  next = function next() {
                    while (++i < iterable.length) {
                      if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i];
                        next.done = false;
                        return next;
                      }
                    }

                    next.value = undefined;
                    next.done = true;

                    return next;
                  };

                return (next.next = next);
              }
            }

            // Return an iterator with no values.
            return { next: doneResult };
          }
          exports.values = values;

          function doneResult() {
            return { value: undefined, done: true };
          }

          Context.prototype = {
            constructor: Context,

            reset: function (skipTempReset) {
              this.prev = 0;
              this.next = 0;
              // Resetting context._sent for legacy support of Babel's
              // function.sent implementation.
              this.sent = this._sent = undefined;
              this.done = false;
              this.delegate = null;

              this.method = 'next';
              this.arg = undefined;

              this.tryEntries.forEach(resetTryEntry);

              if (!skipTempReset) {
                for (var name in this) {
                  // Not sure about the optimal order of these conditions:
                  if (name.charAt(0) === 't' && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
                    this[name] = undefined;
                  }
                }
              }
            },

            stop: function () {
              this.done = true;

              var rootEntry = this.tryEntries[0];
              var rootRecord = rootEntry.completion;
              if (rootRecord.type === 'throw') {
                throw rootRecord.arg;
              }

              return this.rval;
            },

            dispatchException: function (exception) {
              if (this.done) {
                throw exception;
              }

              var context = this;
              function handle(loc, caught) {
                record.type = 'throw';
                record.arg = exception;
                context.next = loc;

                if (caught) {
                  // If the dispatched exception was caught by a catch block,
                  // then let that catch block handle the exception normally.
                  context.method = 'next';
                  context.arg = undefined;
                }

                return !!caught;
              }

              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                var record = entry.completion;

                if (entry.tryLoc === 'root') {
                  // Exception thrown outside of any try block that could handle
                  // it, so set the completion value of the entire function to
                  // throw the exception.
                  return handle('end');
                }

                if (entry.tryLoc <= this.prev) {
                  var hasCatch = hasOwn.call(entry, 'catchLoc');
                  var hasFinally = hasOwn.call(entry, 'finallyLoc');

                  if (hasCatch && hasFinally) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    } else if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else if (hasCatch) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    }
                  } else if (hasFinally) {
                    if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else {
                    throw new Error('try statement without catch or finally');
                  }
                }
              }
            },

            abrupt: function (type, arg) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (
                  entry.tryLoc <= this.prev &&
                  hasOwn.call(entry, 'finallyLoc') &&
                  this.prev < entry.finallyLoc
                ) {
                  var finallyEntry = entry;
                  break;
                }
              }

              if (
                finallyEntry &&
                (type === 'break' || type === 'continue') &&
                finallyEntry.tryLoc <= arg &&
                arg <= finallyEntry.finallyLoc
              ) {
                // Ignore the finally entry if control is not jumping to a
                // location outside the try/catch block.
                finallyEntry = null;
              }

              var record = finallyEntry ? finallyEntry.completion : {};
              record.type = type;
              record.arg = arg;

              if (finallyEntry) {
                this.method = 'next';
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
              }

              return this.complete(record);
            },

            complete: function (record, afterLoc) {
              if (record.type === 'throw') {
                throw record.arg;
              }

              if (record.type === 'break' || record.type === 'continue') {
                this.next = record.arg;
              } else if (record.type === 'return') {
                this.rval = this.arg = record.arg;
                this.method = 'return';
                this.next = 'end';
              } else if (record.type === 'normal' && afterLoc) {
                this.next = afterLoc;
              }

              return ContinueSentinel;
            },

            finish: function (finallyLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                  this.complete(entry.completion, entry.afterLoc);
                  resetTryEntry(entry);
                  return ContinueSentinel;
                }
              }
            },

            catch: function (tryLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                  var record = entry.completion;
                  if (record.type === 'throw') {
                    var thrown = record.arg;
                    resetTryEntry(entry);
                  }
                  return thrown;
                }
              }

              // The context.catch method must only be called with a location
              // argument that corresponds to a known catch block.
              throw new Error('illegal catch attempt');
            },

            delegateYield: function (iterable, resultName, nextLoc) {
              this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc,
              };

              if (this.method === 'next') {
                // Deliberately forget the last sent value so that we don't
                // accidentally pass it on to the delegate.
                this.arg = undefined;
              }

              return ContinueSentinel;
            },
          };

          // Regardless of whether this script is executing as a CommonJS module
          // or not, return the runtime object so that we can declare the variable
          // regeneratorRuntime in the outer scope, which allows this module to be
          // injected easily by `bin/regenerator --include-runtime script.js`.
          return exports;
        })(
          // If this script is executing as a CommonJS module, use module.exports
          // as the regeneratorRuntime namespace. Otherwise create a new empty
          // object. Either way, the resulting object will be used to initialize
          // the regeneratorRuntime variable at the top of this file.
          true ? module.exports : undefined
        );

        try {
          regeneratorRuntime = runtime;
        } catch (accidentalStrictMode) {
          // This module should not be running in strict mode, so the above
          // assignment should always work unless something is misconfigured. Just
          // in case runtime.js accidentally runs in strict mode, we can escape
          // strict mode using a global Function call. This could conceivably fail
          // if a Content Security Policy forbids using Function, but in that case
          // the proper solution is to fix the accidental strict mode problem. If
          // you've misconfigured your bundler to force strict mode and applied a
          // CSP to forbid Function, and you're not willing to fix either of those
          // problems, please detail your unique predicament in a GitHub issue.
          Function('r', 'regeneratorRuntime = r')(runtime);
        }

        /***/
      },

    /***/ './node_modules/shallowequal/index.js':
      /*!********************************************!*\
  !*** ./node_modules/shallowequal/index.js ***!
  \********************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        //

        module.exports = function shallowEqual(objA, objB, compare, compareContext) {
          var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

          if (ret !== void 0) {
            return !!ret;
          }

          if (objA === objB) {
            return true;
          }

          if (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {
            return false;
          }

          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);

          if (keysA.length !== keysB.length) {
            return false;
          }

          var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

          // Test for A's keys different from B.
          for (var idx = 0; idx < keysA.length; idx++) {
            var key = keysA[idx];

            if (!bHasOwnProperty(key)) {
              return false;
            }

            var valueA = objA[key];
            var valueB = objB[key];

            ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

            if (ret === false || (ret === void 0 && valueA !== valueB)) {
              return false;
            }
          }

          return true;
        };

        /***/
      },

    /***/ './node_modules/string-hash/index.js':
      /*!*******************************************!*\
  !*** ./node_modules/string-hash/index.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        function hash(str) {
          var hash = 5381,
            i = str.length;

          while (i) {
            hash = (hash * 33) ^ str.charCodeAt(--i);
          }

          /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed
           * integers. Since we want the results to be always positive, convert the
           * signed int to an unsigned by doing an unsigned bitshift. */
          return hash >>> 0;
        }

        module.exports = hash;

        /***/
      },

    /***/ './node_modules/styled-components/dist/styled-components.browser.esm.js':
      /*!******************************************************************************!*\
  !*** ./node_modules/styled-components/dist/styled-components.browser.esm.js ***!
  \******************************************************************************/
      /*! exports provided: default, ServerStyleSheet, StyleSheetConsumer, StyleSheetContext, StyleSheetManager, ThemeConsumer, ThemeContext, ThemeProvider, __PRIVATE__, createGlobalStyle, css, isStyledComponent, keyframes, useTheme, version, withTheme */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (process) {
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'ServerStyleSheet',
            function () {
              return ServerStyleSheet;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'StyleSheetConsumer',
            function () {
              return StyleSheetConsumer;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'StyleSheetContext',
            function () {
              return StyleSheetContext;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'StyleSheetManager',
            function () {
              return StyleSheetManager;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'ThemeConsumer',
            function () {
              return ThemeConsumer;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'ThemeContext',
            function () {
              return ThemeContext;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'ThemeProvider',
            function () {
              return ThemeProvider;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            '__PRIVATE__',
            function () {
              return __PRIVATE__;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'createGlobalStyle',
            function () {
              return createGlobalStyle;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'css',
            function () {
              return css;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'isStyledComponent',
            function () {
              return isStyledComponent;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'keyframes',
            function () {
              return keyframes;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'useTheme',
            function () {
              return useTheme;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'version',
            function () {
              return version;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'withTheme',
            function () {
              return withTheme;
            }
          );
          /* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! react-is */ './node_modules/react-is/index.js'
          );
          /* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            react_is__WEBPACK_IMPORTED_MODULE_0__
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! react */ './node_modules/react/index.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_1__
          );
          /* harmony import */ var shallowequal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! shallowequal */ './node_modules/shallowequal/index.js'
          );
          /* harmony import */ var shallowequal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
            shallowequal__WEBPACK_IMPORTED_MODULE_2__
          );
          /* harmony import */ var _emotion_stylis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! @emotion/stylis */ './node_modules/@emotion/stylis/dist/stylis.browser.esm.js'
          );
          /* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! @emotion/unitless */ './node_modules/@emotion/unitless/dist/unitless.browser.esm.js'
          );
          /* harmony import */ var _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
            /*! @emotion/is-prop-valid */ './node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js'
          );
          /* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
            /*! hoist-non-react-statics */ './node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js'
          );
          /* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
            hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6__
          );

          function _extends() {
            _extends =
              Object.assign ||
              function (target) {
                for (var i = 1; i < arguments.length; i++) {
                  var source = arguments[i];

                  for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                      target[key] = source[key];
                    }
                  }
                }

                return target;
              };

            return _extends.apply(this, arguments);
          }

          function _objectWithoutPropertiesLoose(source, excluded) {
            if (source == null) return {};
            var target = {};
            var sourceKeys = Object.keys(source);
            var key, i;

            for (i = 0; i < sourceKeys.length; i++) {
              key = sourceKeys[i];
              if (excluded.indexOf(key) >= 0) continue;
              target[key] = source[key];
            }

            return target;
          }

          //
          var interleave = function (strings, interpolations) {
            var result = [strings[0]];

            for (var i = 0, len = interpolations.length; i < len; i += 1) {
              result.push(interpolations[i], strings[i + 1]);
            }

            return result;
          };

          //
          var isPlainObject = function (x) {
            return (
              x !== null &&
              typeof x === 'object' &&
              (x.toString ? x.toString() : Object.prototype.toString.call(x)) ===
                '[object Object]' &&
              !Object(react_is__WEBPACK_IMPORTED_MODULE_0__['typeOf'])(x)
            );
          };

          //
          var EMPTY_ARRAY = Object.freeze([]);
          var EMPTY_OBJECT = Object.freeze({});

          //
          function isFunction(test) {
            return typeof test === 'function';
          }

          //
          function getComponentName(target) {
            return (
              (true ? typeof target === 'string' && target : undefined) || // $FlowFixMe
              target.displayName || // $FlowFixMe
              target.name ||
              'Component'
            );
          }

          //
          function isStatelessFunction(test) {
            return (
              typeof test === 'function' && !(test.prototype && test.prototype.isReactComponent)
            );
          }

          //
          function isStyledComponent(target) {
            return target && typeof target.styledComponentId === 'string';
          }

          //
          var SC_ATTR =
            (typeof process !== 'undefined' &&
              (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR)) ||
            'data-styled';
          var SC_ATTR_ACTIVE = 'active';
          var SC_ATTR_VERSION = 'data-styled-version';
          var SC_VERSION = '5.1.1';
          var SPLITTER = '/*!sc*/\n';
          var IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;
          var DISABLE_SPEEDY =
            (typeof SC_DISABLE_SPEEDY === 'boolean' && SC_DISABLE_SPEEDY) ||
            (typeof process !== 'undefined' &&
              (process.env.REACT_APP_SC_DISABLE_SPEEDY || process.env.SC_DISABLE_SPEEDY)) ||
            'development' !== 'production'; // Shared empty execution context when generating static styles

          var STATIC_EXECUTION_CONTEXT = {};

          //

          /* eslint-disable camelcase, no-undef */
          var getNonce = function getNonce() {
            return true ? __webpack_require__.nc : undefined;
          };

          var errorMap = {
            '1': 'Cannot create styled-component for component: %s.\n\n',
            '2':
              "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n",
            '3':
              'Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n',
            '4':
              'The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n',
            '5':
              'The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n',
            '6':
              "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n",
            '7':
              'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',
            '8': 'ThemeProvider: Please make your "theme" prop an object.\n\n',
            '9': 'Missing document `<head>`\n\n',
            '10':
              'Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n',
            '11':
              '_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n',
            '12':
              'It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n',
            '13':
              '%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n',
            '14': 'ThemeProvider: "theme" prop is required.\n\n',
            '15':
              "A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n",
            '16':
              "Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n",
            '17':
              "CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n",
          };

          //
          var ERRORS = true ? errorMap : undefined;
          /**
           * super basic version of sprintf
           */

          function format() {
            var a = arguments.length <= 0 ? undefined : arguments[0];
            var b = [];

            for (var c = 1, len = arguments.length; c < len; c += 1) {
              b.push(c < 0 || arguments.length <= c ? undefined : arguments[c]);
            }

            b.forEach(function (d) {
              a = a.replace(/%[a-z]/, d);
            });
            return a;
          }
          /**
           * Create an error file out of errors.md for development and a simple web link to the full errors
           * in production mode.
           */

          function throwStyledComponentsError(code) {
            for (
              var _len = arguments.length,
                interpolations = new Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              interpolations[_key - 1] = arguments[_key];
            }

            if (false) {
            } else {
              throw new Error(format.apply(void 0, [ERRORS[code]].concat(interpolations)).trim());
            }
          }

          //
          var ELEMENT_TYPE = 1;
          /* Node.ELEMENT_TYPE */

          /** Find last style element if any inside target */

          var findLastStyleTag = function findLastStyleTag(target) {
            var childNodes = target.childNodes;

            for (var i = childNodes.length; i >= 0; i--) {
              var child = childNodes[i];

              if (child && child.nodeType === ELEMENT_TYPE && child.hasAttribute(SC_ATTR)) {
                return child;
              }
            }

            return undefined;
          };
          /** Create a style element inside `target` or <head> after the last */

          var makeStyleTag = function makeStyleTag(target) {
            var head = document.head;
            var parent = target || head;
            var style = document.createElement('style');
            var prevStyle = findLastStyleTag(parent);
            var nextSibling = prevStyle !== undefined ? prevStyle.nextSibling : null;
            style.setAttribute(SC_ATTR, SC_ATTR_ACTIVE);
            style.setAttribute(SC_ATTR_VERSION, SC_VERSION);
            var nonce = getNonce();
            if (nonce) style.setAttribute('nonce', nonce);
            parent.insertBefore(style, nextSibling);
            return style;
          };
          /** Get the CSSStyleSheet instance for a given style element */

          var getSheet = function getSheet(tag) {
            if (tag.sheet) {
              return tag.sheet;
            } // Avoid Firefox quirk where the style element might not have a sheet property

            var _document = document,
              styleSheets = _document.styleSheets;

            for (var i = 0, l = styleSheets.length; i < l; i++) {
              var sheet = styleSheets[i];

              if (sheet.ownerNode === tag) {
                return sheet;
              }
            }

            throwStyledComponentsError(17);
            return undefined;
          };

          //
          /** Create a CSSStyleSheet-like tag depending on the environment */

          var makeTag = function makeTag(_ref) {
            var isServer = _ref.isServer,
              useCSSOMInjection = _ref.useCSSOMInjection,
              target = _ref.target;

            if (isServer) {
              return new VirtualTag(target);
            } else if (useCSSOMInjection) {
              return new CSSOMTag(target);
            } else {
              return new TextTag(target);
            }
          };
          var CSSOMTag = /*#__PURE__*/ (function () {
            function CSSOMTag(target) {
              var element = (this.element = makeStyleTag(target)); // Avoid Edge bug where empty style elements don't create sheets

              element.appendChild(document.createTextNode(''));
              this.sheet = getSheet(element);
              this.length = 0;
            }

            var _proto = CSSOMTag.prototype;

            _proto.insertRule = function insertRule(index, rule) {
              try {
                this.sheet.insertRule(rule, index);
                this.length++;
                return true;
              } catch (_error) {
                return false;
              }
            };

            _proto.deleteRule = function deleteRule(index) {
              this.sheet.deleteRule(index);
              this.length--;
            };

            _proto.getRule = function getRule(index) {
              var rule = this.sheet.cssRules[index]; // Avoid IE11 quirk where cssText is inaccessible on some invalid rules

              if (rule !== undefined && typeof rule.cssText === 'string') {
                return rule.cssText;
              } else {
                return '';
              }
            };

            return CSSOMTag;
          })();
          /** A Tag that emulates the CSSStyleSheet API but uses text nodes */

          var TextTag = /*#__PURE__*/ (function () {
            function TextTag(target) {
              var element = (this.element = makeStyleTag(target));
              this.nodes = element.childNodes;
              this.length = 0;
            }

            var _proto2 = TextTag.prototype;

            _proto2.insertRule = function insertRule(index, rule) {
              if (index <= this.length && index >= 0) {
                var node = document.createTextNode(rule);
                var refNode = this.nodes[index];
                this.element.insertBefore(node, refNode || null);
                this.length++;
                return true;
              } else {
                return false;
              }
            };

            _proto2.deleteRule = function deleteRule(index) {
              this.element.removeChild(this.nodes[index]);
              this.length--;
            };

            _proto2.getRule = function getRule(index) {
              if (index < this.length) {
                return this.nodes[index].textContent;
              } else {
                return '';
              }
            };

            return TextTag;
          })();
          /** A completely virtual (server-side) Tag that doesn't manipulate the DOM */

          var VirtualTag = /*#__PURE__*/ (function () {
            function VirtualTag(_target) {
              this.rules = [];
              this.length = 0;
            }

            var _proto3 = VirtualTag.prototype;

            _proto3.insertRule = function insertRule(index, rule) {
              if (index <= this.length) {
                this.rules.splice(index, 0, rule);
                this.length++;
                return true;
              } else {
                return false;
              }
            };

            _proto3.deleteRule = function deleteRule(index) {
              this.rules.splice(index, 1);
              this.length--;
            };

            _proto3.getRule = function getRule(index) {
              if (index < this.length) {
                return this.rules[index];
              } else {
                return '';
              }
            };

            return VirtualTag;
          })();

          //
          /** Create a GroupedTag with an underlying Tag implementation */

          var makeGroupedTag = function makeGroupedTag(tag) {
            return new DefaultGroupedTag(tag);
          };
          var BASE_SIZE = 1 << 9;

          var DefaultGroupedTag = /*#__PURE__*/ (function () {
            function DefaultGroupedTag(tag) {
              this.groupSizes = new Uint32Array(BASE_SIZE);
              this.length = BASE_SIZE;
              this.tag = tag;
            }

            var _proto = DefaultGroupedTag.prototype;

            _proto.indexOfGroup = function indexOfGroup(group) {
              var index = 0;

              for (var i = 0; i < group; i++) {
                index += this.groupSizes[i];
              }

              return index;
            };

            _proto.insertRules = function insertRules(group, rules) {
              if (group >= this.groupSizes.length) {
                var oldBuffer = this.groupSizes;
                var oldSize = oldBuffer.length;
                var newSize = oldSize;

                while (group >= newSize) {
                  newSize <<= 1;

                  if (newSize < 0) {
                    throwStyledComponentsError(16, '' + group);
                  }
                }

                this.groupSizes = new Uint32Array(newSize);
                this.groupSizes.set(oldBuffer);
                this.length = newSize;

                for (var i = oldSize; i < newSize; i++) {
                  this.groupSizes[i] = 0;
                }
              }

              var ruleIndex = this.indexOfGroup(group + 1);

              for (var _i = 0, l = rules.length; _i < l; _i++) {
                if (this.tag.insertRule(ruleIndex, rules[_i])) {
                  this.groupSizes[group]++;
                  ruleIndex++;
                }
              }
            };

            _proto.clearGroup = function clearGroup(group) {
              if (group < this.length) {
                var length = this.groupSizes[group];
                var startIndex = this.indexOfGroup(group);
                var endIndex = startIndex + length;
                this.groupSizes[group] = 0;

                for (var i = startIndex; i < endIndex; i++) {
                  this.tag.deleteRule(startIndex);
                }
              }
            };

            _proto.getGroup = function getGroup(group) {
              var css = '';

              if (group >= this.length || this.groupSizes[group] === 0) {
                return css;
              }

              var length = this.groupSizes[group];
              var startIndex = this.indexOfGroup(group);
              var endIndex = startIndex + length;

              for (var i = startIndex; i < endIndex; i++) {
                css += '' + this.tag.getRule(i) + SPLITTER;
              }

              return css;
            };

            return DefaultGroupedTag;
          })();

          //
          var MAX_SMI = 1 << (31 - 1);
          var groupIDRegister = new Map();
          var reverseRegister = new Map();
          var nextFreeGroup = 1;
          var getGroupForId = function getGroupForId(id) {
            if (groupIDRegister.has(id)) {
              return groupIDRegister.get(id);
            }

            var group = nextFreeGroup++;

            if (true && ((group | 0) < 0 || group > MAX_SMI)) {
              throwStyledComponentsError(16, '' + group);
            }

            groupIDRegister.set(id, group);
            reverseRegister.set(group, id);
            return group;
          };
          var getIdForGroup = function getIdForGroup(group) {
            return reverseRegister.get(group);
          };
          var setGroupForId = function setGroupForId(id, group) {
            if (group >= nextFreeGroup) {
              nextFreeGroup = group + 1;
            }

            groupIDRegister.set(id, group);
            reverseRegister.set(group, id);
          };

          //
          var SELECTOR = 'style[' + SC_ATTR + '][' + SC_ATTR_VERSION + '="' + SC_VERSION + '"]';
          var MARKER_RE = new RegExp(
            '^' + SC_ATTR + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'
          );
          var outputSheet = function outputSheet(sheet) {
            var tag = sheet.getTag();
            var length = tag.length;
            var css = '';

            for (var group = 0; group < length; group++) {
              var id = getIdForGroup(group);
              if (id === undefined) continue;
              var names = sheet.names.get(id);
              var rules = tag.getGroup(group);
              if (names === undefined || rules.length === 0) continue;
              var selector = SC_ATTR + '.g' + group + '[id="' + id + '"]';
              var content = '';

              if (names !== undefined) {
                names.forEach(function (name) {
                  if (name.length > 0) {
                    content += name + ',';
                  }
                });
              } // NOTE: It's easier to collect rules and have the marker
              // after the actual rules to simplify the rehydration

              css += '' + rules + selector + '{content:"' + content + '"}' + SPLITTER;
            }

            return css;
          };

          var rehydrateNamesFromContent = function rehydrateNamesFromContent(sheet, id, content) {
            var names = content.split(',');
            var name;

            for (var i = 0, l = names.length; i < l; i++) {
              // eslint-disable-next-line
              if ((name = names[i])) {
                sheet.registerName(id, name);
              }
            }
          };

          var rehydrateSheetFromTag = function rehydrateSheetFromTag(sheet, style) {
            var parts = style.innerHTML.split(SPLITTER);
            var rules = [];

            for (var i = 0, l = parts.length; i < l; i++) {
              var part = parts[i].trim();
              if (!part) continue;
              var marker = part.match(MARKER_RE);

              if (marker) {
                var group = parseInt(marker[1], 10) | 0;
                var id = marker[2];

                if (group !== 0) {
                  // Rehydrate componentId to group index mapping
                  setGroupForId(id, group); // Rehydrate names and rules
                  // looks like: data-styled.g11[id="idA"]{content:"nameA,"}

                  rehydrateNamesFromContent(sheet, id, marker[3]);
                  sheet.getTag().insertRules(group, rules);
                }

                rules.length = 0;
              } else {
                rules.push(part);
              }
            }
          };

          var rehydrateSheet = function rehydrateSheet(sheet) {
            var nodes = document.querySelectorAll(SELECTOR);

            for (var i = 0, l = nodes.length; i < l; i++) {
              var node = nodes[i];

              if (node && node.getAttribute(SC_ATTR) !== SC_ATTR_ACTIVE) {
                rehydrateSheetFromTag(sheet, node);

                if (node.parentNode) {
                  node.parentNode.removeChild(node);
                }
              }
            }
          };

          var SHOULD_REHYDRATE = IS_BROWSER;
          var defaultOptions = {
            isServer: !IS_BROWSER,
            useCSSOMInjection: !DISABLE_SPEEDY,
          };
          /** Contains the main stylesheet logic for stringification and caching */

          var StyleSheet = /*#__PURE__*/ (function () {
            /** Register a group ID to give it an index */
            StyleSheet.registerId = function registerId(id) {
              return getGroupForId(id);
            };

            function StyleSheet(options, globalStyles, names) {
              if (options === void 0) {
                options = defaultOptions;
              }

              if (globalStyles === void 0) {
                globalStyles = {};
              }

              this.options = _extends({}, defaultOptions, {}, options);
              this.gs = globalStyles;
              this.names = new Map(names); // We rehydrate only once and use the sheet that is created first

              if (!this.options.isServer && IS_BROWSER && SHOULD_REHYDRATE) {
                SHOULD_REHYDRATE = false;
                rehydrateSheet(this);
              }
            }

            var _proto = StyleSheet.prototype;

            _proto.reconstructWithOptions = function reconstructWithOptions(options) {
              return new StyleSheet(_extends({}, this.options, {}, options), this.gs, this.names);
            };

            _proto.allocateGSInstance = function allocateGSInstance(id) {
              return (this.gs[id] = (this.gs[id] || 0) + 1);
            };
            /** Lazily initialises a GroupedTag for when it's actually needed */

            _proto.getTag = function getTag() {
              return this.tag || (this.tag = makeGroupedTag(makeTag(this.options)));
            };
            /** Check whether a name is known for caching */

            _proto.hasNameForId = function hasNameForId(id, name) {
              return this.names.has(id) && this.names.get(id).has(name);
            };
            /** Mark a group's name as known for caching */

            _proto.registerName = function registerName(id, name) {
              getGroupForId(id);

              if (!this.names.has(id)) {
                var groupNames = new Set();
                groupNames.add(name);
                this.names.set(id, groupNames);
              } else {
                this.names.get(id).add(name);
              }
            };
            /** Insert new rules which also marks the name as known */

            _proto.insertRules = function insertRules(id, name, rules) {
              this.registerName(id, name);
              this.getTag().insertRules(getGroupForId(id), rules);
            };
            /** Clears all cached names for a given group ID */

            _proto.clearNames = function clearNames(id) {
              if (this.names.has(id)) {
                this.names.get(id).clear();
              }
            };
            /** Clears all rules for a given group ID */

            _proto.clearRules = function clearRules(id) {
              this.getTag().clearGroup(getGroupForId(id));
              this.clearNames(id);
            };
            /** Clears the entire tag which deletes all rules but not its names */

            _proto.clearTag = function clearTag() {
              // NOTE: This does not clear the names, since it's only used during SSR
              // so that we can continuously output only new rules
              this.tag = undefined;
            };
            /** Outputs the current sheet as a CSS string with markers for SSR */

            _proto.toString = function toString() {
              return outputSheet(this);
            };

            return StyleSheet;
          })();

          //

          /* eslint-disable */
          var SEED = 5381; // When we have separate strings it's useful to run a progressive
          // version of djb2 where we pretend that we're still looping over
          // the same string

          var phash = function phash(h, x) {
            var i = x.length;

            while (i) {
              h = (h * 33) ^ x.charCodeAt(--i);
            }

            return h;
          }; // This is a djb2 hashing function

          var hash = function hash(x) {
            return phash(SEED, x);
          };

          /**
           * MIT License
           *
           * Copyright (c) 2016 Sultan Tarimo
           *
           * Permission is hereby granted, free of charge, to any person obtaining a copy of
           * this software and associated documentation files (the "Software"),
           * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
           * sell copies of the Software and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
           *
           * The above copyright notice and this permission notice shall be included in all
           * copies or substantial portions of the Software.
           *
           * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
           * OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
           * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
           * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
           * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
           * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
           */

          /* eslint-disable */
          function insertRulePlugin(insertRule) {
            var delimiter = '/*|*/';
            var needle = delimiter + '}';

            function toSheet(block) {
              if (block) {
                try {
                  insertRule(block + '}');
                } catch (e) {}
              }
            }

            return function ruleSheet(
              context,
              content,
              selectors,
              parents,
              line,
              column,
              length,
              ns,
              depth,
              at
            ) {
              switch (context) {
                // property
                case 1:
                  // @import
                  if (depth === 0 && content.charCodeAt(0) === 64)
                    return insertRule(content + ';'), '';
                  break;
                // selector

                case 2:
                  if (ns === 0) return content + delimiter;
                  break;
                // at-rule

                case 3:
                  switch (ns) {
                    // @font-face, @page
                    case 102:
                    case 112:
                      return insertRule(selectors[0] + content), '';

                    default:
                      return content + (at === 0 ? delimiter : '');
                  }

                case -2:
                  content.split(needle).forEach(toSheet);
              }
            };
          }

          var COMMENT_REGEX = /^\s*\/\/.*$/gm;
          function createStylisInstance(_temp) {
            var _ref = _temp === void 0 ? EMPTY_OBJECT : _temp,
              _ref$options = _ref.options,
              options = _ref$options === void 0 ? EMPTY_OBJECT : _ref$options,
              _ref$plugins = _ref.plugins,
              plugins = _ref$plugins === void 0 ? EMPTY_ARRAY : _ref$plugins;

            var stylis = new _emotion_stylis__WEBPACK_IMPORTED_MODULE_3__['default'](options); // Wrap `insertRulePlugin to build a list of rules,
            // and then make our own plugin to return the rules. This
            // makes it easier to hook into the existing SSR architecture

            var parsingRules = []; // eslint-disable-next-line consistent-return

            var returnRulesPlugin = function returnRulesPlugin(context) {
              if (context === -2) {
                var parsedRules = parsingRules;
                parsingRules = [];
                return parsedRules;
              }
            };

            var parseRulesPlugin = insertRulePlugin(function (rule) {
              parsingRules.push(rule);
            });

            var _componentId;

            var _selector;

            var _selectorRegexp;

            var selfReferenceReplacer = function selfReferenceReplacer(match, offset, string) {
              if (
                // the first self-ref is always untouched
                offset > 0 && // there should be at least two self-refs to do a replacement (.b > .b)
                string.slice(0, offset).indexOf(_selector) !== -1 && // no consecutive self refs (.b.b); that is a precedence boost and treated differently
                string.slice(offset - _selector.length, offset) !== _selector
              ) {
                return '.' + _componentId;
              }

              return match;
            };
            /**
             * When writing a style like
             *
             * & + & {
             *   color: red;
             * }
             *
             * The second ampersand should be a reference to the static component class. stylis
             * has no knowledge of static class so we have to intelligently replace the base selector.
             *
             * https://github.com/thysultan/stylis.js#plugins <- more info about the context phase values
             * "2" means this plugin is taking effect at the very end after all other processing is complete
             */

            var selfReferenceReplacementPlugin = function selfReferenceReplacementPlugin(
              context,
              _,
              selectors
            ) {
              if (context === 2 && selectors.length && selectors[0].lastIndexOf(_selector) > 0) {
                // eslint-disable-next-line no-param-reassign
                selectors[0] = selectors[0].replace(_selectorRegexp, selfReferenceReplacer);
              }
            };

            stylis.use(
              [].concat(plugins, [
                selfReferenceReplacementPlugin,
                parseRulesPlugin,
                returnRulesPlugin,
              ])
            );

            function stringifyRules(css, selector, prefix, componentId) {
              if (componentId === void 0) {
                componentId = '&';
              }

              var flatCSS = css.replace(COMMENT_REGEX, '');
              var cssStr =
                selector && prefix ? prefix + ' ' + selector + ' { ' + flatCSS + ' }' : flatCSS; // stylis has no concept of state to be passed to plugins
              // but since JS is single=threaded, we can rely on that to ensure
              // these properties stay in sync with the current stylis run

              _componentId = componentId;
              _selector = selector;
              _selectorRegexp = new RegExp('\\' + _selector + '\\b', 'g');
              return stylis(prefix || !selector ? '' : selector, cssStr);
            }

            stringifyRules.hash = plugins.length
              ? plugins
                  .reduce(function (acc, plugin) {
                    if (!plugin.name) {
                      throwStyledComponentsError(15);
                    }

                    return phash(acc, plugin.name);
                  }, SEED)
                  .toString()
              : '';
            return stringifyRules;
          }

          //
          var StyleSheetContext = react__WEBPACK_IMPORTED_MODULE_1___default.a.createContext();
          var StyleSheetConsumer = StyleSheetContext.Consumer;
          var StylisContext = react__WEBPACK_IMPORTED_MODULE_1___default.a.createContext();
          var StylisConsumer = StylisContext.Consumer;
          var masterSheet = new StyleSheet();
          var masterStylis = createStylisInstance();
          function useStyleSheet() {
            return (
              Object(react__WEBPACK_IMPORTED_MODULE_1__['useContext'])(StyleSheetContext) ||
              masterSheet
            );
          }
          function useStylis() {
            return (
              Object(react__WEBPACK_IMPORTED_MODULE_1__['useContext'])(StylisContext) ||
              masterStylis
            );
          }
          function StyleSheetManager(props) {
            var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__['useState'])(
                props.stylisPlugins
              ),
              plugins = _useState[0],
              setPlugins = _useState[1];

            var contextStyleSheet = useStyleSheet();
            var styleSheet = Object(react__WEBPACK_IMPORTED_MODULE_1__['useMemo'])(
              function () {
                var sheet = contextStyleSheet;

                if (props.sheet) {
                  // eslint-disable-next-line prefer-destructuring
                  sheet = props.sheet;
                } else if (props.target) {
                  sheet = sheet.reconstructWithOptions({
                    target: props.target,
                  });
                }

                if (props.disableCSSOMInjection) {
                  sheet = sheet.reconstructWithOptions({
                    useCSSOMInjection: false,
                  });
                }

                return sheet;
              },
              [props.disableCSSOMInjection, props.sheet, props.target]
            );
            var stylis = Object(react__WEBPACK_IMPORTED_MODULE_1__['useMemo'])(
              function () {
                return createStylisInstance({
                  options: {
                    prefix: !props.disableVendorPrefixes,
                  },
                  plugins: plugins,
                });
              },
              [props.disableVendorPrefixes, plugins]
            );
            Object(react__WEBPACK_IMPORTED_MODULE_1__['useEffect'])(
              function () {
                if (
                  !shallowequal__WEBPACK_IMPORTED_MODULE_2___default()(plugins, props.stylisPlugins)
                )
                  setPlugins(props.stylisPlugins);
              },
              [props.stylisPlugins]
            );
            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(
              StyleSheetContext.Provider,
              {
                value: styleSheet,
              },
              /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(
                StylisContext.Provider,
                {
                  value: stylis,
                },
                true
                  ? react__WEBPACK_IMPORTED_MODULE_1___default.a.Children.only(props.children)
                  : undefined
              )
            );
          }

          //

          var Keyframes = /*#__PURE__*/ (function () {
            function Keyframes(name, stringifyArgs) {
              var _this = this;

              this.inject = function (styleSheet) {
                if (!styleSheet.hasNameForId(_this.id, _this.name)) {
                  styleSheet.insertRules(
                    _this.id,
                    _this.name,
                    masterStylis.apply(void 0, _this.stringifyArgs)
                  );
                }
              };

              this.toString = function () {
                return throwStyledComponentsError(12, String(_this.name));
              };

              this.name = name;
              this.id = 'sc-keyframes-' + name;
              this.stringifyArgs = stringifyArgs;
            }

            var _proto = Keyframes.prototype;

            _proto.getName = function getName() {
              return this.name;
            };

            return Keyframes;
          })();

          //

          /**
           * inlined version of
           * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/hyphenateStyleName.js
           */
          var uppercasePattern = /([A-Z])/g;
          var msPattern = /^ms-/;
          /**
           * Hyphenates a camelcased CSS property name, for example:
           *
           *   > hyphenateStyleName('backgroundColor')
           *   < "background-color"
           *   > hyphenateStyleName('MozTransition')
           *   < "-moz-transition"
           *   > hyphenateStyleName('msTransition')
           *   < "-ms-transition"
           *
           * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
           * is converted to `-ms-`.
           *
           * @param {string} string
           * @return {string}
           */

          function hyphenateStyleName(string) {
            return string.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
          }

          //

          function addUnitIfNeeded(name, value) {
            // https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133
            // $FlowFixMe
            if (value == null || typeof value === 'boolean' || value === '') {
              return '';
            }

            if (
              typeof value === 'number' &&
              value !== 0 &&
              !(name in _emotion_unitless__WEBPACK_IMPORTED_MODULE_4__['default'])
            ) {
              return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
            }

            return String(value).trim();
          }

          //
          /**
           * It's falsish not falsy because 0 is allowed.
           */

          var isFalsish = function isFalsish(chunk) {
            return chunk === undefined || chunk === null || chunk === false || chunk === '';
          };

          var objToCssArray = function objToCssArray(obj, prevKey) {
            var rules = [];
            var keys = Object.keys(obj);
            keys.forEach(function (key) {
              if (!isFalsish(obj[key])) {
                if (isPlainObject(obj[key])) {
                  rules.push.apply(rules, objToCssArray(obj[key], key));
                  return rules;
                } else if (isFunction(obj[key])) {
                  rules.push(hyphenateStyleName(key) + ':', obj[key], ';');
                  return rules;
                }

                rules.push(hyphenateStyleName(key) + ': ' + addUnitIfNeeded(key, obj[key]) + ';');
              }

              return rules;
            });
            return prevKey ? [prevKey + ' {'].concat(rules, ['}']) : rules;
          };
          function flatten(chunk, executionContext, styleSheet) {
            if (Array.isArray(chunk)) {
              var ruleSet = [];

              for (var i = 0, len = chunk.length, result; i < len; i += 1) {
                result = flatten(chunk[i], executionContext, styleSheet);
                if (result === '') continue;
                else if (Array.isArray(result)) ruleSet.push.apply(ruleSet, result);
                else ruleSet.push(result);
              }

              return ruleSet;
            }

            if (isFalsish(chunk)) {
              return '';
            }
            /* Handle other components */

            if (isStyledComponent(chunk)) {
              return '.' + chunk.styledComponentId;
            }
            /* Either execute or defer the function */

            if (isFunction(chunk)) {
              if (isStatelessFunction(chunk) && executionContext) {
                var _result = chunk(executionContext);

                if (true && Object(react_is__WEBPACK_IMPORTED_MODULE_0__['isElement'])(_result)) {
                  // eslint-disable-next-line no-console
                  console.warn(
                    getComponentName(chunk) +
                      ' is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.'
                  );
                }

                return flatten(_result, executionContext, styleSheet);
              } else return chunk;
            }

            if (chunk instanceof Keyframes) {
              if (styleSheet) {
                chunk.inject(styleSheet);
                return chunk.getName();
              } else return chunk;
            }
            /* Handle objects */

            return isPlainObject(chunk) ? objToCssArray(chunk) : chunk.toString();
          }

          //
          function css(styles) {
            for (
              var _len = arguments.length,
                interpolations = new Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              interpolations[_key - 1] = arguments[_key];
            }

            if (isFunction(styles) || isPlainObject(styles)) {
              // $FlowFixMe
              return flatten(interleave(EMPTY_ARRAY, [styles].concat(interpolations)));
            }

            if (
              interpolations.length === 0 &&
              styles.length === 1 &&
              typeof styles[0] === 'string'
            ) {
              // $FlowFixMe
              return styles;
            } // $FlowFixMe

            return flatten(interleave(styles, interpolations));
          }

          function constructWithOptions(componentConstructor, tag, options) {
            if (options === void 0) {
              options = EMPTY_OBJECT;
            }

            if (!Object(react_is__WEBPACK_IMPORTED_MODULE_0__['isValidElementType'])(tag)) {
              return throwStyledComponentsError(1, String(tag));
            }
            /* This is callable directly as a template function */
            // $FlowFixMe: Not typed to avoid destructuring arguments

            var templateFunction = function templateFunction() {
              return componentConstructor(tag, options, css.apply(void 0, arguments));
            };
            /* If config methods are called, wrap up a new template function and merge options */

            templateFunction.withConfig = function (config) {
              return constructWithOptions(
                componentConstructor,
                tag,
                _extends({}, options, {}, config)
              );
            };
            /* Modify/inject new props at runtime */

            templateFunction.attrs = function (attrs) {
              return constructWithOptions(
                componentConstructor,
                tag,
                _extends({}, options, {
                  attrs: Array.prototype.concat(options.attrs, attrs).filter(Boolean),
                })
              );
            };

            return templateFunction;
          }

          /* eslint-disable */

          /**
  mixin-deep; https://github.com/jonschlinkert/mixin-deep
  Inlined such that it will be consistently transpiled to an IE-compatible syntax.

  The MIT License (MIT)

  Copyright (c) 2014-present, Jon Schlinkert.

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
          var isObject = function isObject(val) {
            return (
              typeof val === 'function' ||
              (typeof val === 'object' && val !== null && !Array.isArray(val))
            );
          };

          var isValidKey = function isValidKey(key) {
            return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';
          };

          function mixin(target, val, key) {
            var obj = target[key];

            if (isObject(val) && isObject(obj)) {
              mixinDeep(obj, val);
            } else {
              target[key] = val;
            }
          }

          function mixinDeep(target) {
            for (
              var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1;
              _key < _len;
              _key++
            ) {
              rest[_key - 1] = arguments[_key];
            }

            for (var _i = 0, _rest = rest; _i < _rest.length; _i++) {
              var obj = _rest[_i];

              if (isObject(obj)) {
                for (var key in obj) {
                  if (isValidKey(key)) {
                    mixin(target, obj[key], key);
                  }
                }
              }
            }

            return target;
          }

          //

          /* eslint-disable no-bitwise */
          var AD_REPLACER_R = /(a)(d)/gi;
          /* This is the "capacity" of our alphabet i.e. 2x26 for all letters plus their capitalised
           * counterparts */

          var charsLength = 52;
          /* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */

          var getAlphabeticChar = function getAlphabeticChar(code) {
            return String.fromCharCode(code + (code > 25 ? 39 : 97));
          };
          /* input a number, usually a hash and convert it to base-52 */

          function generateAlphabeticName(code) {
            var name = '';
            var x;
            /* get a char and divide by alphabet-length */

            for (x = Math.abs(code); x > charsLength; x = (x / charsLength) | 0) {
              name = getAlphabeticChar(x % charsLength) + name;
            }

            return (getAlphabeticChar(x % charsLength) + name).replace(AD_REPLACER_R, '$1-$2');
          }

          //
          function isStaticRules(rules) {
            for (var i = 0; i < rules.length; i += 1) {
              var rule = rules[i];

              if (isFunction(rule) && !isStyledComponent(rule)) {
                // functions are allowed to be static if they're just being
                // used to get the classname of a nested styled component
                return false;
              }
            }

            return true;
          }

          //
          /*
 ComponentStyle is all the CSS-specific stuff, not
 the React-specific stuff.
 */

          var ComponentStyle = /*#__PURE__*/ (function () {
            function ComponentStyle(rules, componentId) {
              this.rules = rules;
              this.staticRulesId = '';
              this.isStatic = false && false;
              this.componentId = componentId;
              this.baseHash = hash(componentId); // NOTE: This registers the componentId, which ensures a consistent order
              // for this component's styles compared to others

              StyleSheet.registerId(componentId);
            }
            /*
             * Flattens a rule set into valid CSS
             * Hashes it, wraps the whole chunk in a .hash1234 {}
             * Returns the hash to be injected on render()
             * */

            var _proto = ComponentStyle.prototype;

            _proto.generateAndInjectStyles = function generateAndInjectStyles(
              executionContext,
              styleSheet,
              stylis
            ) {
              var componentId = this.componentId; // force dynamic classnames if user-supplied stylis plugins are in use

              if (this.isStatic && !stylis.hash) {
                if (
                  this.staticRulesId &&
                  styleSheet.hasNameForId(componentId, this.staticRulesId)
                ) {
                  return this.staticRulesId;
                }

                var cssStatic = flatten(this.rules, executionContext, styleSheet).join('');
                var name = generateAlphabeticName(phash(this.baseHash, cssStatic.length) >>> 0);

                if (!styleSheet.hasNameForId(componentId, name)) {
                  var cssStaticFormatted = stylis(cssStatic, '.' + name, undefined, componentId);
                  styleSheet.insertRules(componentId, name, cssStaticFormatted);
                }

                this.staticRulesId = name;
                return name;
              } else {
                var length = this.rules.length;
                var dynamicHash = phash(this.baseHash, stylis.hash);
                var css = '';

                for (var i = 0; i < length; i++) {
                  var partRule = this.rules[i];

                  if (typeof partRule === 'string') {
                    css += partRule;
                    if (true) dynamicHash = phash(dynamicHash, partRule + i);
                  } else {
                    var partChunk = flatten(partRule, executionContext, styleSheet);
                    var partString = Array.isArray(partChunk) ? partChunk.join('') : partChunk;
                    dynamicHash = phash(dynamicHash, partString + i);
                    css += partString;
                  }
                }

                var _name = generateAlphabeticName(dynamicHash >>> 0);

                if (!styleSheet.hasNameForId(componentId, _name)) {
                  var cssFormatted = stylis(css, '.' + _name, undefined, componentId);
                  styleSheet.insertRules(componentId, _name, cssFormatted);
                }

                return _name;
              }
            };

            return ComponentStyle;
          })();

          //
          var LIMIT = 200;
          var createWarnTooManyClasses = function (displayName, componentId) {
            var generatedClasses = {};
            var warningSeen = false;
            return function (className) {
              if (!warningSeen) {
                generatedClasses[className] = true;

                if (Object.keys(generatedClasses).length >= LIMIT) {
                  // Unable to find latestRule in test environment.

                  /* eslint-disable no-console, prefer-template */
                  var parsedIdString = componentId ? ' with the id of "' + componentId + '"' : '';
                  console.warn(
                    'Over ' +
                      LIMIT +
                      ' classes were generated for component ' +
                      displayName +
                      parsedIdString +
                      '.\n' +
                      'Consider using the attrs method, together with a style object for frequently changed styles.\n' +
                      'Example:\n' +
                      '  const Component = styled.div.attrs(props => ({\n' +
                      '    style: {\n' +
                      '      background: props.background,\n' +
                      '    },\n' +
                      '  }))`width: 100%;`\n\n' +
                      '  <Component />'
                  );
                  warningSeen = true;
                  generatedClasses = {};
                }
              }
            };
          };

          //
          var invalidHookCallRe = /invalid hook call/i;
          var seen = new Set();
          var checkDynamicCreation = function checkDynamicCreation(displayName, componentId) {
            if (true) {
              var parsedIdString = componentId ? ' with the id of "' + componentId + '"' : '';
              var message =
                'The component ' +
                displayName +
                parsedIdString +
                ' has been created dynamically.\n' +
                "You may see this warning because you've called styled inside another component.\n" +
                'To resolve this only create new StyledComponents outside of any render method and function component.';

              try {
                // We purposefully call `useRef` outside of a component and expect it to throw
                // If it doesn't, then we're inside another component.
                // eslint-disable-next-line react-hooks/rules-of-hooks
                Object(react__WEBPACK_IMPORTED_MODULE_1__['useRef'])();

                if (!seen.has(message)) {
                  // eslint-disable-next-line no-console
                  console.warn(message);
                  seen.add(message);
                }
              } catch (error) {
                // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to
                // be called outside of a React component.
                if (invalidHookCallRe.test(error.message)) {
                  // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently
                  seen['delete'](message);
                }
              }
            }
          };

          //
          var determineTheme = function (props, providedTheme, defaultProps) {
            if (defaultProps === void 0) {
              defaultProps = EMPTY_OBJECT;
            }

            return (
              (props.theme !== defaultProps.theme && props.theme) ||
              providedTheme ||
              defaultProps.theme
            );
          };

          //
          // Source: https://www.w3.org/TR/cssom-1/#serialize-an-identifier
          // Control characters and non-letter first symbols are not supported
          var escapeRegex = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g;
          var dashesAtEnds = /(^-|-$)/g;
          /**
           * TODO: Explore using CSS.escape when it becomes more available
           * in evergreen browsers.
           */

          function escape(str) {
            return str // Replace all possible CSS selectors
              .replace(escapeRegex, '-') // Remove extraneous hyphens at the start and end
              .replace(dashesAtEnds, '');
          }

          //
          function isTag(target) {
            return (
              typeof target === 'string' &&
              (true ? target.charAt(0) === target.charAt(0).toLowerCase() : undefined)
            );
          }

          //
          function generateDisplayName(target) {
            // $FlowFixMe
            return isTag(target) ? 'styled.' + target : 'Styled(' + getComponentName(target) + ')';
          }

          //
          var generateComponentId = function (str) {
            return generateAlphabeticName(hash(str) >>> 0);
          };

          /**
           * Convenience function for joining strings to form className chains
           */
          function joinStrings(a, b) {
            return a && b ? a + ' ' + b : a || b;
          }

          var ThemeContext = react__WEBPACK_IMPORTED_MODULE_1___default.a.createContext();
          var ThemeConsumer = ThemeContext.Consumer;

          function mergeTheme(theme, outerTheme) {
            if (!theme) {
              return throwStyledComponentsError(14);
            }

            if (isFunction(theme)) {
              var mergedTheme = theme(outerTheme);

              if (
                true &&
                (mergedTheme === null ||
                  Array.isArray(mergedTheme) ||
                  typeof mergedTheme !== 'object')
              ) {
                return throwStyledComponentsError(7);
              }

              return mergedTheme;
            }

            if (Array.isArray(theme) || typeof theme !== 'object') {
              return throwStyledComponentsError(8);
            }

            return outerTheme ? _extends({}, outerTheme, {}, theme) : theme;
          }
          /**
           * Provide a theme to an entire react component tree via context
           */

          function ThemeProvider(props) {
            var outerTheme = Object(react__WEBPACK_IMPORTED_MODULE_1__['useContext'])(ThemeContext);
            var themeContext = Object(react__WEBPACK_IMPORTED_MODULE_1__['useMemo'])(
              function () {
                return mergeTheme(props.theme, outerTheme);
              },
              [props.theme, outerTheme]
            );

            if (!props.children) {
              return null;
            }

            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(
              ThemeContext.Provider,
              {
                value: themeContext,
              },
              props.children
            );
          }

          /* global $Call */

          var identifiers = {};
          /* We depend on components having unique IDs */

          function generateId(displayName, parentComponentId) {
            var name = typeof displayName !== 'string' ? 'sc' : escape(displayName); // Ensure that no displayName can lead to duplicate componentIds

            identifiers[name] = (identifiers[name] || 0) + 1;
            var componentId = name + '-' + generateComponentId(name + identifiers[name]);
            return parentComponentId ? parentComponentId + '-' + componentId : componentId;
          }

          function useResolvedAttrs(theme, props, attrs) {
            if (theme === void 0) {
              theme = EMPTY_OBJECT;
            }

            // NOTE: can't memoize this
            // returns [context, resolvedAttrs]
            // where resolvedAttrs is only the things injected by the attrs themselves
            var context = _extends({}, props, {
              theme: theme,
            });

            var resolvedAttrs = {};
            attrs.forEach(function (attrDef) {
              var resolvedAttrDef = attrDef;
              var key;

              if (isFunction(resolvedAttrDef)) {
                resolvedAttrDef = resolvedAttrDef(context);
              }
              /* eslint-disable guard-for-in */

              for (key in resolvedAttrDef) {
                context[key] = resolvedAttrs[key] =
                  key === 'className'
                    ? joinStrings(resolvedAttrs[key], resolvedAttrDef[key])
                    : resolvedAttrDef[key];
              }
              /* eslint-enable guard-for-in */
            });
            return [context, resolvedAttrs];
          }

          function useInjectedStyle(componentStyle, hasAttrs, resolvedAttrs, warnTooManyClasses) {
            var styleSheet = useStyleSheet();
            var stylis = useStylis(); // statically styled-components don't need to build an execution context object,
            // and shouldn't be increasing the number of class names

            var isStatic = componentStyle.isStatic && !hasAttrs;
            var className = isStatic
              ? componentStyle.generateAndInjectStyles(EMPTY_OBJECT, styleSheet, stylis)
              : componentStyle.generateAndInjectStyles(resolvedAttrs, styleSheet, stylis);
            Object(react__WEBPACK_IMPORTED_MODULE_1__['useDebugValue'])(className);

            if (true && !isStatic && warnTooManyClasses) {
              warnTooManyClasses(className);
            }

            return className;
          }

          function useStyledComponentImpl(forwardedComponent, props, forwardedRef) {
            var componentAttrs = forwardedComponent.attrs,
              componentStyle = forwardedComponent.componentStyle,
              defaultProps = forwardedComponent.defaultProps,
              foldedComponentIds = forwardedComponent.foldedComponentIds,
              shouldForwardProp = forwardedComponent.shouldForwardProp,
              styledComponentId = forwardedComponent.styledComponentId,
              target = forwardedComponent.target;
            Object(react__WEBPACK_IMPORTED_MODULE_1__['useDebugValue'])(styledComponentId); // NOTE: the non-hooks version only subscribes to this when !componentStyle.isStatic,
            // but that'd be against the rules-of-hooks. We could be naughty and do it anyway as it
            // should be an immutable value, but behave for now.

            var theme = determineTheme(
              props,
              Object(react__WEBPACK_IMPORTED_MODULE_1__['useContext'])(ThemeContext),
              defaultProps
            );

            var _useResolvedAttrs = useResolvedAttrs(theme || EMPTY_OBJECT, props, componentAttrs),
              context = _useResolvedAttrs[0],
              attrs = _useResolvedAttrs[1];

            var generatedClassName = useInjectedStyle(
              componentStyle,
              componentAttrs.length > 0,
              context,
              true ? forwardedComponent.warnTooManyClasses : undefined
            );
            var refToForward = forwardedRef;
            var elementToBeCreated = attrs.$as || props.$as || attrs.as || props.as || target;
            var isTargetTag = isTag(elementToBeCreated);
            var computedProps = attrs !== props ? _extends({}, props, {}, attrs) : props;
            var propFilterFn =
              shouldForwardProp ||
              (isTargetTag && _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__['default']);
            var propsForElement = {}; // eslint-disable-next-line guard-for-in

            for (var key in computedProps) {
              if (key[0] === '$' || key === 'as') continue;
              else if (key === 'forwardedAs') {
                propsForElement.as = computedProps[key];
              } else if (
                !propFilterFn ||
                propFilterFn(key, _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__['default'])
              ) {
                // Don't pass through non HTML tags through to HTML elements
                propsForElement[key] = computedProps[key];
              }
            }

            if (props.style && attrs.style !== props.style) {
              propsForElement.style = _extends({}, props.style, {}, attrs.style);
            }

            propsForElement.className = Array.prototype
              .concat(
                foldedComponentIds,
                styledComponentId,
                generatedClassName !== styledComponentId ? generatedClassName : null,
                props.className,
                attrs.className
              )
              .filter(Boolean)
              .join(' ');
            propsForElement.ref = refToForward;
            return Object(react__WEBPACK_IMPORTED_MODULE_1__['createElement'])(
              elementToBeCreated,
              propsForElement
            );
          }

          function createStyledComponent(target, options, rules) {
            var isTargetStyledComp = isStyledComponent(target);
            var isCompositeComponent = !isTag(target);
            var _options$displayName = options.displayName,
              displayName =
                _options$displayName === void 0
                  ? generateDisplayName(target)
                  : _options$displayName,
              _options$componentId = options.componentId,
              componentId =
                _options$componentId === void 0
                  ? generateId(options.displayName, options.parentComponentId)
                  : _options$componentId,
              _options$attrs = options.attrs,
              attrs = _options$attrs === void 0 ? EMPTY_ARRAY : _options$attrs;
            var styledComponentId =
              options.displayName && options.componentId
                ? escape(options.displayName) + '-' + options.componentId
                : options.componentId || componentId; // fold the underlying StyledComponent attrs up (implicit extend)

            var finalAttrs = // $FlowFixMe
              isTargetStyledComp && target.attrs
                ? Array.prototype.concat(target.attrs, attrs).filter(Boolean)
                : attrs; // eslint-disable-next-line prefer-destructuring

            var shouldForwardProp = options.shouldForwardProp; // $FlowFixMe

            if (isTargetStyledComp && target.shouldForwardProp) {
              if (shouldForwardProp) {
                // compose nested shouldForwardProp calls
                shouldForwardProp = function shouldForwardProp(prop, filterFn) {
                  return (
                    // $FlowFixMe
                    target.shouldForwardProp(prop, filterFn) &&
                    options.shouldForwardProp(prop, filterFn)
                  );
                };
              } else {
                // eslint-disable-next-line prefer-destructuring
                shouldForwardProp = target.shouldForwardProp;
              }
            }

            var componentStyle = new ComponentStyle(
              isTargetStyledComp // fold the underlying StyledComponent rules up (implicit extend)
                ? // $FlowFixMe
                  target.componentStyle.rules.concat(rules)
                : rules,
              styledComponentId
            );
            /**
             * forwardRef creates a new interim component, which we'll take advantage of
             * instead of extending ParentComponent to create _another_ interim class
             */

            var WrappedStyledComponent; // eslint-disable-next-line react-hooks/rules-of-hooks

            var forwardRef = function forwardRef(props, ref) {
              return useStyledComponentImpl(WrappedStyledComponent, props, ref);
            };

            forwardRef.displayName = displayName; // $FlowFixMe this is a forced cast to merge it StyledComponentWrapperProperties

            WrappedStyledComponent = react__WEBPACK_IMPORTED_MODULE_1___default.a.forwardRef(
              forwardRef
            );
            WrappedStyledComponent.attrs = finalAttrs;
            WrappedStyledComponent.componentStyle = componentStyle;
            WrappedStyledComponent.displayName = displayName;
            WrappedStyledComponent.shouldForwardProp = shouldForwardProp; // this static is used to preserve the cascade of static classes for component selector
            // purposes; this is especially important with usage of the css prop

            WrappedStyledComponent.foldedComponentIds = isTargetStyledComp // $FlowFixMe
              ? Array.prototype.concat(target.foldedComponentIds, target.styledComponentId)
              : EMPTY_ARRAY;
            WrappedStyledComponent.styledComponentId = styledComponentId; // fold the underlying StyledComponent target up since we folded the styles

            WrappedStyledComponent.target = isTargetStyledComp // $FlowFixMe
              ? target.target
              : target; // $FlowFixMe

            WrappedStyledComponent.withComponent = function withComponent(tag) {
              var previousComponentId = options.componentId,
                optionsToCopy = _objectWithoutPropertiesLoose(options, ['componentId']);

              var newComponentId =
                previousComponentId &&
                previousComponentId + '-' + (isTag(tag) ? tag : escape(getComponentName(tag)));

              var newOptions = _extends({}, optionsToCopy, {
                attrs: finalAttrs,
                componentId: newComponentId,
              });

              return createStyledComponent(tag, newOptions, rules);
            }; // $FlowFixMe

            Object.defineProperty(WrappedStyledComponent, 'defaultProps', {
              get: function get() {
                return this._foldedDefaultProps;
              },
              set: function set(obj) {
                // $FlowFixMe
                this._foldedDefaultProps = isTargetStyledComp
                  ? mixinDeep({}, target.defaultProps, obj)
                  : obj;
              },
            });

            if (true) {
              checkDynamicCreation(displayName, styledComponentId);
              WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(
                displayName,
                styledComponentId
              );
            } // $FlowFixMe

            WrappedStyledComponent.toString = function () {
              return '.' + WrappedStyledComponent.styledComponentId;
            };

            if (isCompositeComponent) {
              hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default()(
                WrappedStyledComponent,
                target,
                {
                  // all SC-specific things should not be hoisted
                  attrs: true,
                  componentStyle: true,
                  displayName: true,
                  foldedComponentIds: true,
                  shouldForwardProp: true,
                  self: true,
                  styledComponentId: true,
                  target: true,
                  withComponent: true,
                }
              );
            }

            return WrappedStyledComponent;
          }

          //
          // Thanks to ReactDOMFactories for this handy list!
          var domElements = [
            'a',
            'abbr',
            'address',
            'area',
            'article',
            'aside',
            'audio',
            'b',
            'base',
            'bdi',
            'bdo',
            'big',
            'blockquote',
            'body',
            'br',
            'button',
            'canvas',
            'caption',
            'cite',
            'code',
            'col',
            'colgroup',
            'data',
            'datalist',
            'dd',
            'del',
            'details',
            'dfn',
            'dialog',
            'div',
            'dl',
            'dt',
            'em',
            'embed',
            'fieldset',
            'figcaption',
            'figure',
            'footer',
            'form',
            'h1',
            'h2',
            'h3',
            'h4',
            'h5',
            'h6',
            'head',
            'header',
            'hgroup',
            'hr',
            'html',
            'i',
            'iframe',
            'img',
            'input',
            'ins',
            'kbd',
            'keygen',
            'label',
            'legend',
            'li',
            'link',
            'main',
            'map',
            'mark',
            'marquee',
            'menu',
            'menuitem',
            'meta',
            'meter',
            'nav',
            'noscript',
            'object',
            'ol',
            'optgroup',
            'option',
            'output',
            'p',
            'param',
            'picture',
            'pre',
            'progress',
            'q',
            'rp',
            'rt',
            'ruby',
            's',
            'samp',
            'script',
            'section',
            'select',
            'small',
            'source',
            'span',
            'strong',
            'style',
            'sub',
            'summary',
            'sup',
            'table',
            'tbody',
            'td',
            'textarea',
            'tfoot',
            'th',
            'thead',
            'time',
            'title',
            'tr',
            'track',
            'u',
            'ul',
            'var',
            'video',
            'wbr', // SVG
            'circle',
            'clipPath',
            'defs',
            'ellipse',
            'foreignObject',
            'g',
            'image',
            'line',
            'linearGradient',
            'marker',
            'mask',
            'path',
            'pattern',
            'polygon',
            'polyline',
            'radialGradient',
            'rect',
            'stop',
            'svg',
            'text',
            'tspan',
          ];

          //

          var styled = function styled(tag) {
            return constructWithOptions(createStyledComponent, tag);
          }; // Shorthands for all valid HTML Elements

          domElements.forEach(function (domElement) {
            styled[domElement] = styled(domElement);
          });

          //

          var GlobalStyle = /*#__PURE__*/ (function () {
            function GlobalStyle(rules, componentId) {
              this.rules = rules;
              this.componentId = componentId;
              this.isStatic = isStaticRules(rules);
            }

            var _proto = GlobalStyle.prototype;

            _proto.createStyles = function createStyles(
              instance,
              executionContext,
              styleSheet,
              stylis
            ) {
              var flatCSS = flatten(this.rules, executionContext, styleSheet);
              var css = stylis(flatCSS.join(''), '');
              var id = this.componentId + instance; // NOTE: We use the id as a name as well, since these rules never change

              styleSheet.insertRules(id, id, css);
            };

            _proto.removeStyles = function removeStyles(instance, styleSheet) {
              styleSheet.clearRules(this.componentId + instance);
            };

            _proto.renderStyles = function renderStyles(
              instance,
              executionContext,
              styleSheet,
              stylis
            ) {
              StyleSheet.registerId(this.componentId + instance); // NOTE: Remove old styles, then inject the new ones

              this.removeStyles(instance, styleSheet);
              this.createStyles(instance, executionContext, styleSheet, stylis);
            };

            return GlobalStyle;
          })();

          function createGlobalStyle(strings) {
            for (
              var _len = arguments.length,
                interpolations = new Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              interpolations[_key - 1] = arguments[_key];
            }

            var rules = css.apply(void 0, [strings].concat(interpolations));
            var styledComponentId = 'sc-global-' + generateComponentId(JSON.stringify(rules));
            var globalStyle = new GlobalStyle(rules, styledComponentId);

            if (true) {
              checkDynamicCreation(styledComponentId);
            }

            function GlobalStyleComponent(props) {
              var styleSheet = useStyleSheet();
              var stylis = useStylis();
              var theme = Object(react__WEBPACK_IMPORTED_MODULE_1__['useContext'])(ThemeContext);
              var instanceRef = Object(react__WEBPACK_IMPORTED_MODULE_1__['useRef'])(null);

              if (instanceRef.current === null) {
                instanceRef.current = styleSheet.allocateGSInstance(styledComponentId);
              }

              var instance = instanceRef.current;

              if (
                true &&
                react__WEBPACK_IMPORTED_MODULE_1___default.a.Children.count(props.children)
              ) {
                // eslint-disable-next-line no-console
                console.warn(
                  'The global style component ' +
                    styledComponentId +
                    ' was given child JSX. createGlobalStyle does not render children.'
                );
              }

              if (
                true &&
                rules.some(function (rule) {
                  return typeof rule === 'string' && rule.indexOf('@import') !== -1;
                })
              ) {
                console.warn(
                  'Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app.'
                );
              }

              if (globalStyle.isStatic) {
                globalStyle.renderStyles(instance, STATIC_EXECUTION_CONTEXT, styleSheet, stylis);
              } else {
                var context = _extends({}, props, {
                  theme: determineTheme(props, theme, GlobalStyleComponent.defaultProps),
                });

                globalStyle.renderStyles(instance, context, styleSheet, stylis);
              }

              Object(react__WEBPACK_IMPORTED_MODULE_1__['useEffect'])(function () {
                return function () {
                  return globalStyle.removeStyles(instance, styleSheet);
                };
              }, EMPTY_ARRAY);
              return null;
            } // $FlowFixMe

            return react__WEBPACK_IMPORTED_MODULE_1___default.a.memo(GlobalStyleComponent);
          }

          //
          function keyframes(strings) {
            /* Warning if you've used keyframes on React Native */
            if (true && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
              // eslint-disable-next-line no-console
              console.warn(
                '`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.'
              );
            }

            for (
              var _len = arguments.length,
                interpolations = new Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              interpolations[_key - 1] = arguments[_key];
            }

            var rules = css.apply(void 0, [strings].concat(interpolations)).join('');
            var name = generateComponentId(rules);
            return new Keyframes(name, [rules, name, '@keyframes']);
          }

          var ServerStyleSheet = /*#__PURE__*/ (function () {
            function ServerStyleSheet() {
              var _this = this;

              this._emitSheetCSS = function () {
                var css = _this.instance.toString();

                var nonce = getNonce();
                var attrs = [
                  nonce && 'nonce="' + nonce + '"',
                  SC_ATTR + '="true"',
                  SC_ATTR_VERSION + '="' + SC_VERSION + '"',
                ];
                var htmlAttr = attrs.filter(Boolean).join(' ');
                return '<style ' + htmlAttr + '>' + css + '</style>';
              };

              this.getStyleTags = function () {
                if (_this.sealed) {
                  return throwStyledComponentsError(2);
                }

                return _this._emitSheetCSS();
              };

              this.getStyleElement = function () {
                var _props;

                if (_this.sealed) {
                  return throwStyledComponentsError(2);
                }

                var props =
                  ((_props = {}),
                  (_props[SC_ATTR] = ''),
                  (_props[SC_ATTR_VERSION] = SC_VERSION),
                  (_props.dangerouslySetInnerHTML = {
                    __html: _this.instance.toString(),
                  }),
                  _props);
                var nonce = getNonce();

                if (nonce) {
                  props.nonce = nonce;
                } // v4 returned an array for this fn, so we'll do the same for v5 for backward compat

                return [
                  /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(
                    'style',
                    _extends({}, props, {
                      key: 'sc-0-0',
                    })
                  ),
                ];
              };

              this.seal = function () {
                _this.sealed = true;
              };

              this.instance = new StyleSheet({
                isServer: true,
              });
              this.sealed = false;
            }

            var _proto = ServerStyleSheet.prototype;

            _proto.collectStyles = function collectStyles(children) {
              if (this.sealed) {
                return throwStyledComponentsError(2);
              }

              return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(
                StyleSheetManager,
                {
                  sheet: this.instance,
                },
                children
              );
            };

            // eslint-disable-next-line consistent-return
            _proto.interleaveWithNodeStream = function interleaveWithNodeStream(input) {
              {
                return throwStyledComponentsError(3);
              }
            };

            return ServerStyleSheet;
          })();

          // export default <Config: { theme?: any }, Instance>(
          //  Component: AbstractComponent<Config, Instance>
          // ): AbstractComponent<$Diff<Config, { theme?: any }> & { theme?: any }, Instance>
          //
          // but the old build system tooling doesn't support the syntax

          var withTheme = function (Component) {
            // $FlowFixMe This should be React.forwardRef<Config, Instance>
            var WithTheme = react__WEBPACK_IMPORTED_MODULE_1___default.a.forwardRef(function (
              props,
              ref
            ) {
              var theme = Object(react__WEBPACK_IMPORTED_MODULE_1__['useContext'])(ThemeContext); // $FlowFixMe defaultProps isn't declared so it can be inferrable

              var defaultProps = Component.defaultProps;
              var themeProp = determineTheme(props, theme, defaultProps);

              if (true && themeProp === undefined) {
                // eslint-disable-next-line no-console
                console.warn(
                  '[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps in component class "' +
                    getComponentName(Component) +
                    '"'
                );
              }

              return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(
                Component,
                _extends({}, props, {
                  theme: themeProp,
                  ref: ref,
                })
              );
            });
            hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default()(WithTheme, Component);
            WithTheme.displayName = 'WithTheme(' + getComponentName(Component) + ')';
            return WithTheme;
          };

          //

          var useTheme = function useTheme() {
            return Object(react__WEBPACK_IMPORTED_MODULE_1__['useContext'])(ThemeContext);
          };

          //
          var __PRIVATE__ = {
            StyleSheet: StyleSheet,
            masterSheet: masterSheet,
          };

          //
          /* Define bundle version for export */

          var version = '5.1.1';
          /* Warning if you've imported this file on React Native */

          if (true && typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
            // eslint-disable-next-line no-console
            console.warn(
              "It looks like you've imported 'styled-components' on React Native.\n" +
                "Perhaps you're looking to import 'styled-components/native'?\n" +
                'Read more about this at https://www.styled-components.com/docs/basics#react-native'
            );
          }
          /* Warning if there are several instances of styled-components */

          if (true && typeof window !== 'undefined') {
            window['__styled-components-init__'] = window['__styled-components-init__'] || 0;

            if (window['__styled-components-init__'] === 1) {
              // eslint-disable-next-line no-console
              console.warn(
                "It looks like there are several instances of 'styled-components' initialized in this application. " +
                  'This may cause dynamic styles not rendering properly, errors happening during rehydration process, ' +
                  'missing theme prop, and makes your application bigger without a good reason.\n\n' +
                  'See https://s-c.sh/2BAXzed for more info.'
              );
            }

            window['__styled-components-init__'] += 1;
          }

          /* harmony default export */ __webpack_exports__['default'] = styled;

          //# sourceMappingURL=styled-components.browser.esm.js.map

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(/*! ./../../process/browser.js */ './node_modules/process/browser.js')
        ));

        /***/
      },

    /***/ './node_modules/styled-jsx/dist/lib/stylesheet.js':
      /*!********************************************************!*\
  !*** ./node_modules/styled-jsx/dist/lib/stylesheet.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function (process) {
          exports.__esModule = true;
          exports['default'] = void 0;

          function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps) _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            return Constructor;
          }

          /*
Based on Glamor's sheet
https://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js
*/
          var isProd =
            typeof process !== 'undefined' && process.env && 'development' === 'production';

          var isString = function isString(o) {
            return Object.prototype.toString.call(o) === '[object String]';
          };

          var StyleSheet =
            /*#__PURE__*/
            (function () {
              function StyleSheet(_temp) {
                var _ref = _temp === void 0 ? {} : _temp,
                  _ref$name = _ref.name,
                  name = _ref$name === void 0 ? 'stylesheet' : _ref$name,
                  _ref$optimizeForSpeed = _ref.optimizeForSpeed,
                  optimizeForSpeed =
                    _ref$optimizeForSpeed === void 0 ? isProd : _ref$optimizeForSpeed,
                  _ref$isBrowser = _ref.isBrowser,
                  isBrowser =
                    _ref$isBrowser === void 0 ? typeof window !== 'undefined' : _ref$isBrowser;

                invariant(isString(name), '`name` must be a string');
                this._name = name;
                this._deletedRulePlaceholder = '#' + name + '-deleted-rule____{}';
                invariant(
                  typeof optimizeForSpeed === 'boolean',
                  '`optimizeForSpeed` must be a boolean'
                );
                this._optimizeForSpeed = optimizeForSpeed;
                this._isBrowser = isBrowser;
                this._serverSheet = undefined;
                this._tags = [];
                this._injected = false;
                this._rulesCount = 0;
                var node = this._isBrowser && document.querySelector('meta[property="csp-nonce"]');
                this._nonce = node ? node.getAttribute('content') : null;
              }

              var _proto = StyleSheet.prototype;

              _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {
                invariant(typeof bool === 'boolean', '`setOptimizeForSpeed` accepts a boolean');
                invariant(
                  this._rulesCount === 0,
                  'optimizeForSpeed cannot be when rules have already been inserted'
                );
                this.flush();
                this._optimizeForSpeed = bool;
                this.inject();
              };

              _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {
                return this._optimizeForSpeed;
              };

              _proto.inject = function inject() {
                var _this = this;

                invariant(!this._injected, 'sheet already injected');
                this._injected = true;

                if (this._isBrowser && this._optimizeForSpeed) {
                  this._tags[0] = this.makeStyleTag(this._name);
                  this._optimizeForSpeed = 'insertRule' in this.getSheet();

                  if (!this._optimizeForSpeed) {
                    if (!isProd) {
                      console.warn(
                        'StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.'
                      );
                    }

                    this.flush();
                    this._injected = true;
                  }

                  return;
                }

                this._serverSheet = {
                  cssRules: [],
                  insertRule: function insertRule(rule, index) {
                    if (typeof index === 'number') {
                      _this._serverSheet.cssRules[index] = {
                        cssText: rule,
                      };
                    } else {
                      _this._serverSheet.cssRules.push({
                        cssText: rule,
                      });
                    }

                    return index;
                  },
                  deleteRule: function deleteRule(index) {
                    _this._serverSheet.cssRules[index] = null;
                  },
                };
              };

              _proto.getSheetForTag = function getSheetForTag(tag) {
                if (tag.sheet) {
                  return tag.sheet;
                } // this weirdness brought to you by firefox

                for (var i = 0; i < document.styleSheets.length; i++) {
                  if (document.styleSheets[i].ownerNode === tag) {
                    return document.styleSheets[i];
                  }
                }
              };

              _proto.getSheet = function getSheet() {
                return this.getSheetForTag(this._tags[this._tags.length - 1]);
              };

              _proto.insertRule = function insertRule(rule, index) {
                invariant(isString(rule), '`insertRule` accepts only strings');

                if (!this._isBrowser) {
                  if (typeof index !== 'number') {
                    index = this._serverSheet.cssRules.length;
                  }

                  this._serverSheet.insertRule(rule, index);

                  return this._rulesCount++;
                }

                if (this._optimizeForSpeed) {
                  var sheet = this.getSheet();

                  if (typeof index !== 'number') {
                    index = sheet.cssRules.length;
                  } // this weirdness for perf, and chrome's weird bug
                  // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule

                  try {
                    sheet.insertRule(rule, index);
                  } catch (error) {
                    if (!isProd) {
                      console.warn(
                        'StyleSheet: illegal rule: \n\n' +
                          rule +
                          '\n\nSee https://stackoverflow.com/q/20007992 for more info'
                      );
                    }

                    return -1;
                  }
                } else {
                  var insertionPoint = this._tags[index];

                  this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));
                }

                return this._rulesCount++;
              };

              _proto.replaceRule = function replaceRule(index, rule) {
                if (this._optimizeForSpeed || !this._isBrowser) {
                  var sheet = this._isBrowser ? this.getSheet() : this._serverSheet;

                  if (!rule.trim()) {
                    rule = this._deletedRulePlaceholder;
                  }

                  if (!sheet.cssRules[index]) {
                    // @TBD Should we throw an error?
                    return index;
                  }

                  sheet.deleteRule(index);

                  try {
                    sheet.insertRule(rule, index);
                  } catch (error) {
                    if (!isProd) {
                      console.warn(
                        'StyleSheet: illegal rule: \n\n' +
                          rule +
                          '\n\nSee https://stackoverflow.com/q/20007992 for more info'
                      );
                    } // In order to preserve the indices we insert a deleteRulePlaceholder

                    sheet.insertRule(this._deletedRulePlaceholder, index);
                  }
                } else {
                  var tag = this._tags[index];
                  invariant(tag, 'old rule at index `' + index + '` not found');
                  tag.textContent = rule;
                }

                return index;
              };

              _proto.deleteRule = function deleteRule(index) {
                if (!this._isBrowser) {
                  this._serverSheet.deleteRule(index);

                  return;
                }

                if (this._optimizeForSpeed) {
                  this.replaceRule(index, '');
                } else {
                  var tag = this._tags[index];
                  invariant(tag, 'rule at index `' + index + '` not found');
                  tag.parentNode.removeChild(tag);
                  this._tags[index] = null;
                }
              };

              _proto.flush = function flush() {
                this._injected = false;
                this._rulesCount = 0;

                if (this._isBrowser) {
                  this._tags.forEach(function (tag) {
                    return tag && tag.parentNode.removeChild(tag);
                  });

                  this._tags = [];
                } else {
                  // simpler on server
                  this._serverSheet.cssRules = [];
                }
              };

              _proto.cssRules = function cssRules() {
                var _this2 = this;

                if (!this._isBrowser) {
                  return this._serverSheet.cssRules;
                }

                return this._tags.reduce(function (rules, tag) {
                  if (tag) {
                    rules = rules.concat(
                      Array.prototype.map.call(_this2.getSheetForTag(tag).cssRules, function (
                        rule
                      ) {
                        return rule.cssText === _this2._deletedRulePlaceholder ? null : rule;
                      })
                    );
                  } else {
                    rules.push(null);
                  }

                  return rules;
                }, []);
              };

              _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {
                if (cssString) {
                  invariant(
                    isString(cssString),
                    'makeStyleTag acceps only strings as second parameter'
                  );
                }

                var tag = document.createElement('style');
                if (this._nonce) tag.setAttribute('nonce', this._nonce);
                tag.type = 'text/css';
                tag.setAttribute('data-' + name, '');

                if (cssString) {
                  tag.appendChild(document.createTextNode(cssString));
                }

                var head = document.head || document.getElementsByTagName('head')[0];

                if (relativeToTag) {
                  head.insertBefore(tag, relativeToTag);
                } else {
                  head.appendChild(tag);
                }

                return tag;
              };

              _createClass(StyleSheet, [
                {
                  key: 'length',
                  get: function get() {
                    return this._rulesCount;
                  },
                },
              ]);

              return StyleSheet;
            })();

          exports['default'] = StyleSheet;

          function invariant(condition, message) {
            if (!condition) {
              throw new Error('StyleSheet: ' + message + '.');
            }
          }
          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../process/browser.js */ './node_modules/process/browser.js'
          )
        ));

        /***/
      },

    /***/ './node_modules/styled-jsx/dist/style.js':
      /*!***********************************************!*\
  !*** ./node_modules/styled-jsx/dist/style.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.flush = flush;
        exports['default'] = void 0;

        var _react = __webpack_require__(/*! react */ './node_modules/react/index.js');

        var _stylesheetRegistry = _interopRequireDefault(
          __webpack_require__(
            /*! ./stylesheet-registry */ './node_modules/styled-jsx/dist/stylesheet-registry.js'
          )
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          subClass.__proto__ = superClass;
        }

        var styleSheetRegistry = new _stylesheetRegistry['default']();

        var JSXStyle =
          /*#__PURE__*/
          (function (_Component) {
            _inheritsLoose(JSXStyle, _Component);

            function JSXStyle(props) {
              var _this;

              _this = _Component.call(this, props) || this;
              _this.prevProps = {};
              return _this;
            }

            JSXStyle.dynamic = function dynamic(info) {
              return info
                .map(function (tagInfo) {
                  var baseId = tagInfo[0];
                  var props = tagInfo[1];
                  return styleSheetRegistry.computeId(baseId, props);
                })
                .join(' ');
            }; // probably faster than PureComponent (shallowEqual)

            var _proto = JSXStyle.prototype;

            _proto.shouldComponentUpdate = function shouldComponentUpdate(otherProps) {
              return (
                this.props.id !== otherProps.id || // We do this check because `dynamic` is an array of strings or undefined.
                // These are the computed values for dynamic styles.
                String(this.props.dynamic) !== String(otherProps.dynamic)
              );
            };

            _proto.componentWillUnmount = function componentWillUnmount() {
              styleSheetRegistry.remove(this.props);
            };

            _proto.render = function render() {
              // This is a workaround to make the side effect async safe in the "render" phase.
              // See https://github.com/zeit/styled-jsx/pull/484
              if (this.shouldComponentUpdate(this.prevProps)) {
                // Updates
                if (this.prevProps.id) {
                  styleSheetRegistry.remove(this.prevProps);
                }

                styleSheetRegistry.add(this.props);
                this.prevProps = this.props;
              }

              return null;
            };

            return JSXStyle;
          })(_react.Component);

        exports['default'] = JSXStyle;

        function flush() {
          var cssRules = styleSheetRegistry.cssRules();
          styleSheetRegistry.flush();
          return cssRules;
        }

        /***/
      },

    /***/ './node_modules/styled-jsx/dist/stylesheet-registry.js':
      /*!*************************************************************!*\
  !*** ./node_modules/styled-jsx/dist/stylesheet-registry.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports['default'] = void 0;

        var _stringHash = _interopRequireDefault(
          __webpack_require__(/*! string-hash */ './node_modules/string-hash/index.js')
        );

        var _stylesheet = _interopRequireDefault(
          __webpack_require__(
            /*! ./lib/stylesheet */ './node_modules/styled-jsx/dist/lib/stylesheet.js'
          )
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var sanitize = function sanitize(rule) {
          return rule.replace(/\/style/gi, '\\/style');
        };

        var StyleSheetRegistry =
          /*#__PURE__*/
          (function () {
            function StyleSheetRegistry(_temp) {
              var _ref = _temp === void 0 ? {} : _temp,
                _ref$styleSheet = _ref.styleSheet,
                styleSheet = _ref$styleSheet === void 0 ? null : _ref$styleSheet,
                _ref$optimizeForSpeed = _ref.optimizeForSpeed,
                optimizeForSpeed = _ref$optimizeForSpeed === void 0 ? false : _ref$optimizeForSpeed,
                _ref$isBrowser = _ref.isBrowser,
                isBrowser =
                  _ref$isBrowser === void 0 ? typeof window !== 'undefined' : _ref$isBrowser;

              this._sheet =
                styleSheet ||
                new _stylesheet['default']({
                  name: 'styled-jsx',
                  optimizeForSpeed: optimizeForSpeed,
                });

              this._sheet.inject();

              if (styleSheet && typeof optimizeForSpeed === 'boolean') {
                this._sheet.setOptimizeForSpeed(optimizeForSpeed);

                this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();
              }

              this._isBrowser = isBrowser;
              this._fromServer = undefined;
              this._indices = {};
              this._instancesCounts = {};
              this.computeId = this.createComputeId();
              this.computeSelector = this.createComputeSelector();
            }

            var _proto = StyleSheetRegistry.prototype;

            _proto.add = function add(props) {
              var _this = this;

              if (undefined === this._optimizeForSpeed) {
                this._optimizeForSpeed = Array.isArray(props.children);

                this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);

                this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();
              }

              if (this._isBrowser && !this._fromServer) {
                this._fromServer = this.selectFromServer();
                this._instancesCounts = Object.keys(this._fromServer).reduce(function (
                  acc,
                  tagName
                ) {
                  acc[tagName] = 0;
                  return acc;
                },
                {});
              }

              var _this$getIdAndRules = this.getIdAndRules(props),
                styleId = _this$getIdAndRules.styleId,
                rules = _this$getIdAndRules.rules; // Deduping: just increase the instances count.

              if (styleId in this._instancesCounts) {
                this._instancesCounts[styleId] += 1;
                return;
              }

              var indices = rules
                .map(function (rule) {
                  return _this._sheet.insertRule(rule);
                }) // Filter out invalid rules
                .filter(function (index) {
                  return index !== -1;
                });
              this._indices[styleId] = indices;
              this._instancesCounts[styleId] = 1;
            };

            _proto.remove = function remove(props) {
              var _this2 = this;

              var _this$getIdAndRules2 = this.getIdAndRules(props),
                styleId = _this$getIdAndRules2.styleId;

              invariant(styleId in this._instancesCounts, 'styleId: `' + styleId + '` not found');
              this._instancesCounts[styleId] -= 1;

              if (this._instancesCounts[styleId] < 1) {
                var tagFromServer = this._fromServer && this._fromServer[styleId];

                if (tagFromServer) {
                  tagFromServer.parentNode.removeChild(tagFromServer);
                  delete this._fromServer[styleId];
                } else {
                  this._indices[styleId].forEach(function (index) {
                    return _this2._sheet.deleteRule(index);
                  });

                  delete this._indices[styleId];
                }

                delete this._instancesCounts[styleId];
              }
            };

            _proto.update = function update(props, nextProps) {
              this.add(nextProps);
              this.remove(props);
            };

            _proto.flush = function flush() {
              this._sheet.flush();

              this._sheet.inject();

              this._fromServer = undefined;
              this._indices = {};
              this._instancesCounts = {};
              this.computeId = this.createComputeId();
              this.computeSelector = this.createComputeSelector();
            };

            _proto.cssRules = function cssRules() {
              var _this3 = this;

              var fromServer = this._fromServer
                ? Object.keys(this._fromServer).map(function (styleId) {
                    return [styleId, _this3._fromServer[styleId]];
                  })
                : [];

              var cssRules = this._sheet.cssRules();

              return fromServer.concat(
                Object.keys(this._indices)
                  .map(function (styleId) {
                    return [
                      styleId,
                      _this3._indices[styleId]
                        .map(function (index) {
                          return cssRules[index].cssText;
                        })
                        .join(_this3._optimizeForSpeed ? '' : '\n'),
                    ];
                  }) // filter out empty rules
                  .filter(function (rule) {
                    return Boolean(rule[1]);
                  })
              );
            };
            /**
             * createComputeId
             *
             * Creates a function to compute and memoize a jsx id from a basedId and optionally props.
             */

            _proto.createComputeId = function createComputeId() {
              var cache = {};
              return function (baseId, props) {
                if (!props) {
                  return 'jsx-' + baseId;
                }

                var propsToString = String(props);
                var key = baseId + propsToString; // return `jsx-${hashString(`${baseId}-${propsToString}`)}`

                if (!cache[key]) {
                  cache[key] = 'jsx-' + (0, _stringHash['default'])(baseId + '-' + propsToString);
                }

                return cache[key];
              };
            };
            /**
             * createComputeSelector
             *
             * Creates a function to compute and memoize dynamic selectors.
             */

            _proto.createComputeSelector = function createComputeSelector(
              selectoPlaceholderRegexp
            ) {
              if (selectoPlaceholderRegexp === void 0) {
                selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;
              }

              var cache = {};
              return function (id, css) {
                // Sanitize SSR-ed CSS.
                // Client side code doesn't need to be sanitized since we use
                // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).
                if (!this._isBrowser) {
                  css = sanitize(css);
                }

                var idcss = id + css;

                if (!cache[idcss]) {
                  cache[idcss] = css.replace(selectoPlaceholderRegexp, id);
                }

                return cache[idcss];
              };
            };

            _proto.getIdAndRules = function getIdAndRules(props) {
              var _this4 = this;

              var css = props.children,
                dynamic = props.dynamic,
                id = props.id;

              if (dynamic) {
                var styleId = this.computeId(id, dynamic);
                return {
                  styleId: styleId,
                  rules: Array.isArray(css)
                    ? css.map(function (rule) {
                        return _this4.computeSelector(styleId, rule);
                      })
                    : [this.computeSelector(styleId, css)],
                };
              }

              return {
                styleId: this.computeId(id),
                rules: Array.isArray(css) ? css : [css],
              };
            };
            /**
             * selectFromServer
             *
             * Collects style tags from the document with id __jsx-XXX
             */

            _proto.selectFromServer = function selectFromServer() {
              var elements = Array.prototype.slice.call(
                document.querySelectorAll('[id^="__jsx-"]')
              );
              return elements.reduce(function (acc, element) {
                var id = element.id.slice(2);
                acc[id] = element;
                return acc;
              }, {});
            };

            return StyleSheetRegistry;
          })();

        exports['default'] = StyleSheetRegistry;

        function invariant(condition, message) {
          if (!condition) {
            throw new Error('StyleSheetRegistry: ' + message + '.');
          }
        }

        /***/
      },

    /***/ './node_modules/styled-jsx/style.js':
      /*!******************************************!*\
  !*** ./node_modules/styled-jsx/style.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./dist/style */ './node_modules/styled-jsx/dist/style.js'
        );

        /***/
      },

    /***/ './node_modules/styled-reset/lib/index.js':
      /*!************************************************!*\
  !*** ./node_modules/styled-reset/lib/index.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        'use strict';

        var __makeTemplateObject =
          (this && this.__makeTemplateObject) ||
          function (cooked, raw) {
            if (Object.defineProperty) {
              Object.defineProperty(cooked, 'raw', { value: raw });
            } else {
              cooked.raw = raw;
            }
            return cooked;
          };
        Object.defineProperty(exports, '__esModule', { value: true });
        exports.Reset = exports.reset = void 0;
        var styled_components_1 = __webpack_require__(
          /*! styled-components */ './node_modules/styled-components/dist/styled-components.browser.esm.js'
        );
        // prettier-ignore
        exports.reset = styled_components_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n/* http://meyerweb.com/eric/tools/css/reset/\n   v4.0 | 20180602\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n"], ["\n/* http://meyerweb.com/eric/tools/css/reset/\n   v4.0 | 20180602\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n"])));
        exports.Reset = styled_components_1.createGlobalStyle(
          templateObject_2 || (templateObject_2 = __makeTemplateObject(['', ''], ['', ''])),
          exports.reset
        );
        exports.default = exports.reset;
        var templateObject_1, templateObject_2;

        /***/
      },

    /***/ './node_modules/webpack/buildin/harmony-module.js':
      /*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        module.exports = function (originalModule) {
          if (!originalModule.webpackPolyfill) {
            var module = Object.create(originalModule);
            // module.parent = undefined by default
            if (!module.children) module.children = [];
            Object.defineProperty(module, 'loaded', {
              enumerable: true,
              get: function () {
                return module.l;
              },
            });
            Object.defineProperty(module, 'id', {
              enumerable: true,
              get: function () {
                return module.i;
              },
            });
            Object.defineProperty(module, 'exports', {
              enumerable: true,
            });
            module.webpackPolyfill = 1;
          }
          return module;
        };

        /***/
      },

    /***/ './node_modules/webpack/buildin/module.js':
      /*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        module.exports = function (module) {
          if (!module.webpackPolyfill) {
            module.deprecate = function () {};
            module.paths = [];
            // module.parent = undefined by default
            if (!module.children) module.children = [];
            Object.defineProperty(module, 'loaded', {
              enumerable: true,
              get: function () {
                return module.l;
              },
            });
            Object.defineProperty(module, 'id', {
              enumerable: true,
              get: function () {
                return module.i;
              },
            });
            module.webpackPolyfill = 1;
          }
          return module;
        };

        /***/
      },

    /***/ './pages/_app.tsx':
      /*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
      /*! exports provided: default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! @babel/runtime/helpers/esm/extends */ './node_modules/@babel/runtime/helpers/esm/extends.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! react */ './node_modules/react/index.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_1__
          );
          /* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! styled-components */ './node_modules/styled-components/dist/styled-components.browser.esm.js'
          );
          /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! next/router */ './node_modules/next/dist/client/router.js'
          );
          /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
            next_router__WEBPACK_IMPORTED_MODULE_3__
          );
          /* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! next/head */ './node_modules/next/dist/next-server/lib/head.js'
          );
          /* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
            next_head__WEBPACK_IMPORTED_MODULE_4__
          );
          /* harmony import */ var react_ga__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
            /*! react-ga */ './node_modules/react-ga/dist/esm/index.js'
          );
          /* harmony import */ var next_page_transitions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
            /*! next-page-transitions */ './node_modules/next-page-transitions/lib/index.js'
          );
          /* harmony import */ var next_page_transitions__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
            next_page_transitions__WEBPACK_IMPORTED_MODULE_6__
          );
          /* harmony import */ var styles__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
            /*! styles */ './styles/index.ts'
          );
          /* harmony import */ var components__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
            /*! components */ './components/index.ts'
          );

          var _this = undefined,
            _jsxFileName = 'F:\\Projects\\nidratech.com\\pages\\_app.tsx',
            _s = $RefreshSig$();

          var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;

          var year = new Date().getFullYear();
          next_router__WEBPACK_IMPORTED_MODULE_3___default.a.events.on(
            'routeChangeComplete',
            function () {
              react_ga__WEBPACK_IMPORTED_MODULE_5__['default'].pageview(
                ''.concat(window.location.pathname).concat(window.location.search)
              );
            }
          );

          var App = function App(_ref) {
            _s();

            var Component = _ref.Component,
              pageProps = _ref.pageProps,
              router = _ref.router;

            var _useState = Object(react__WEBPACK_IMPORTED_MODULE_1__['useState'])(false),
              isNavbarOpen = _useState[0],
              setIsNavbarOpen = _useState[1];

            Object(react__WEBPACK_IMPORTED_MODULE_1__['useEffect'])(function () {
              react_ga__WEBPACK_IMPORTED_MODULE_5__['default'].initialize('UA-69470561-3');
            }, []);
            return __jsx(
              styled_components__WEBPACK_IMPORTED_MODULE_2__['ThemeProvider'],
              {
                theme: styles__WEBPACK_IMPORTED_MODULE_7__['theme'],
                __self: _this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 27,
                  columnNumber: 5,
                },
              },
              __jsx(
                next_head__WEBPACK_IMPORTED_MODULE_4___default.a,
                {
                  __self: _this,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 28,
                    columnNumber: 7,
                  },
                },
                __jsx(
                  'title',
                  {
                    __self: _this,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 29,
                      columnNumber: 9,
                    },
                  },
                  'Nidratech - Web Consulting in Touch with Tomorrow'
                )
              ),
              __jsx(styles__WEBPACK_IMPORTED_MODULE_7__['GlobalStyles'], {
                __self: _this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 32,
                  columnNumber: 7,
                },
              }),
              __jsx(
                MainLayoutContainer,
                {
                  __self: _this,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 34,
                    columnNumber: 7,
                  },
                },
                __jsx(components__WEBPACK_IMPORTED_MODULE_8__['Navbar'], {
                  isNavbarOpen: isNavbarOpen,
                  setIsNavbarOpen: setIsNavbarOpen,
                  __self: _this,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 35,
                    columnNumber: 9,
                  },
                }),
                __jsx(
                  StyledMain,
                  {
                    __self: _this,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 37,
                      columnNumber: 9,
                    },
                  },
                  __jsx(
                    next_page_transitions__WEBPACK_IMPORTED_MODULE_6__['PageTransition'],
                    {
                      timeout: 200,
                      classNames: 'page-transition',
                      skipInitialTransition: true,
                      __self: _this,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 38,
                        columnNumber: 11,
                      },
                    },
                    __jsx(
                      Component,
                      Object(
                        _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__['default']
                      )({}, pageProps, {
                        key: router.route,
                        __self: _this,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 39,
                          columnNumber: 13,
                        },
                      })
                    )
                  )
                ),
                __jsx(
                  StyledFooter,
                  {
                    __self: _this,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 43,
                      columnNumber: 9,
                    },
                  },
                  'Forged from \uD83D\uDD25 \xA9',
                  year,
                  ' Nidratech Ltd.'
                )
              )
            );
          };

          _s(App, 'qE0K9qoaDK11e4TxVHADv/OTtNk=');

          _c = App;
          var MainLayoutContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__[
            'default'
          ].div.withConfig({
            displayName: 'MainLayoutContainer',
            componentId: 'sc-1qpzaiq-0',
          })(['display:grid;grid-template-rows:1fr min-content;min-height:100vh;']);
          _c2 = MainLayoutContainer;
          var StyledMain = styled_components__WEBPACK_IMPORTED_MODULE_2__[
            'default'
          ].main.withConfig({
            displayName: 'StyledMain',
            componentId: 'sc-1qpzaiq-1',
          })(['padding-top:', ';'], function (_ref2) {
            var theme = _ref2.theme;
            return theme.spacing.navBarHeight;
          });
          _c3 = StyledMain;
          var StyledFooter = styled_components__WEBPACK_IMPORTED_MODULE_2__[
            'default'
          ].footer.withConfig({
            displayName: 'StyledFooter',
            componentId: 'sc-1qpzaiq-2',
          })(
            ['display:flex;justify-content:center;padding:', ';color:', ';'],
            function (_ref3) {
              var theme = _ref3.theme;
              return theme.spacing.medium;
            },
            function (_ref4) {
              var theme = _ref4.theme;
              return theme.colors.grey;
            }
          );
          _c4 = StyledFooter;
          /* harmony default export */ __webpack_exports__['default'] = App;

          var _c, _c2, _c3, _c4;

          $RefreshReg$(_c, 'App');
          $RefreshReg$(_c2, 'MainLayoutContainer');
          $RefreshReg$(_c3, 'StyledMain');
          $RefreshReg$(_c4, 'StyledFooter');

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './styles/GlobalStyles.tsx':
      /*!*********************************!*\
  !*** ./styles/GlobalStyles.tsx ***!
  \*********************************/
      /*! exports provided: GlobalStyle, default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'GlobalStyle',
            function () {
              return GlobalStyle;
            }
          );
          /* harmony import */ var _babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! @babel/runtime/helpers/esm/taggedTemplateLiteral */ './node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js'
          );
          /* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! styled-jsx/style */ './node_modules/styled-jsx/style.js'
          );
          /* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
            styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
            /*! react */ './node_modules/react/index.js'
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_2__
          );
          /* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
            /*! styled-components */ './node_modules/styled-components/dist/styled-components.browser.esm.js'
          );
          /* harmony import */ var styled_reset__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
            /*! styled-reset */ './node_modules/styled-reset/lib/index.js'
          );
          /* harmony import */ var styled_reset__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
            styled_reset__WEBPACK_IMPORTED_MODULE_4__
          );
          /* harmony import */ var styles_theme__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
            /*! styles/theme */ './styles/theme.ts'
          );

          var _this = undefined,
            _jsxFileName = 'F:\\Projects\\nidratech.com\\styles\\GlobalStyles.tsx';

          var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;

          function _templateObject() {
            var data = Object(
              _babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__[
                'default'
              ]
            )([
              "  \n  #__next {\n    font-family: 'Roboto', sans-serif;\n  }\n  *, html * {\n    transition: color 0.1s ease, background-color 0.1s ease, border-color 0.1s ease;\n  }\n  html, body {\n    font-family: 'Roboto', sans-serif;\n  }\n  a {\n      color: ",
              ';\n      text-decoration: none;\n  }\n  .page-transition-enter {\n    opacity: 0;\n  }\n  .page-transition-enter-active {\n    opacity: 1;\n    transition: opacity 200ms;\n  }\n  .page-transition-exit {\n    opacity: 1;\n  }\n  .page-transition-exit-active {\n    opacity: 0;\n    transition: opacity 200ms;\n  }\n',
            ]);

            _templateObject = function _templateObject() {
              return data;
            };

            return data;
          }

          var GlobalStyle = Object(
            styled_components__WEBPACK_IMPORTED_MODULE_3__['createGlobalStyle']
          )(_templateObject(), styles_theme__WEBPACK_IMPORTED_MODULE_5__['COLOR_BRAND']);
          _c = GlobalStyle;

          var GlobalStyles = function GlobalStyles() {
            return __jsx(
              react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment,
              null,
              __jsx(styled_reset__WEBPACK_IMPORTED_MODULE_4__['Reset'], {
                __self: _this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 39,
                  columnNumber: 5,
                },
              }),
              __jsx(GlobalStyle, {
                __self: _this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 40,
                  columnNumber: 5,
                },
              }),
              __jsx(
                styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default.a,
                {
                  id: '2741810665',
                  __self: _this,
                },
                "@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;700&family=Roboto:wght@300;400;700&display=swap');\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkY6XFxQcm9qZWN0c1xcbmlkcmF0ZWNoLmNvbVxcc3R5bGVzXFxHbG9iYWxTdHlsZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlDdUIsQUFFdUkiLCJmaWxlIjoiRjpcXFByb2plY3RzXFxuaWRyYXRlY2guY29tXFxzdHlsZXNcXEdsb2JhbFN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlR2xvYmFsU3R5bGUgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBSZXNldCB9IGZyb20gJ3N0eWxlZC1yZXNldCc7XG5cbmltcG9ydCB7IENPTE9SX0JSQU5EIH0gZnJvbSAnc3R5bGVzL3RoZW1lJztcblxuZXhwb3J0IGNvbnN0IEdsb2JhbFN0eWxlID0gY3JlYXRlR2xvYmFsU3R5bGVgICBcbiAgI19fbmV4dCB7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICB9XG4gICosIGh0bWwgKiB7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgMC4xcyBlYXNlLCBiYWNrZ3JvdW5kLWNvbG9yIDAuMXMgZWFzZSwgYm9yZGVyLWNvbG9yIDAuMXMgZWFzZTtcbiAgfVxuICBodG1sLCBib2R5IHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4gIH1cbiAgYSB7XG4gICAgICBjb2xvcjogJHtDT0xPUl9CUkFORH07XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgLnBhZ2UtdHJhbnNpdGlvbi1lbnRlciB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICAucGFnZS10cmFuc2l0aW9uLWVudGVyLWFjdGl2ZSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDIwMG1zO1xuICB9XG4gIC5wYWdlLXRyYW5zaXRpb24tZXhpdCB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAucGFnZS10cmFuc2l0aW9uLWV4aXQtYWN0aXZlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMjAwbXM7XG4gIH1cbmA7XG5cbmNvbnN0IEdsb2JhbFN0eWxlcyA9ICgpID0+IChcbiAgPD5cbiAgICA8UmVzZXQgLz5cbiAgICA8R2xvYmFsU3R5bGUgLz5cblxuICAgIDxzdHlsZSBnbG9iYWwganN4PntgXG4gICAgICBAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG8rTW9ubzp3Z2h0QDMwMDs0MDA7NzAwJmZhbWlseT1Sb2JvdG86d2dodEAzMDA7NDAwOzcwMCZkaXNwbGF5PXN3YXAnKTtcbiAgICBgfTwvc3R5bGU+XG4gIDwvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgR2xvYmFsU3R5bGVzO1xuIl19 */\n/*@ sourceURL=F:\\\\Projects\\\\nidratech.com\\\\styles\\\\GlobalStyles.tsx */"
              )
            );
          };

          _c2 = GlobalStyles;
          /* harmony default export */ __webpack_exports__['default'] = GlobalStyles;

          var _c, _c2;

          $RefreshReg$(_c, 'GlobalStyle');
          $RefreshReg$(_c2, 'GlobalStyles');

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './styles/index.ts':
      /*!*************************!*\
  !*** ./styles/index.ts ***!
  \*************************/
      /*! exports provided: theme, GlobalStyles */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony import */ var _theme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            /*! ./theme */ './styles/theme.ts'
          );
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'theme',
            function () {
              return _theme__WEBPACK_IMPORTED_MODULE_0__['default'];
            }
          );

          /* harmony import */ var _GlobalStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
            /*! ./GlobalStyles */ './styles/GlobalStyles.tsx'
          );
          /* harmony reexport (safe) */ __webpack_require__.d(
            __webpack_exports__,
            'GlobalStyles',
            function () {
              return _GlobalStyles__WEBPACK_IMPORTED_MODULE_1__['default'];
            }
          );

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ './styles/theme.ts':
      /*!*************************!*\
  !*** ./styles/theme.ts ***!
  \*************************/
      /*! exports provided: COLOR_BRAND, COLOR_WHITE, COLOR_GREY_LIGHT, COLOR_GREY, default */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        'use strict';
        __webpack_require__.r(__webpack_exports__);
        /* WEBPACK VAR INJECTION */ (function (module) {
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'COLOR_BRAND',
            function () {
              return COLOR_BRAND;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'COLOR_WHITE',
            function () {
              return COLOR_WHITE;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'COLOR_GREY_LIGHT',
            function () {
              return COLOR_GREY_LIGHT;
            }
          );
          /* harmony export (binding) */ __webpack_require__.d(
            __webpack_exports__,
            'COLOR_GREY',
            function () {
              return COLOR_GREY;
            }
          );
          var COLOR_BRAND = '#d5851d';
          var COLOR_WHITE = '#ffffff';
          var COLOR_GREY_LIGHT = '#CFD2D3';
          var COLOR_GREY = '#6c757d';
          var theme = {
            colors: {
              brand: COLOR_BRAND,
              white: COLOR_WHITE,
              greyLight: COLOR_GREY_LIGHT,
              grey: COLOR_GREY,
            },
            spacing: {
              navBarHeight: '5rem',
              small: '0.5rem',
              medium: '1rem',
              mediumLarge: '1.5rem',
              large: '2rem',
            },
          };
          /* harmony default export */ __webpack_exports__['default'] = theme;

          var _a, _b;
          // Legacy CSS implementations will `eval` browser code in a Node.js context
          // to extract CSS. For backwards compatibility, we need to check we're in a
          // browser context before continuing.
          if (
            typeof self !== 'undefined' &&
            // AMP / No-JS mode does not inject these helpers:
            '$RefreshHelpers$' in self
          ) {
            var currentExports_1 = module.__proto__.exports;
            var prevExports =
              (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !==
                null && _b !== void 0
                ? _b
                : null;
            // This cannot happen in MainTemplate because the exports mismatch between
            // templating and execution.
            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);
            // A module can be accepted automatically based on its exports, e.g. when
            // it is a Refresh Boundary.
            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {
              // Save the previous exports on update so we can compare the boundary
              // signatures.
              module.hot.dispose(function (data) {
                data.prevExports = currentExports_1;
              });
              // Unconditionally accept an update to this module, we'll check if it's
              // still a Refresh Boundary later.
              module.hot.accept();
              // This field is set when the previous version of this module was a
              // Refresh Boundary, letting us know we need to check for invalidation or
              // enqueue an update.
              if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (
                  self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(
                    prevExports,
                    currentExports_1
                  )
                ) {
                  module.hot.invalidate();
                } else {
                  self.$RefreshHelpers$.scheduleUpdate();
                }
              }
            } else {
              // Since we just executed the code for the module, it's possible that the
              // new exports made it ineligible for being a boundary.
              // We only care about the case when we were _previously_ a boundary,
              // because we already accepted this update (accidental side effect).
              var isNoLongerABoundary = prevExports !== null;
              if (isNoLongerABoundary) {
                module.hot.invalidate();
              }
            }
          }

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../node_modules/webpack/buildin/harmony-module.js */ './node_modules/webpack/buildin/harmony-module.js'
          )(module)
        ));

        /***/
      },

    /***/ 0:
      /*!********************************************************************************************************************************************!*\
  !*** multi next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx ./node_modules/next/dist/client/router.js ***!
  \********************************************************************************************************************************************/
      /*! no static exports found */
      /***/ function (module, exports, __webpack_require__) {
        __webpack_require__(
          /*! next-client-pages-loader?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx! */ './node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx!./'
        );
        module.exports = __webpack_require__(
          /*! F:\Projects\nidratech.com\node_modules\next\dist\client\router.js */ './node_modules/next/dist/client/router.js'
        );

        /***/
      },

    /***/ 'dll-reference dll_5030f387d328e4415785':
      /*!*******************************************!*\
  !*** external "dll_5030f387d328e4415785" ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function (module, exports) {
        module.exports = dll_5030f387d328e4415785;

        /***/
      },
  },
  [[0, 'static/runtime/webpack.js']],
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
